!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ledMatrix=e():t.ledMatrix=e()}(this,function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";r.r(e);class i{constructor(t){this._bitPerIndex=8,this._size=t.length,this._array=new Uint8Array(Math.ceil(this._size/this._bitPerIndex)),this._pointer=0,this.pushAll(t)}get size(){return this._size}push(t){if(this._pointer==this._size)throw`Bit array max size reached (${this._size})`;const e=this._createMask(this._pointer);this._matchesMask(e,this._array[this._arrayIndex(this._pointer)])?0===t&&(this._array[this._arrayIndex(this._pointer)]^=e):1===t&&(this._array[this._arrayIndex(this._pointer)]^=e),this._pointer++}pushAll(t){t.forEach(t=>{this.push(t)})}atIndex(t){if(t>this._size)throw`Index (${t}) exceeds the size of the bit array (${this._size})`;const e=this._createMask(t);return this._matchesMask(e,this._array[this._arrayIndex(t)])?1:0}atIndexRange(t,e){if(t+e-1>this._size)throw`Index (${t}) exceeds the size of the bit array (${this._size})`;const r=[];for(let i=0;i<e;i++){const e=this._createMask(t+i);r.push(this._matchesMask(e,this._array[this._arrayIndex(t+i)])?1:0)}return r}_matchesMask(t,e){return 0!=(t&e)}_createMask(t){return 1<<this._bitPerIndex-1-this._arrayIndexOffset(t)}_arrayIndex(t){return Math.floor(t/this._bitPerIndex)}_arrayIndexOffset(t){return t%this._bitPerIndex}}class n{constructor(t){this._characters=[],this.spacing=t.spacing,this.padding=t.padding}set spacing(t){if(null==t)throw"Board's spacing cannot be set to null";if(t<0)throw`Board's spacing cannot be set to a negative number (${t})`;this._spacing=t}get spacing(){return this._spacing}get input(){return this._input}set padding(t){t.forEach(e=>{if(null==e)throw"Board's padding cannot set to null";if(e<0)throw`Board's padding cannot be set to a negative number (${t})`}),1==t.length?this._padding=[t[0],t[0],t[0],t[0]]:2==t.length?this._padding=[t[0],t[1],t[0],t[1]]:this._padding=t}get padding(){return this._padding}get width(){return this._horizontalPaddingWidth()+this._totalSpacingWidth()+this._characters.map(t=>t.width).reduce((t,e)=>t+e)}get height(){return this._verticalPaddingWidth()+this._characters.reduce((t,e)=>e.height>t.height?e:t).height}getColumnAtIndex(t){if((t%=this.width)<this._padding[3]||t>=this.width-this._padding[1])return this._emptyArrayOfLength(this.height);let e,r=this._padding[3];return this._characters.some(i=>{if((r+=i.width)>t){const n=i.getColumn(t-(r-i.width));return e=this._emptyArrayOfLength(this._padding[0]).concat(n).concat(this._emptyArrayOfLength(this._padding[2])),!0}if((r+=this._spacing)>t)return e=this._emptyArrayOfLength(this.height),!0}),e}getRowAtIndex(t){if((t%=this.height)<this._padding[0]||t>=this.height-this._padding[2])return this._emptyArrayOfLength(this.width);let e=[].concat.apply([],this._characters.map(e=>e.getRow(t-this._padding[0]).concat(this._emptyArrayOfLength(this._spacing))));return e=e.slice(0,e.length-this._spacing),this._emptyArrayOfLength(this._padding[3]).concat(e).concat(this._emptyArrayOfLength(this._padding[1]))}load(t,e){this._characters=[];for(let r=0;r<t.length;r++){let i=t[r];if("~"===i){if(r==t.length-1)throw"No character escaped at the end of the string input";i=t[++r]}else if("["===i&&(0===r||"~"!==t[r-1]))do{if(i+=t[++r],r==t.length)throw`Could not find the end bracket for pattern ${i}. To escape the bracket, use ~`}while("]"!=t[r]);this._characters.push(e.find(i))}this._input=t}_horizontalPaddingWidth(){return this._padding[1]+this._padding[3]}_totalSpacingWidth(){return(this._characters.length-1)*this._spacing}_verticalPaddingWidth(){return this._padding[0]+this._padding[2]}_emptyArrayOfLength(t){return Array.apply(null,Array(t)).map(()=>0)}}class s{constructor(t,e,r){if(this._patterns=t,this._output=e,!(e.size>=r))throw`Output size (${e.size}) can't be smaller than the character's width (${r})`;if(this._width=r,e.size%r!=0)throw`Output size (${e.size}) must be divisible by the character's width (${r})`;this._height=e.size/r}getColumn(t){if(t<0)throw`Index (${t}) cannot be negative`;if(t>=this._width)throw`Index (${t}) is greater than the width of the character (${this._width})`;let e=[];for(let r=0;r<this._height;r++)e.push(this._output.atIndex(r*this._width+t));return e}getRow(t){if(t<0)throw`Index (${t}) cannot be negative`;if(t>=this._height)throw`Index (${t}) is greater than the height of the character (${this._height})`;let e=[];for(let r=0;r<this._width;r++)e.push(this._output.atIndex(t*this._width+r));return e}get width(){return this._width}get height(){return this._height}get patterns(){return this._patterns}get output(){return this._output}hasPattern(t){return this._patterns.indexOf(t)>=0}}class a{constructor(){this._characters=[]}find(t){const e=this._characters.filter(e=>e.hasPattern(t));if(e&&e.length>0)return e[0];throw`Could not find character ${t} in the alphabet`}get height(){return Math.max.apply(Math,this._characters.map(t=>t.height))}get length(){return this._characters.length}add(t){const e=[].concat.apply([],t.map(t=>t.patterns)),r=e.filter((t,e,r)=>r.indexOf(t)!=e);if(r.length>0)throw`Different characters cannot have the same patterns. Some of the characters pending to be added have the same patterns. The following patterns were identified as duplicates: ${r.join(", ")}`;if(this._characters.length>0){const t=[].concat.apply([],this._characters.map(t=>t.patterns)).filter(t=>-1!=e.indexOf(t));if(t.length>0)throw`Different characters cannot have the same patterns. One or more of the characters pending to be added has the same pattern as one or more already added characters. The following patterns were identified as duplicates: ${t.join(", ")}`}this._characters.push(...t)}}class h{static scale(t,e,r){const i=1/r,n=e*r,s=t.length/e*r;let a=new Array(n*s);for(let r=0;r<s;r++)for(let s=0;s<n;s++){const h=Math.floor(s*i),o=Math.floor(r*i);a[r*n+s]=t[o*e+h]}return a}}class o{static import(t,e,r){fetch(t).then(t=>t.text()).then(t=>{r(o.parse(t,e))}).catch(e=>{throw`Couldn't fetch file: ${t}`})}static export(){}static parse(t,e){if(e<1||e>10)throw"Size should be between 1 and 10";const r=JSON.parse(t);if(null==r)throw"Invalid character json file";if(null==r.characters)throw"Invalid character json file: Can't find property characters";return r.characters.map(t=>{if(null==t.patterns)throw"Invalid character json file: Can't find property patterns for a character";if(null==t.output)throw"Invalid character json file: Can't find property output for a character";if(null==t.width)throw"Invalid character json file: Can't find property width for a character";const r=t.output.map(t=>t),n=h.scale(r,t.width,e);return new s(t.patterns,new i(n),t.width*e)})}static stringify(t){return null==t||0==t.length?JSON.stringify(""):JSON.stringify({characters:t.map(t=>({patterns:t.patterns,output:t.output.atIndexRange(0,t.output.size),width:t.width}))})}}class d{constructor(){this.handlers=[]}on(t){this.handlers.push(t)}off(t){this.handlers=this.handlers.filter(e=>e!==t)}trigger(t){this.handlers.slice(0).forEach(e=>e(t))}expose(){return this}}class l{constructor(t){this.onPanelUpdate=new d,this.onReachingBoundary=new d,this.width=t.width,this.fps=t.fps,this._board=t.board,this.index=0,this._increment=t.increment,this.display=[],this._renderer=t.renderer,this._reverse=t.reverse}get PanelUpdate(){return this.onPanelUpdate.expose()}get ReachingBoundary(){return this.onReachingBoundary.expose()}set width(t){if(null==t)throw"Panel's width cannot be set to null";if(t<0)throw`Panel's width cannot be set to a negative number (${t})`;this._width=t}get width(){return this._width}set fps(t){if(null==t)throw"Panel's fps cannot be set to null";if(t<0)throw`Panel's fps cannot be set to a negative number (${t})`;if(t>60)throw"Panel's fps has to be lower than 60";this._fps=t,this._fpsInterval=1e3/this._fps}get fps(){return this._fps}set board(t){if(null==t)throw"Panel's board cannot be set to null";this._board=t}get board(){return this._board}set increment(t){if(null==t)throw"Panel's fps cannot be set to null";if(t<0)throw`Panel's fps cannot be set to a negative number (${t})`;this._increment=t}get increment(){return this._increment}set renderer(t){if(null==t)throw"Panel's renderer cannot be set to null";this._renderer=t}get renderer(){return this._renderer}set reverse(t){if(null==t)throw"Panel's reverse cannot be set to null";this._reverse=t}get reverse(){return this._reverse}play(){this.index=0,this._draw(),this._startLoop()}stop(){this.index=0,this._draw(),this._shouldUpdate=!1}resume(){this._startLoop()}pause(){this._shouldUpdate=!1}seek(t){if(null==t||t<0||t>this.indexUpperBound)throw`Seek expects a value between 0 and ${this.indexUpperBound}`;this.index=t,this._draw()}tick(){this._step()}_step(){this._tickIndex(),this._draw()}_draw(){this._resetPanel(),this._generateDisplay(this.index),this.onPanelUpdate.trigger({display:this.display}),this._renderer.render(this.display)}_tickIndex(){this._reverse?this._decrementIndex():this._incrementIndex()}_resetPanel(){this.display.splice(0,this.display.length);for(let t=0;t<this._board.height;t++)this.display.push(Array.apply(null,Array(this.width)).map(Number.prototype.valueOf,0))}_incrementIndex(){this.index>=this.indexUpperBound?(this.onReachingBoundary.trigger(),this.index=0):this.index+=this._increment}_decrementIndex(){0===this.index?(this.onReachingBoundary.trigger(),this.index=this.indexUpperBound):this.index-=this._increment}_startLoop(){this._then=Date.now(),this._startTime=this._then,this._shouldUpdate=!0,this._loop()}_loop(){requestAnimationFrame(this._loop.bind(this)),this._shouldUpdate&&this._onNextFrame(this._step.bind(this))}_onNextFrame(t){this._now=Date.now(),this._elapsed=this._now-this._then,this._elapsed>this._fpsInterval&&(this._then=this._now-this._elapsed%this._fpsInterval,t())}}class p extends l{constructor(t){super(t)}get indexUpperBound(){return this.board.width-1}_generateDisplay(t){for(let e=0;e<this.width;e++){let r;r=this.board.getColumnAtIndex(t+e);for(let t=0;t<this.board.height;t++)this.display[t][e]=r[t]}}}class c extends l{constructor(t){super(t)}get indexUpperBound(){return this.board.height-1}_generateDisplay(t){for(let e=0;e<this.board.height;e++){let r;r=this.board.getRowAtIndex(t+e),this.display[e]=r.slice(0,this.width)}}}var u,_,f;!function(t){t[t.SideScrollingPanel=0]="SideScrollingPanel",t[t.VerticalScrollingPanel=1]="VerticalScrollingPanel"}(u||(u={}));class g{static build(t,e){switch(t){case u.SideScrollingPanel:return new p(e);case u.VerticalScrollingPanel:return new c(e)}}}class m{constructor(t){if(null==t.element)throw"Could not find the element to render led matrix";this._parameters={element:t.element}}}class w extends m{constructor(t){super(t),this._parameters={element:t.element,colorBitOn:t.colorBitOn?t.colorBitOn:"#00B16A",colorBitOff:t.colorBitOff?t.colorBitOff:"#22313F",colorStrokeOn:t.colorStrokeOn?t.colorStrokeOn:"#67809F",colorStrokeOff:t.colorStrokeOff?t.colorStrokeOff:"#67809F"}}get parameters(){return this._parameters}get element(){return this._parameters.element}render(t){const e=this.element.getContext("2d");e.clearRect(0,0,this.element.width,this.element.height);const r=Math.floor(this.element.width/t[0].length),i=Math.floor(this.element.height/t.length);e.lineWidth=1;const n=(n,s,a)=>{e.strokeStyle=a,e.fillStyle=s,e.beginPath();for(var h=0;h<t.length;h++)for(var o=0;o<t[h].length;o++)t[h][o]==n&&(this.moveToNextBit(e,h,o,r,i),this.drawBit(e,h,o,r,i));e.fill(),e.stroke()};n(0,this._parameters.colorBitOff,this._parameters.colorStrokeOff),n(1,this._parameters.colorBitOn,this._parameters.colorStrokeOn)}}!function(t){t.Ellipse=class extends w{constructor(t){super(t)}moveToNextBit(t,e,r,i,n){t.moveTo(i*(r+1),n*(e+1)-n/2)}drawBit(t,e,r,i,n){const s=i/2,a=n/2;t.ellipse(i*r+s,n*e+a,s,a,0,0,2*Math.PI)}};t.Rect=class extends w{constructor(t){super(t)}drawBit(t,e,r,i,n){return t.rect(i*r,n*e,i,n)}moveToNextBit(t,e,r,i,n){}}}(_||(_={}));class y extends m{constructor(t){super(t),this._parameters={element:t.element,characterBitOn:t.characterBitOn?t.characterBitOn:"X",characterBitOff:t.characterBitOff?t.characterBitOff:" "}}get parameters(){return this._parameters}render(t){let e="";for(var r=0;r<t.length;r++){for(var i=0;i<t[r].length;i++)e+=1==t[r][i]?this._parameters.characterBitOn:this._parameters.characterBitOff;e+="\n"}this._parameters.element.innerHTML=e}}!function(t){t[t.ASCII=0]="ASCII",t[t.CanvasSquare=1]="CanvasSquare",t[t.CanvasCircle=2]="CanvasCircle"}(f||(f={}));class b{static build(t,e){switch(t){case f.ASCII:return new y({element:e});case f.CanvasSquare:return new _.Rect({element:e});case f.CanvasCircle:return new _.Ellipse({element:e})}}}class x{constructor(t){this.onReady=new d,this._params=this._validateParameters(t),this._board=new n({spacing:this._params.spacing,padding:this._params.padding}),this._panelType=this._params.panelType,this._panel=g.build(this._params.panelType,{board:this._board,renderer:this._params.renderer,fps:this._params.fps,increment:this._params.increment,reverse:this._params.reverse,width:this._params.panelWidth}),this.event={panelUpdate:this._panel.PanelUpdate,reachingBoundary:this._panel.ReachingBoundary,ready:this.Ready}}get Ready(){return this.onReady.expose()}init(t,e){o.import(this._params.pathCharacters,t||1,t=>{this._dictionary=new a,this._dictionary.add(t),this._board.load(null!=this._board.input?this._board.input:this._params.input,this._dictionary),this._panel.play(),this.onReady.trigger(),e&&e()})}get size(){return this._size}set size(t){this._size=t,this.init(t)}get index(){return this._panel.index}set spacing(t){this._board.spacing=t,this._panel.board=this._board}get spacing(){return this._board.spacing}set padding(t){this._board.padding=t,this._panel.board=this._board}get padding(){return this._board.padding}get width(){return this._board.width}get height(){return this._board.height}set input(t){this._board.load(t,this._dictionary)}get input(){return this._board.input}play(){this._panel.play()}stop(){this._panel.stop()}pause(){this._panel.pause()}resume(){this._panel.resume()}tick(){this._panel.tick()}seek(t){this._panel.seek(t)}set panelType(t){this._panelType=t,this._panel.stop(),this._panel=g.build(this._panelType,{board:this._board,renderer:this._panel.renderer,fps:this._panel.fps,increment:this._panel.increment,reverse:this._panel.reverse,width:this._panel.width}),this._panel.play()}get panelType(){return this._panelType}set renderer(t){this._panel.renderer=t}setRendererFromBuilder(t){this._panel.renderer=b.build(t.rendererType,t.element)}get renderer(){return this._panel.renderer}set fps(t){this._panel.fps=t}get fps(){return this._panel.fps}set increment(t){this._panel.increment=t}get increment(){return this._panel.increment}set reverse(t){this._panel.reverse=t}get reverse(){return this._panel.reverse}set viewportWidth(t){this._panel.width=t}get viewportWidth(){return this._panel.width}_validateParameters(t){const e={input:"Hello World",pathCharacters:"alphabet.json",fps:30,increment:1,panelType:u.SideScrollingPanel,rendererType:f.ASCII,element:document.getElementById("led-matrix"),reverse:!1,panelWidth:80,spacing:2,padding:[0,4]};return t?(t.input=this._valueOrDefault(t.input,e.input),t.pathCharacters=this._valueOrDefault(t.pathCharacters,e.pathCharacters),t.spacing=this._valueOrDefault(t.spacing,e.spacing),t.padding=this._valueOrDefault(t.padding,e.padding),t.fps=this._valueOrDefault(t.fps,e.fps),t.increment=this._valueOrDefault(t.increment,e.increment),t.panelType=this._valueOrDefault(t.panelType,e.panelType),t.reverse=this._valueOrDefault(t.reverse,e.reverse),t.panelWidth=this._valueOrDefault(t.panelWidth,e.panelWidth),null!=t.renderer?t.renderer=t.renderer:(t.rendererType=this._valueOrDefault(t.rendererType,e.rendererType),t.element=this._valueOrDefault(t.element,e.element),t.renderer=b.build(t.rendererType,t.element)),t):e}_valueOrDefault(t,e){return t||e}}r.d(e,"BitArray",function(){return i}),r.d(e,"Board",function(){return n}),r.d(e,"Character",function(){return s}),r.d(e,"CharacterDictionary",function(){return a}),r.d(e,"CharactersJSON",function(){return o}),r.d(e,"NearestNeighbor",function(){return h}),r.d(e,"Event",function(){return d}),r.d(e,"LedMatrix",function(){return x}),r.d(e,"Panel",function(){return l}),r.d(e,"PanelType",function(){return u}),r.d(e,"PanelBuilder",function(){return g}),r.d(e,"SideScrollingPanel",function(){return p}),r.d(e,"VerticalScrollingPanel",function(){return c}),r.d(e,"AsciiRenderer",function(){return y}),r.d(e,"CanvaRenderer",function(){return w}),r.d(e,"CanvaRenderers",function(){return _}),r.d(e,"Renderer",function(){return m})}])});
//# sourceMappingURL=led-matrix.min.js.map