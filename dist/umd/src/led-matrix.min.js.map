{"version":3,"sources":["webpack://ledMatrix/webpack/universalModuleDefinition","webpack://ledMatrix/webpack/bootstrap","webpack://ledMatrix/./dist/esm/lib/core/character.js","webpack://ledMatrix/./dist/esm/lib/utils/bit-array.js","webpack://ledMatrix/./dist/esm/lib/core/character-sizer.js","webpack://ledMatrix/./dist/esm/lib/utils/event.js","webpack://ledMatrix/./dist/esm/lib/core/board.js","webpack://ledMatrix/./dist/esm/lib/core/character-dictionary.js","webpack://ledMatrix/./dist/esm/lib/core/character-json.js","webpack://ledMatrix/./dist/esm/lib/utils/exception.js","webpack://ledMatrix/./dist/esm/lib/core/panel.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/side-scrolling-panel.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/vertical-scrolling-panel.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/scroller-builder.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/canva-renderers.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/renderer-builder.js","webpack://ledMatrix/./dist/esm/lib/core/led-matrix.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/renderer.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/canva-renderer.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/ascii-renderer.js","webpack://ledMatrix/./dist/esm/lib/player/panel-player.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Character","constructor","pattern","output","width","_pattern","_output","size","_width","_height","getColumn","index","column","push","atIndex","getRow","row","height","hasPattern","input","BitArray","values","_bitPerIndex","_size","length","_array","Uint8Array","Math","ceil","_pointer","pushAll","mask","_createMask","_matchesMask","_arrayIndex","forEach","atIndexRange","count","_arrayIndexOffset","floor","NearestNeighbor","[object Object]","matrix","factor","ratio","w2","h2","finalMatrix","Array","j","px","py","Event","handlers","on","handler","off","filter","h","trigger","data","slice","expose","board_Board","params","onPropertyChange","_characters","_letterSpacing","letterSpacing","padding","PropertyChange","characters","_input","x","_padding","paddingAndSpacingWidth","_horizontalPaddingWidth","_totalSpacingWidth","map","character","reduce","accumulator","current","_verticalPaddingWidth","getColumnAtIndex","_createBitOffArrayOfLength","toReturn","some","characterColumn","concat","getRowAtIndex","charactersWithSpace","apply","load","dictionnary","delimiterWord","characterBuffer","find","scale","CharacterDictionary","max","add","pendingCharacters","pendingPatterns","array","indexOf","edit","pendingCharacter","edited","arr","delete","deleted","splice","character_json_CharactersJSON","path","success","fetch","then","response","text","parse","catch","error","json","JSON","stringify","patterns","Exception","valueDescription","rangeFrom","rangeTo","className","methodName","panel_Panel","CLASS_NAME","_initiated","onNewSequence","_params","updateCurrentSequence","board","NewSequence","increment","reverse","scroller","widthDescription","getDescriptionForProperty","throwIfNull","throwIfNegative","fpsDescription","reverseDescription","GetCurrentSequence","sequence","panelIndex","indexUpperBound","_tickPanelIndex","generatePanelFrameAtIndex","_decrementIndex","_incrementIndex","SideScrollingPanel","currentIndex","columns","display","VerticalScrollingPanel","scroller_builder_ScrollerType","canva_renderers_CanvaRenderers","renderer_builder_RendererType","ScrollerType","scroller_builder_ScrollerBuilder","scrollerType","led_matrix_LedMatrix","onReady","_validateParameters","_scrollerType","_panel","panelWidth","build","event","newSequence","_dictionary","Ready","addCharacters","addCharacter","editCharacter","deleteCharacter","loadedCharacters","usedCharacters","spacing","viewportWidth","defaultParams","_valueOrDefault","defaultValue","Renderer","parameters","render","_parameters","element","document","getElementById","elementId","clientHeight","clientWidth","canva_renderer_CanvaRenderer","super","colorBitOn","colorBitOff","colorStrokeOn","colorStrokeOff","ctx","getContext","clearRect","widthEachBit","heightEachBit","lineWidth","renderBitsOfValue","fillColor","strokeColor","strokeStyle","fillStyle","beginPath","moveToNextBit","drawBit","fill","stroke","CanvaRenderers","Ellipse","w","moveTo","radW","radH","ellipse","PI","Rect","context","rect","ascii_renderer_AsciiRenderer","characterBitOn","characterBitOff","innerHTML","RendererType","renderer_builder_RendererBuilder","rendererType","ASCII","CanvasSquare","CanvasCircle","panel_player_PanelPlayer","onPanelUpdate","onReachingBoundary","_index","fps","_renderer","renderer","_sequence","PanelUpdate","ReachingBoundary","_fps","throwIfNotBetween","_fpsIntervalLengthInMs","_render","play","_startLoop","stop","_shouldUpdate","resume","pause","step","_nextPanelFrame","seek","frame","seekDescription","setRendererFromBuilder","_then","Date","now","_loop","requestAnimationFrame","bind","_callIfReadyForNextFrame","callback","_now","_elapsed"],"mappings":"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","file":"./src/led-matrix.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ledMatrix\"] = factory();\n\telse\n\t\troot[\"ledMatrix\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Character {\n    constructor(pattern, output, width) {\n        this._pattern = pattern;\n        this._output = output;\n        if (output.size >= width) {\n            this._width = width;\n        }\n        else {\n            throw `Output size (${output.size}) can't be smaller than the character's width (${width})`;\n        }\n        if (output.size % width === 0) {\n            this._height = output.size / width;\n        }\n        else {\n            throw `Output size (${output.size}) must be divisible by the character's width (${width})`;\n        }\n    }\n    getColumn(index) {\n        if (index < 0) {\n            throw `Index (${index}) cannot be negative`;\n        }\n        if (index >= this._width) {\n            throw `Index (${index}) is greater than the width of the character (${this._width})`;\n        }\n        let column = [];\n        for (let i = 0; i < this._height; i++) {\n            column.push(this._output.atIndex(i * this._width + index));\n        }\n        return column;\n    }\n    getRow(index) {\n        if (index < 0) {\n            throw `Index (${index}) cannot be negative`;\n        }\n        if (index >= this._height) {\n            throw `Index (${index}) is greater than the height of the character (${this._height})`;\n        }\n        let row = [];\n        for (let i = 0; i < this._width; i++) {\n            row.push(this._output.atIndex(index * this._width + i));\n        }\n        return row;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    get output() {\n        return this._output;\n    }\n    hasPattern(input) {\n        return this._pattern == input;\n    }\n}\n;\n//# sourceMappingURL=character.js.map","export default class BitArray {\n    constructor(values) {\n        this._bitPerIndex = 8;\n        this._size = values.length;\n        this._array = new Uint8Array(Math.ceil(this._size / this._bitPerIndex));\n        this._pointer = 0;\n        this.pushAll(values);\n    }\n    get size() {\n        return this._size;\n    }\n    push(value) {\n        if (this._pointer == this._size) {\n            throw `Bit array max size reached (${this._size})`;\n        }\n        const mask = this._createMask(this._pointer);\n        if (this._matchesMask(mask, this._array[this._arrayIndex(this._pointer)])) {\n            if (value === 0) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        else {\n            if (value === 1) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        this._pointer++;\n    }\n    pushAll(values) {\n        values.forEach((value) => {\n            this.push(value);\n        });\n    }\n    atIndex(index) {\n        if (index > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const mask = this._createMask(index);\n        return this._matchesMask(mask, this._array[this._arrayIndex(index)]) ? 1 : 0;\n    }\n    atIndexRange(index, count) {\n        if (index + count - 1 > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const values = [];\n        for (let i = 0; i < count; i++) {\n            const mask = this._createMask(index + i);\n            values.push(this._matchesMask(mask, this._array[this._arrayIndex(index + i)]) ? 1 : 0);\n        }\n        return values;\n    }\n    _matchesMask(mask, value) {\n        return (mask & value) != 0;\n    }\n    _createMask(index) {\n        return 1 << (this._bitPerIndex - 1) - this._arrayIndexOffset(index);\n    }\n    _arrayIndex(index) {\n        return Math.floor(index / this._bitPerIndex);\n    }\n    _arrayIndexOffset(index) {\n        return index % this._bitPerIndex;\n    }\n}\n;\n//# sourceMappingURL=bit-array.js.map","export class NearestNeighbor {\n    static scale(matrix, width, factor) {\n        const ratio = 1 / factor;\n        const h1 = matrix.length / width;\n        const w2 = width * factor;\n        const h2 = h1 * factor;\n        let finalMatrix = new Array(w2 * h2);\n        for (let i = 0; i < h2; i++) {\n            for (let j = 0; j < w2; j++) {\n                const px = Math.floor(j * ratio);\n                const py = Math.floor(i * ratio);\n                finalMatrix[(i * w2) + j] = matrix[(py * width) + px];\n            }\n        }\n        return finalMatrix;\n    }\n}\n//# sourceMappingURL=character-sizer.js.map","export class Event {\n    constructor() {\n        this.handlers = [];\n    }\n    on(handler) {\n        this.handlers.push(handler);\n    }\n    off(handler) {\n        this.handlers = this.handlers.filter(h => h !== handler);\n    }\n    trigger(data) {\n        this.handlers.slice(0).forEach(h => h(data));\n    }\n    expose() {\n        return this;\n    }\n}\n//# sourceMappingURL=event.js.map","import Character from './character';\nimport BitArray from '../utils/bit-array';\nimport { NearestNeighbor } from \"./character-sizer\";\nimport { Event } from '../utils/event';\nexport default class Board {\n    constructor(params) {\n        this.onPropertyChange = new Event();\n        this._characters = [];\n        this._letterSpacing = params.letterSpacing;\n        this.padding = params.padding;\n        this._size = params.size;\n        this.onPropertyChange.trigger();\n    }\n    get PropertyChange() { return this.onPropertyChange.expose(); }\n    set letterSpacing(value) {\n        if (value == null) {\n            throw `Board's spacing cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Board's spacing cannot be set to a negative number (${value})`;\n        }\n        this._letterSpacing = value;\n        this.onPropertyChange.trigger();\n    }\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n    get characters() {\n        return this._characters;\n    }\n    get input() {\n        return this._input;\n    }\n    get size() {\n        return this._size;\n    }\n    set padding(value) {\n        value.forEach(x => {\n            if (x == null) {\n                throw `Board's padding cannot set to null`;\n            }\n            if (x < 0) {\n                throw `Board's padding cannot be set to a negative number (${value})`;\n            }\n        });\n        if (value.length == 1) {\n            this._padding = [value[0], value[0], value[0], value[0]];\n        }\n        else if (value.length == 2) {\n            this._padding = [value[0], value[1], value[0], value[1]];\n        }\n        else {\n            this._padding = value;\n        }\n        this.onPropertyChange.trigger();\n    }\n    get padding() {\n        return this._padding;\n    }\n    get width() {\n        const paddingAndSpacingWidth = this._horizontalPaddingWidth() + this._totalSpacingWidth();\n        if (this._characters.length > 0) {\n            return paddingAndSpacingWidth + this._characters\n                .map(character => character.width)\n                .reduce((accumulator, current) => accumulator + current);\n        }\n        else {\n            return paddingAndSpacingWidth;\n        }\n    }\n    get height() {\n        if (this._characters.length > 0) {\n            return this._verticalPaddingWidth() +\n                this._characters\n                    .reduce((accumulator, current) => current.height > accumulator.height ? current : accumulator).height;\n        }\n        else {\n            return this._verticalPaddingWidth();\n        }\n    }\n    getColumnAtIndex(index) {\n        index %= this.width;\n        if (index < this._padding[3] || index >= this.width - this._padding[1]) {\n            return this._createBitOffArrayOfLength(this.height + this._verticalPaddingWidth());\n        }\n        let accumulator = this._padding[3];\n        let toReturn;\n        this._characters.some((character) => {\n            accumulator += character.width;\n            if (accumulator > index) {\n                const characterColumn = character.getColumn(index - (accumulator - character.width));\n                toReturn = this._createBitOffArrayOfLength(this._padding[0])\n                    .concat(characterColumn)\n                    .concat(this._createBitOffArrayOfLength(this._padding[2]))\n                    .concat(characterColumn.length < this.height ? this._createBitOffArrayOfLength(this.height - characterColumn.length) : []);\n                return true;\n            }\n            accumulator += this._letterSpacing;\n            if (accumulator > index) {\n                toReturn = this._createBitOffArrayOfLength(this.height + this._verticalPaddingWidth());\n                return true;\n            }\n        });\n        return toReturn;\n    }\n    getRowAtIndex(index) {\n        index %= this.height;\n        if (index < this._padding[0] || index >= this.height - this._padding[2]) {\n            return this._createBitOffArrayOfLength(this.width);\n        }\n        let charactersWithSpace = [].concat.apply([], this._characters.map(x => x.getRow(index - this._padding[0]).concat(this._createBitOffArrayOfLength(this._letterSpacing))));\n        charactersWithSpace = charactersWithSpace.slice(0, charactersWithSpace.length - this._letterSpacing);\n        return this._createBitOffArrayOfLength(this._padding[3])\n            .concat(charactersWithSpace)\n            .concat(this._createBitOffArrayOfLength(this._padding[1]));\n    }\n    load(input, dictionnary, size = 1) {\n        const escapeCharacter = '\\\\';\n        const delimiterWord = {\n            start: \"(\",\n            end: \")\"\n        };\n        this._characters = [];\n        this._size = size;\n        for (let i = 0; i < input.length; i++) {\n            let characterBuffer = input[i];\n            if (characterBuffer === escapeCharacter) {\n                if (i == input.length - 1) {\n                    throw `No character escaped at the end of the string input`;\n                }\n                characterBuffer = input[++i];\n            }\n            else if (characterBuffer === delimiterWord.start && (i === 0 || input[i - 1] !== escapeCharacter)) {\n                do {\n                    characterBuffer += input[++i];\n                    if (i == input.length) {\n                        throw `Could not find the ending delimiter \"${delimiterWord.end}\" for pattern ${characterBuffer}`;\n                    }\n                } while (input[i] != delimiterWord.end);\n                characterBuffer = characterBuffer.slice(1, -1);\n            }\n            const character = dictionnary.find(characterBuffer);\n            this._characters.push(new Character(character.pattern, new BitArray(NearestNeighbor.scale(character.output.atIndexRange(0, character.output.size), character.width, this._size)), character.width * this._size));\n        }\n        this._input = input;\n        this.onPropertyChange.trigger();\n    }\n    _horizontalPaddingWidth() {\n        return this._padding[1] + this._padding[3];\n    }\n    _totalSpacingWidth() {\n        return (this._characters.length - 1) * this._letterSpacing;\n    }\n    _verticalPaddingWidth() {\n        return this._padding[0] + this._padding[2];\n    }\n    _createBitOffArrayOfLength(length) {\n        return Array.apply(null, Array(length)).map(() => 0);\n    }\n}\n;\n//# sourceMappingURL=board.js.map","export default class CharacterDictionary {\n    constructor() {\n        this._characters = [];\n    }\n    find(input) {\n        const character = this._characters.filter(x => x.hasPattern(input));\n        if (character && character.length > 0) {\n            return character[0];\n        }\n        throw `Could not find character ${input} in the alphabet`;\n    }\n    get characters() {\n        return this._characters;\n    }\n    get height() {\n        return Math.max.apply(Math, this._characters.map(x => x.height));\n    }\n    get length() {\n        return this._characters.length;\n    }\n    add(pendingCharacters) {\n        const pendingPatterns = pendingCharacters.map(x => x.pattern);\n        const duplicatedPendingPatterns = pendingPatterns.filter((value, index, array) => {\n            return array.indexOf(value) != index;\n        });\n        if (duplicatedPendingPatterns.length > 0) {\n            throw `Pattern already used by another pending character`;\n        }\n        if (this._characters.length > 0) {\n            const alreadyAddedPatterns = this._characters.map(x => x.pattern);\n            const duplicatedPatterns = alreadyAddedPatterns.filter((value) => {\n                return pendingPatterns.indexOf(value) != -1;\n            });\n            if (duplicatedPatterns.length > 0) {\n                throw `Pattern already used by another character`;\n            }\n        }\n        this._characters.push(...pendingCharacters);\n    }\n    edit(pendingCharacter) {\n        let edited = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !edited) {\n                arr[index] = pendingCharacter;\n                edited = true;\n            }\n        });\n        if (!edited) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted edit operation`;\n        }\n    }\n    delete(pendingCharacter) {\n        let deleted = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !deleted) {\n                arr.splice(index, 1);\n                deleted = true;\n            }\n        });\n        if (!deleted) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted delete operation`;\n        }\n    }\n}\n;\n//# sourceMappingURL=character-dictionary.js.map","import Character from \"./character\";\nimport BitArray from \"../utils/bit-array\";\nexport class CharactersJSON {\n    static import(path, success) {\n        fetch(path)\n            .then((response) => {\n            return response.text();\n        })\n            .then((response) => {\n            success(CharactersJSON.parse(response));\n        })\n            .catch((error) => {\n            throw `Couldn't fetch file: ${path}`;\n        });\n    }\n    static export() {\n    }\n    static parse(json) {\n        const data = JSON.parse(json);\n        if (data == null) {\n            throw 'Invalid character json file';\n        }\n        if (data.characters == null) {\n            throw 'Invalid character json file: Can\\'t find property characters';\n        }\n        return data.characters.map(x => {\n            if (x.pattern == null) {\n                throw 'Invalid character json file: Can\\'t find property patterns for a character';\n            }\n            if (x.output == null) {\n                throw 'Invalid character json file: Can\\'t find property output for a character';\n            }\n            if (x.width == null) {\n                throw 'Invalid character json file: Can\\'t find property width for a character';\n            }\n            return new Character(x.pattern, new BitArray(x.output.map(x => x)), x.width);\n        });\n    }\n    static stringify(characters) {\n        if (characters == null || characters.length == 0) {\n            return JSON.stringify(\"\");\n        }\n        return JSON.stringify({\n            characters: characters.map(x => {\n                return {\n                    patterns: x.pattern,\n                    output: x.output.atIndexRange(0, x.output.size),\n                    width: x.width\n                };\n            })\n        });\n    }\n}\n//# sourceMappingURL=character-json.js.map","export class Exception {\n    static throwIfNull(value, valueDescription) {\n        if (value == null) {\n            throw `${valueDescription} property cannot be set to null`;\n        }\n    }\n    static throwIfNegative(value, valueDescription) {\n        if (value < 0) {\n            throw `${valueDescription} property cannot be set to a negative number (${value})`;\n        }\n    }\n    static throwIfNotBetween(value, valueDescription, rangeFrom, rangeTo) {\n        if (value < rangeFrom || value > rangeTo) {\n            throw `Seek expects a value between ${rangeFrom} and ${rangeTo}`;\n        }\n    }\n    static getDescriptionForProperty(className, methodName) {\n        return `${className}'s ${methodName}`;\n    }\n}\n//# sourceMappingURL=exception.js.map","import { Exception } from '../utils/exception';\nimport { Event } from '../utils/event';\nexport class Panel {\n    constructor(params) {\n        this.CLASS_NAME = Panel.name;\n        this._initiated = false;\n        this.onNewSequence = new Event();\n        this._params = params;\n        this._initiated = true;\n        this.updateCurrentSequence();\n        this._params.board.PropertyChange.on(() => {\n            this.updateCurrentSequence();\n        });\n    }\n    get NewSequence() { return this.onNewSequence.expose(); }\n    get width() {\n        return this._params.width;\n    }\n    get board() {\n        return this._params.board;\n    }\n    get increment() {\n        return this._params.increment;\n    }\n    get reverse() {\n        return this._params.reverse;\n    }\n    get scroller() {\n        return this._params.scroller;\n    }\n    set width(value) {\n        const widthDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'width');\n        Exception.throwIfNull(value, widthDescription);\n        Exception.throwIfNegative(value, widthDescription);\n        if (this._params.width != value) {\n            this._params.width = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set board(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'board'));\n        if (this._params.board != value) {\n            this._params.board = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set increment(value) {\n        const fpsDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'fps');\n        Exception.throwIfNull(value, fpsDescription);\n        Exception.throwIfNegative(value, fpsDescription);\n        if (this._params.increment != value) {\n            this._params.increment = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set reverse(value) {\n        const reverseDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'reverse');\n        Exception.throwIfNull(value, reverseDescription);\n        if (value != this._params.reverse) {\n            this._params.reverse = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set scroller(value) {\n        const reverseDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'reverse');\n        Exception.throwIfNull(value, reverseDescription);\n        if (value != this._params.scroller) {\n            this._params.scroller = value;\n            this.updateCurrentSequence();\n        }\n    }\n    GetCurrentSequence() {\n        let sequence = [];\n        let panelIndex = 0;\n        for (let i = 0; i <= this._params.scroller.indexUpperBound(this._params); i++) {\n            panelIndex = this._tickPanelIndex(panelIndex);\n            sequence.push(this._params.scroller.generatePanelFrameAtIndex(panelIndex, this._params));\n        }\n        return sequence;\n    }\n    updateCurrentSequence() {\n        if (this._initiated) {\n            const sequence = this.GetCurrentSequence();\n            this.onNewSequence.trigger({ sequence });\n        }\n    }\n    _tickPanelIndex(index) {\n        return this._params.reverse ? this._decrementIndex(index) : this._incrementIndex(index);\n    }\n    _incrementIndex(index) {\n        return index >= this._params.scroller.indexUpperBound(this._params) ? 0 : index + this._params.increment;\n    }\n    _decrementIndex(index) {\n        return index === 0 ? this._params.scroller.indexUpperBound(this._params) : index - this._params.increment;\n    }\n}\n;\n//# sourceMappingURL=panel.js.map","export default class SideScrollingPanel {\n    indexUpperBound(params) {\n        return params.board.width - 1;\n    }\n    generatePanelFrameAtIndex(currentIndex, params) {\n        let columns = [];\n        for (let i = 0; i < params.width; i++) {\n            columns.push(params.board.getColumnAtIndex(currentIndex + i));\n        }\n        let display = [];\n        for (let i = 0; i < columns[0].length; i++) {\n            display.push(columns.map(x => x[i]));\n        }\n        return display;\n    }\n}\n//# sourceMappingURL=side-scrolling-panel.js.map","export default class VerticalScrollingPanel {\n    indexUpperBound(params) {\n        return params.board.height - 1;\n    }\n    generatePanelFrameAtIndex(currentIndex, params) {\n        let display = [];\n        for (let i = 0; i < params.board.height; i++) {\n            let row;\n            row = params.board.getRowAtIndex(currentIndex + i);\n            display.push(row.slice(0, params.width));\n        }\n        return display;\n    }\n}\n//# sourceMappingURL=vertical-scrolling-panel.js.map","import SideScrollingPanel from \"./side-scrolling-panel\";\nimport VerticalScrollingPanel from \"./vertical-scrolling-panel\";\nexport var ScrollerType;\n(function (ScrollerType) {\n    ScrollerType[ScrollerType[\"SideScrollingPanel\"] = 0] = \"SideScrollingPanel\";\n    ScrollerType[ScrollerType[\"VerticalScrollingPanel\"] = 1] = \"VerticalScrollingPanel\";\n})(ScrollerType || (ScrollerType = {}));\nexport class ScrollerBuilder {\n    static build(scrollerType) {\n        switch (scrollerType) {\n            case ScrollerType.SideScrollingPanel:\n                return new SideScrollingPanel();\n            case ScrollerType.VerticalScrollingPanel:\n                return new VerticalScrollingPanel();\n        }\n    }\n}\n//# sourceMappingURL=scroller-builder.js.map","import { CanvaRenderer } from \"./canva-renderer\";\nexport var CanvaRenderers;\n(function (CanvaRenderers) {\n    class Ellipse extends CanvaRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n            ctx.moveTo(w * (j + 1), h * (i + 1) - h / 2);\n        }\n        drawBit(ctx, i, j, w, h) {\n            const radW = w / 2;\n            const radH = h / 2;\n            ctx.ellipse(w * j + radW, h * i + radH, radW, radH, 0, 0, 2 * Math.PI);\n        }\n    }\n    CanvaRenderers.Ellipse = Ellipse;\n    class Rect extends CanvaRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        drawBit(context, i, j, w, h) {\n            return context.rect(w * j, h * i, w, h);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n        }\n    }\n    CanvaRenderers.Rect = Rect;\n})(CanvaRenderers || (CanvaRenderers = {}));\n//# sourceMappingURL=canva-renderers.js.map","import { CanvaRenderers } from \"./canva-renderers\";\nimport AsciiRenderer from \"./ascii-renderer\";\nexport var RendererType;\n(function (RendererType) {\n    RendererType[RendererType[\"ASCII\"] = 0] = \"ASCII\";\n    RendererType[RendererType[\"CanvasSquare\"] = 1] = \"CanvasSquare\";\n    RendererType[RendererType[\"CanvasCircle\"] = 2] = \"CanvasCircle\";\n})(RendererType || (RendererType = {}));\nexport class RendererBuilder {\n    static build(rendererType, elementId) {\n        switch (rendererType) {\n            case RendererType.ASCII:\n                return new AsciiRenderer({\n                    elementId: elementId\n                });\n            case RendererType.CanvasSquare:\n                return new CanvaRenderers.Rect({\n                    elementId: elementId\n                });\n            case RendererType.CanvasCircle:\n                return new CanvaRenderers.Ellipse({\n                    elementId: elementId\n                });\n        }\n    }\n}\n//# sourceMappingURL=renderer-builder.js.map","import Board from \"./board\";\nimport { Panel } from \"./panel\";\nimport { ScrollerBuilder, ScrollerType } from \"./scrollers/scroller-builder\";\nimport { Event } from \"../utils/event\";\nimport CharacterDictionary from \"./character-dictionary\";\nexport class LedMatrix {\n    constructor(params) {\n        this.onReady = new Event();\n        this._params = this._validateParameters(params);\n        this._scrollerType = this._params.scrollerType;\n        this._panel = new Panel({\n            board: new Board({\n                letterSpacing: this._params.letterSpacing,\n                padding: this._params.padding,\n                size: this._params.size\n            }),\n            increment: this._params.increment,\n            reverse: this._params.reverse,\n            width: this._params.panelWidth,\n            scroller: ScrollerBuilder.build(this._params.scrollerType)\n        });\n        this.event = {\n            newSequence: this._panel.NewSequence\n        };\n        this._dictionary = new CharacterDictionary();\n    }\n    get Ready() { return this.onReady.expose(); }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n        this._panel.board.load(this.input, this._dictionary, this.size);\n    }\n    get indexUpperBound() {\n        return this._panel.scroller.indexUpperBound(this._panel);\n    }\n    addCharacters(characters) {\n        this._dictionary.add(characters);\n    }\n    addCharacter(character) {\n        this._dictionary.add([character]);\n    }\n    editCharacter(character) {\n        this._dictionary.edit(character);\n    }\n    deleteCharacter(character) {\n        this._dictionary.delete(character);\n    }\n    get loadedCharacters() {\n        return this._dictionary.characters;\n    }\n    get usedCharacters() {\n        return this._panel.board.characters;\n    }\n    set spacing(value) {\n        this._panel.board.letterSpacing = value;\n    }\n    get spacing() {\n        return this._panel.board.letterSpacing;\n    }\n    set padding(value) {\n        this._panel.board.padding = value;\n    }\n    get padding() {\n        return this._panel.board.padding;\n    }\n    get width() {\n        return this._panel.board.width;\n    }\n    get height() {\n        return this._panel.board.height;\n    }\n    set input(value) {\n        this._panel.board.load(value, this._dictionary);\n    }\n    get input() {\n        return this._panel.board.input;\n    }\n    get sequence() {\n        return this._panel.GetCurrentSequence();\n    }\n    set scrollerType(value) {\n        this._scrollerType = value;\n        this._panel.scroller = ScrollerBuilder.build(value);\n    }\n    get scrollerType() {\n        return this._scrollerType;\n    }\n    get reverse() {\n        return this._panel.reverse;\n    }\n    set increment(value) {\n        this._panel.increment = value;\n    }\n    get increment() {\n        return this._panel.increment;\n    }\n    set reverse(value) {\n        this._panel.reverse = value;\n    }\n    set viewportWidth(value) {\n        this._panel.width = value;\n    }\n    get viewportWidth() {\n        return this._panel.width;\n    }\n    _validateParameters(params) {\n        let defaultParams = {\n            increment: 1,\n            scrollerType: ScrollerType.SideScrollingPanel,\n            reverse: false,\n            panelWidth: 80,\n            letterSpacing: 2,\n            padding: [0, 4],\n            size: 1\n        };\n        if (params) {\n            params.letterSpacing = this._valueOrDefault(params.letterSpacing, defaultParams.letterSpacing);\n            params.padding = this._valueOrDefault(params.padding, defaultParams.padding);\n            params.size = this._valueOrDefault(params.size, defaultParams.size);\n            params.increment = this._valueOrDefault(params.increment, defaultParams.increment);\n            params.scrollerType = this._valueOrDefault(params.scrollerType, defaultParams.scrollerType);\n            ;\n            params.reverse = this._valueOrDefault(params.reverse, defaultParams.reverse);\n            params.panelWidth = this._valueOrDefault(params.panelWidth, defaultParams.panelWidth);\n            return params;\n        }\n        return defaultParams;\n    }\n    _valueOrDefault(value, defaultValue) {\n        return value ? value : defaultValue;\n    }\n}\n//# sourceMappingURL=led-matrix.js.map","export class Renderer {\n    constructor(parameters) {\n    }\n    render(display) {\n        if (this._parameters.element == null) {\n            this._parameters.element = document.getElementById(this._parameters.elementId);\n            if (this._parameters.element == null) {\n                throw `Could not find the element to render led matrix`;\n            }\n        }\n        else {\n            if (this._parameters.element.clientHeight == 0 || this._parameters.element.clientWidth == 0) {\n                this._parameters.element = document.getElementById(this._parameters.elementId);\n            }\n        }\n    }\n}\n//# sourceMappingURL=renderer.js.map","import { Renderer } from \"./renderer\";\nexport class CanvaRenderer extends Renderer {\n    constructor(parameters) {\n        super(parameters);\n        this._parameters = {\n            elementId: parameters.elementId,\n            element: parameters.element,\n            colorBitOn: parameters.colorBitOn ? parameters.colorBitOn : \"#00B16A\",\n            colorBitOff: parameters.colorBitOff ? parameters.colorBitOff : \"#22313F\",\n            colorStrokeOn: parameters.colorStrokeOn ? parameters.colorStrokeOn : \"#67809F\",\n            colorStrokeOff: parameters.colorStrokeOff ? parameters.colorStrokeOff : \"#67809F\"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    get element() {\n        return this._parameters.element;\n    }\n    render(display) {\n        super.render(display);\n        const ctx = this.element.getContext(\"2d\");\n        if (this.element.width != this.element.clientWidth && this.element.clientWidth != 0) {\n            this.element.width = this.element.clientWidth;\n        }\n        if (this.element.height != this.element.clientHeight && this.element.clientHeight != 0) {\n            this.element.height = this.element.clientHeight;\n        }\n        ctx.clearRect(0, 0, this.element.width, this.element.height);\n        const widthEachBit = Math.floor(this.element.width / display[0].length);\n        const heightEachBit = Math.floor(this.element.height / display.length);\n        ctx.lineWidth = 1;\n        const renderBitsOfValue = (value, fillColor, strokeColor) => {\n            ctx.strokeStyle = strokeColor;\n            ctx.fillStyle = fillColor;\n            ctx.beginPath();\n            for (var i = 0; i < display.length; i++) {\n                for (var j = 0; j < display[i].length; j++) {\n                    if (display[i][j] == value) {\n                        this.moveToNextBit(ctx, i, j, widthEachBit, heightEachBit);\n                        this.drawBit(ctx, i, j, widthEachBit, heightEachBit);\n                    }\n                }\n            }\n            ctx.fill();\n            ctx.stroke();\n        };\n        renderBitsOfValue(0, this._parameters.colorBitOff, this._parameters.colorStrokeOff);\n        renderBitsOfValue(1, this._parameters.colorBitOn, this._parameters.colorStrokeOn);\n    }\n}\n//# sourceMappingURL=canva-renderer.js.map","import { Renderer } from \"./renderer\";\nexport default class AsciiRenderer extends Renderer {\n    constructor(parameters) {\n        super(parameters);\n        this._parameters = {\n            elementId: parameters.elementId,\n            element: parameters.element,\n            characterBitOn: parameters.characterBitOn ? parameters.characterBitOn : \"X\",\n            characterBitOff: parameters.characterBitOff ? parameters.characterBitOff : \" \"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    render(display) {\n        super.render(display);\n        let output = \"\";\n        for (var i = 0; i < display.length; i++) {\n            for (var j = 0; j < display[i].length; j++) {\n                output += display[i][j] == 1 ?\n                    this._parameters.characterBitOn :\n                    this._parameters.characterBitOff;\n            }\n            output += '\\n';\n        }\n        this._parameters.element.innerHTML = output;\n    }\n}\n//# sourceMappingURL=ascii-renderer.js.map","import { Event } from '../utils/event';\nimport { Exception } from '../utils/exception';\nimport { RendererBuilder } from './rendering/renderer-builder';\nexport class PanelPlayer {\n    constructor(params) {\n        this.CLASS_NAME = PanelPlayer.name;\n        this.onPanelUpdate = new Event();\n        this.onReachingBoundary = new Event();\n        this._index = 0;\n        this.fps = params.fps;\n        this._renderer = params.renderer;\n        this._sequence = params.sequence;\n    }\n    get PanelUpdate() { return this.onPanelUpdate.expose(); }\n    get ReachingBoundary() { return this.onReachingBoundary.expose(); }\n    get sequence() {\n        return this._sequence;\n    }\n    get index() {\n        return this._index;\n    }\n    get fps() {\n        return this._fps;\n    }\n    get renderer() {\n        return this._renderer;\n    }\n    set sequence(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'sequence'));\n        this._sequence = value;\n    }\n    set fps(value) {\n        const fpsDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'fps');\n        Exception.throwIfNull(value, fpsDescription);\n        Exception.throwIfNotBetween(value, fpsDescription, 0, 60);\n        this._fps = value;\n        this._fpsIntervalLengthInMs = 1000 / this._fps;\n    }\n    set renderer(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'renderer'));\n        this._renderer = value;\n        this._render();\n    }\n    play() {\n        this._index = 0;\n        this._render();\n        this._startLoop();\n    }\n    stop() {\n        this._index = 0;\n        this._render();\n        this._shouldUpdate = false;\n    }\n    resume() {\n        this._startLoop();\n    }\n    pause() {\n        this._shouldUpdate = false;\n    }\n    step() {\n        this._nextPanelFrame();\n    }\n    seek(frame) {\n        const seekDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'seek');\n        Exception.throwIfNull(frame, seekDescription);\n        Exception.throwIfNotBetween(frame, seekDescription, 0, this._sequence.length);\n        this._index = frame;\n        this._render();\n    }\n    setRendererFromBuilder(value) {\n        this.renderer = RendererBuilder.build(value.rendererType, value.elementId);\n    }\n    _nextPanelFrame() {\n        Exception.throwIfNull(this._sequence, Exception.getDescriptionForProperty(this.CLASS_NAME, 'sequence'));\n        this._incrementIndex();\n        this._render();\n    }\n    _render() {\n        this.onPanelUpdate.trigger({ display: this._sequence[this._index] });\n        this._renderer.render(this._sequence[this._index]);\n    }\n    _incrementIndex() {\n        const reachedBoundary = this._index >= this._sequence.length;\n        if (reachedBoundary) {\n            this.onReachingBoundary.trigger();\n        }\n        this._index = (this._index + 1) % this._sequence.length;\n    }\n    _startLoop() {\n        this._then = Date.now();\n        this._shouldUpdate = true;\n        this._loop();\n    }\n    _loop() {\n        requestAnimationFrame(this._loop.bind(this));\n        if (this._shouldUpdate) {\n            this._callIfReadyForNextFrame(this._nextPanelFrame.bind(this));\n        }\n    }\n    _callIfReadyForNextFrame(callback) {\n        this._now = Date.now();\n        this._elapsed = this._now - this._then;\n        if (this._elapsed > this._fpsIntervalLengthInMs) {\n            this._then = this._now - (this._elapsed % this._fpsIntervalLengthInMs);\n            callback();\n        }\n    }\n}\n;\n//# sourceMappingURL=panel-player.js.map"],"sourceRoot":""}