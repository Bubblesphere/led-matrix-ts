{"version":3,"sources":["webpack://ledMatrix/webpack/universalModuleDefinition","webpack://ledMatrix/webpack/bootstrap","webpack://ledMatrix/./dist/esm/lib/utils/exception.js","webpack://ledMatrix/./dist/esm/lib/core/character.js","webpack://ledMatrix/./dist/esm/lib/utils/bit-array.js","webpack://ledMatrix/./dist/esm/lib/core/character-sizer.js","webpack://ledMatrix/./dist/esm/lib/utils/event.js","webpack://ledMatrix/./dist/esm/lib/core/board.js","webpack://ledMatrix/./dist/esm/lib/core/panel.js","webpack://ledMatrix/./dist/esm/lib/core/character-dictionary.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/side-scroller.js","webpack://ledMatrix/./dist/esm/lib/core/led-matrix.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/vertical-scroller.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/scroller-builder.js","webpack://ledMatrix/./dist/esm/lib/core/character-json.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Exception","[object Object]","valueDescription","rangeFrom","rangeTo","className","methodName","character_Character","constructor","pattern","output","width","CLASS_NAME","_pattern","_output","size","_width","_height","height","getColumn","index","throwIfNotBetween","getDescriptionForProperty","column","push","atIndex","getRow","row","hasPattern","input","BitArray","values","_bitPerIndex","_size","length","_array","Uint8Array","Math","ceil","_pointer","pushAll","mask","_createMask","_matchesMask","_arrayIndex","forEach","atIndexRange","count","_arrayIndexOffset","floor","NearestNeighbor","matrix","factor","ratio","w2","h2","finalMatrix","Array","j","px","py","Event","handlers","on","handler","off","filter","h","trigger","data","slice","expose","board_Board","params","onPropertyChange","_characters","_letterSpacing","letterSpacing","padding","PropertyChange","_padding","characters","_input","paddingAndSpacingWidth","_horizontalPaddingWidth","_totalSpacingWidth","map","character","reduce","accumulator","current","_verticalPaddingWidth","letterSpacingDescription","throwIfNull","throwIfNegative","prevLetterSpacing","_emitPropertyChangeEvent","paddingDescription","x","nextPadding","prevPadding","getColumnAtIndex","_createBitOffArrayOfLength","toReturn","some","characterColumn","concat","getRowAtIndex","charactersWithSpace","apply","load","dictionnary","delimiterWord","characterBuffer","find","scale","prevValue","panel_Panel","_initiated","_latestCurrentSequenceUuid","onNewSequence","_params","updateCurrentSequence","board","NewSequence","increment","reverse","scroller","widthDescription","fpsDescription","reverseDescription","GetCurrentSequence","Promise","resolve","sequence","panelIndex","loopEndIndex","generatePanelFrameAtIndex","_tickPanelIndex","currentUuid","then","_decrementIndex","_incrementIndex","CharacterDictionary","max","add","pendingCharacters","pendingPatterns","array","indexOf","edit","pendingCharacter","edited","arr","delete","deleted","splice","SideScroller","currentIndex","panel","columns","panelFrame","led_matrix_LedMatrix","onReady","_validateParameters","_panel","panelWidth","event","newSequence","_dictionary","Ready","addCharacters","addCharacter","editCharacter","deleteCharacter","loadedCharacters","usedCharacters","viewportWidth","defaultParams","_valueOrDefault","defaultValue","VerticalScroller","display","scroller_builder_ScrollerTypes","ScrollerTypes","scroller_builder_ScrollerBuilder","scrollerType","Side","Vertical","character_json_CharactersJSON","path","success","fetch","response","text","parse","catch","error","json","JSON","stringify","patterns"],"mappings":"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","file":"./src/led-matrix.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ledMatrix\"] = factory();\n\telse\n\t\troot[\"ledMatrix\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class Exception {\n    static throwIfNull(value, valueDescription) {\n        if (value == null) {\n            throw `${valueDescription} property cannot be set to null`;\n        }\n    }\n    static throwIfNegative(value, valueDescription) {\n        if (value < 0) {\n            throw `${valueDescription} property cannot be set to a negative number (${value})`;\n        }\n    }\n    static throwIfNotBetween(value, valueDescription, rangeFrom, rangeTo) {\n        if (value < rangeFrom || value > rangeTo) {\n            throw `Seek expects a value between ${rangeFrom} and ${rangeTo}`;\n        }\n    }\n    static getDescriptionForProperty(className, methodName) {\n        return `${className}'s ${methodName}`;\n    }\n}\n//# sourceMappingURL=exception.js.map","import { Exception } from \"../utils/exception\";\nexport class Character {\n    constructor(pattern, output, width) {\n        this.CLASS_NAME = Character.name;\n        this._pattern = pattern;\n        this._output = output;\n        if (output.size >= width) {\n            this._width = width;\n        }\n        else {\n            throw `Output size (${output.size}) can't be smaller than the character's width (${width})`;\n        }\n        if (output.size % width === 0) {\n            this._height = output.size / width;\n        }\n        else {\n            throw `Output size (${output.size}) must be divisible by the character's width (${width})`;\n        }\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    get output() {\n        return this._output;\n    }\n    getColumn(index) {\n        Exception.throwIfNotBetween(index, Exception.getDescriptionForProperty(this.CLASS_NAME, 'getColumn'), 0, this._width - 1);\n        let column = [];\n        for (let i = 0; i < this._height; i++) {\n            column.push(this._output.atIndex(i * this._width + index));\n        }\n        return column;\n    }\n    getRow(index) {\n        Exception.throwIfNotBetween(index, Exception.getDescriptionForProperty(this.CLASS_NAME, 'getRow'), 0, this._height - 1);\n        let row = [];\n        for (let i = 0; i < this._width; i++) {\n            row.push(this._output.atIndex(index * this._width + i));\n        }\n        return row;\n    }\n    hasPattern(input) {\n        return this._pattern == input;\n    }\n}\n;\n//# sourceMappingURL=character.js.map","export class BitArray {\n    constructor(values) {\n        this._bitPerIndex = 8;\n        this._size = values.length;\n        this._array = new Uint8Array(Math.ceil(this._size / this._bitPerIndex));\n        this._pointer = 0;\n        this.pushAll(values);\n    }\n    get size() {\n        return this._size;\n    }\n    push(value) {\n        if (this._pointer == this._size) {\n            throw `Bit array max size reached (${this._size})`;\n        }\n        const mask = this._createMask(this._pointer);\n        if (this._matchesMask(mask, this._array[this._arrayIndex(this._pointer)])) {\n            if (value === 0) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        else {\n            if (value === 1) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        this._pointer++;\n    }\n    pushAll(values) {\n        values.forEach((value) => {\n            this.push(value);\n        });\n    }\n    atIndex(index) {\n        if (index > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const mask = this._createMask(index);\n        return this._matchesMask(mask, this._array[this._arrayIndex(index)]) ? 1 : 0;\n    }\n    atIndexRange(index, count) {\n        if (index + count - 1 > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const values = [];\n        for (let i = 0; i < count; i++) {\n            const mask = this._createMask(index + i);\n            values.push(this._matchesMask(mask, this._array[this._arrayIndex(index + i)]) ? 1 : 0);\n        }\n        return values;\n    }\n    _matchesMask(mask, value) {\n        return (mask & value) != 0;\n    }\n    _createMask(index) {\n        return 1 << (this._bitPerIndex - 1) - this._arrayIndexOffset(index);\n    }\n    _arrayIndex(index) {\n        return Math.floor(index / this._bitPerIndex);\n    }\n    _arrayIndexOffset(index) {\n        return index % this._bitPerIndex;\n    }\n}\n;\n//# sourceMappingURL=bit-array.js.map","export class NearestNeighbor {\n    static scale(matrix, width, factor) {\n        const ratio = 1 / factor;\n        const h1 = matrix.length / width;\n        const w2 = width * factor;\n        const h2 = h1 * factor;\n        let finalMatrix = new Array(w2 * h2);\n        for (let i = 0; i < h2; i++) {\n            for (let j = 0; j < w2; j++) {\n                const px = Math.floor(j * ratio);\n                const py = Math.floor(i * ratio);\n                finalMatrix[(i * w2) + j] = matrix[(py * width) + px];\n            }\n        }\n        return finalMatrix;\n    }\n}\n//# sourceMappingURL=character-sizer.js.map","export class Event {\n    constructor() {\n        this.handlers = [];\n    }\n    on(handler) {\n        this.handlers.push(handler);\n    }\n    off(handler) {\n        this.handlers = this.handlers.filter(h => h !== handler);\n    }\n    trigger(data) {\n        this.handlers.slice(0).forEach(h => h(data));\n    }\n    expose() {\n        return this;\n    }\n}\n//# sourceMappingURL=event.js.map","import { Character } from './character';\nimport { BitArray } from '../utils/bit-array';\nimport { NearestNeighbor } from \"./character-sizer\";\nimport { Event } from '../utils/event';\nimport { Exception } from '../utils/exception';\nexport class Board {\n    constructor(params) {\n        this.CLASS_NAME = Board.name;\n        this.onPropertyChange = new Event();\n        this._characters = [];\n        this._letterSpacing = params.letterSpacing;\n        this.padding = params.padding;\n        this._size = params.size;\n        this.onPropertyChange.trigger();\n    }\n    get PropertyChange() { return this.onPropertyChange.expose(); }\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n    get padding() {\n        return this._padding;\n    }\n    get characters() {\n        return this._characters;\n    }\n    get input() {\n        return this._input;\n    }\n    get size() {\n        return this._size;\n    }\n    get width() {\n        const paddingAndSpacingWidth = this._horizontalPaddingWidth() + this._totalSpacingWidth();\n        if (this._characters.length > 0) {\n            return paddingAndSpacingWidth + this._characters\n                .map(character => character.width)\n                .reduce((accumulator, current) => accumulator + current);\n        }\n        else {\n            return paddingAndSpacingWidth;\n        }\n    }\n    get height() {\n        if (this._characters.length > 0) {\n            return this._verticalPaddingWidth() +\n                this._characters\n                    .reduce((accumulator, current) => current.height > accumulator.height ? current : accumulator).height;\n        }\n        else {\n            return this._verticalPaddingWidth();\n        }\n    }\n    set letterSpacing(value) {\n        const letterSpacingDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'padding');\n        Exception.throwIfNull(value, letterSpacingDescription);\n        Exception.throwIfNegative(value, letterSpacingDescription);\n        const prevLetterSpacing = this._letterSpacing;\n        this._letterSpacing = value;\n        this._emitPropertyChangeEvent(value, prevLetterSpacing);\n    }\n    set padding(value) {\n        const paddingDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'padding');\n        value.forEach(x => {\n            Exception.throwIfNull(x, paddingDescription);\n            Exception.throwIfNegative(x, paddingDescription);\n        });\n        const nextPadding = value.length == 1 ?\n            [value[0], value[0], value[0], value[0]] :\n            value.length == 2 ?\n                [value[0], value[1], value[0], value[1]] :\n                value;\n        if (this._padding) {\n            let prevPadding = [...this._padding];\n            this._padding = [nextPadding[0], nextPadding[1], nextPadding[2], nextPadding[3]];\n            if (this._padding[0] != prevPadding[0] ||\n                this._padding[1] != prevPadding[1] ||\n                this._padding[2] != prevPadding[2] ||\n                this._padding[3] != prevPadding[3]) {\n                this.onPropertyChange.trigger();\n            }\n        }\n        else {\n            this._padding = [nextPadding[0], nextPadding[1], nextPadding[2], nextPadding[3]];\n            this.onPropertyChange.trigger();\n        }\n    }\n    getColumnAtIndex(index) {\n        index %= this.width;\n        if (index < this._padding[3] || index >= this.width - this._padding[1]) {\n            return this._createBitOffArrayOfLength(this.height + this._verticalPaddingWidth());\n        }\n        let accumulator = this._padding[3];\n        let toReturn;\n        this._characters.some((character) => {\n            accumulator += character.width;\n            if (accumulator > index) {\n                const characterColumn = character.getColumn(index - (accumulator - character.width));\n                toReturn = this._createBitOffArrayOfLength(this._padding[0])\n                    .concat(characterColumn)\n                    .concat(this._createBitOffArrayOfLength(this._padding[2]));\n                if (toReturn.length < this.height) {\n                    toReturn.concat(this._createBitOffArrayOfLength(this.height - characterColumn.length));\n                }\n                return true;\n            }\n            accumulator += this._letterSpacing;\n            if (accumulator > index) {\n                toReturn = this._createBitOffArrayOfLength(this.height);\n                return true;\n            }\n        });\n        return toReturn;\n    }\n    getRowAtIndex(index) {\n        index %= this.height;\n        if (index < this._padding[0] || index >= this.height - this._padding[2]) {\n            return this._createBitOffArrayOfLength(this.width);\n        }\n        let charactersWithSpace = [].concat.apply([], this._characters.map(x => x.getRow(index - this._padding[0]).concat(this._createBitOffArrayOfLength(this._letterSpacing))));\n        charactersWithSpace = charactersWithSpace.slice(0, charactersWithSpace.length - this._letterSpacing);\n        return this._createBitOffArrayOfLength(this._padding[3])\n            .concat(charactersWithSpace)\n            .concat(this._createBitOffArrayOfLength(this._padding[1]));\n    }\n    load(input, dictionnary, size = 1) {\n        const escapeCharacter = '\\\\';\n        const delimiterWord = {\n            start: \"(\",\n            end: \")\"\n        };\n        this._characters = [];\n        this._size = size;\n        for (let i = 0; i < input.length; i++) {\n            let characterBuffer = input[i];\n            if (characterBuffer === escapeCharacter) {\n                if (i == input.length - 1) {\n                    throw `No character escaped at the end of the string input`;\n                }\n                characterBuffer = input[++i];\n            }\n            else if (characterBuffer === delimiterWord.start && (i === 0 || input[i - 1] !== escapeCharacter)) {\n                do {\n                    characterBuffer += input[++i];\n                    if (i == input.length) {\n                        throw `Could not find the ending delimiter \"${delimiterWord.end}\" for pattern ${characterBuffer}`;\n                    }\n                } while (input[i] != delimiterWord.end);\n                characterBuffer = characterBuffer.slice(1, -1);\n            }\n            const character = dictionnary.find(characterBuffer);\n            this._characters.push(new Character(character.pattern, new BitArray(NearestNeighbor.scale(character.output.atIndexRange(0, character.output.size), character.width, this._size)), character.width * this._size));\n        }\n        this._input = input;\n        this.onPropertyChange.trigger();\n    }\n    _horizontalPaddingWidth() {\n        return this._padding[1] + this._padding[3];\n    }\n    _totalSpacingWidth() {\n        return (this._characters.length - 1) * this._letterSpacing;\n    }\n    _verticalPaddingWidth() {\n        return this._padding[0] + this._padding[2];\n    }\n    _createBitOffArrayOfLength(length) {\n        return Array.apply(null, Array(length)).map(() => 0);\n    }\n    _emitPropertyChangeEvent(value, prevValue) {\n        if (value != prevValue) {\n            this.onPropertyChange.trigger();\n        }\n    }\n}\n;\n//# sourceMappingURL=board.js.map","import { Exception } from '../utils/exception';\nimport { Event } from '../utils/event';\nexport class Panel {\n    constructor(params) {\n        this.CLASS_NAME = Panel.name;\n        this._initiated = false;\n        this._latestCurrentSequenceUuid = 0;\n        this.onNewSequence = new Event();\n        this._params = params;\n        this._initiated = true;\n        this.updateCurrentSequence();\n        this._params.board.PropertyChange.on(() => {\n            this.updateCurrentSequence();\n        });\n    }\n    get NewSequence() { return this.onNewSequence.expose(); }\n    get width() {\n        return this._params.width;\n    }\n    get board() {\n        return this._params.board;\n    }\n    get increment() {\n        return this._params.increment;\n    }\n    get reverse() {\n        return this._params.reverse;\n    }\n    get scroller() {\n        return this._params.scroller;\n    }\n    set width(value) {\n        const widthDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'width');\n        Exception.throwIfNull(value, widthDescription);\n        Exception.throwIfNegative(value, widthDescription);\n        if (this._params.width != value) {\n            this._params.width = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set board(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'board'));\n        if (this._params.board != value) {\n            this._params.board = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set increment(value) {\n        const fpsDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'fps');\n        Exception.throwIfNull(value, fpsDescription);\n        Exception.throwIfNegative(value, fpsDescription);\n        if (this._params.increment != value) {\n            this._params.increment = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set reverse(value) {\n        const reverseDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'reverse');\n        Exception.throwIfNull(value, reverseDescription);\n        if (value != this._params.reverse) {\n            this._params.reverse = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set scroller(value) {\n        const reverseDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'reverse');\n        Exception.throwIfNull(value, reverseDescription);\n        if (value != this._params.scroller) {\n            this._params.scroller = value;\n            this.updateCurrentSequence();\n        }\n    }\n    GetCurrentSequence() {\n        return new Promise((resolve) => {\n            let sequence = [];\n            let panelIndex = 0;\n            for (let i = 0; i <= this._params.scroller.loopEndIndex(this); i++) {\n                sequence.push(this._params.scroller.generatePanelFrameAtIndex(panelIndex, this));\n                panelIndex = this._tickPanelIndex(panelIndex);\n            }\n            resolve(sequence);\n        });\n    }\n    updateCurrentSequence() {\n        if (this._initiated) {\n            this._latestCurrentSequenceUuid += 1;\n            const currentUuid = this._latestCurrentSequenceUuid;\n            this.GetCurrentSequence().then((sequence) => {\n                if (currentUuid == this._latestCurrentSequenceUuid && sequence[0].length > 0) {\n                    this.onNewSequence.trigger(sequence);\n                }\n            });\n        }\n    }\n    _tickPanelIndex(index) {\n        return this._params.reverse ? this._decrementIndex(index) : this._incrementIndex(index);\n    }\n    _incrementIndex(index) {\n        return index >= this._params.scroller.loopEndIndex(this) ? 0 : index + this._params.increment;\n    }\n    _decrementIndex(index) {\n        return index === 0 ? this._params.scroller.loopEndIndex(this) : index - this._params.increment;\n    }\n}\n;\n//# sourceMappingURL=panel.js.map","export class CharacterDictionary {\n    constructor() {\n        this._characters = [];\n    }\n    get characters() {\n        return this._characters;\n    }\n    get height() {\n        return Math.max.apply(Math, this._characters.map(x => x.height));\n    }\n    get length() {\n        return this._characters.length;\n    }\n    find(input) {\n        const character = this._characters.filter(x => x.hasPattern(input));\n        if (character && character.length > 0) {\n            return character[0];\n        }\n        throw `Could not find character ${input} in the alphabet`;\n    }\n    add(pendingCharacters) {\n        const pendingPatterns = pendingCharacters.map(x => x.pattern);\n        const duplicatedPendingPatterns = pendingPatterns.filter((value, index, array) => {\n            return array.indexOf(value) != index;\n        });\n        if (duplicatedPendingPatterns.length > 0) {\n            throw `Pattern already used by another pending character`;\n        }\n        if (this._characters.length > 0) {\n            const alreadyAddedPatterns = this._characters.map(x => x.pattern);\n            const duplicatedPatterns = alreadyAddedPatterns.filter((value) => {\n                return pendingPatterns.indexOf(value) != -1;\n            });\n            if (duplicatedPatterns.length > 0) {\n                throw `Pattern already used by another character`;\n            }\n        }\n        this._characters.push(...pendingCharacters);\n    }\n    edit(pendingCharacter) {\n        let edited = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !edited) {\n                arr[index] = pendingCharacter;\n                edited = true;\n            }\n        });\n        if (!edited) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted edit operation`;\n        }\n    }\n    delete(pendingCharacter) {\n        let deleted = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !deleted) {\n                arr.splice(index, 1);\n                deleted = true;\n            }\n        });\n        if (!deleted) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted delete operation`;\n        }\n    }\n}\n;\n//# sourceMappingURL=character-dictionary.js.map","export class SideScroller {\n    loopEndIndex(params) {\n        return params.board.width - 1;\n    }\n    generatePanelFrameAtIndex(currentIndex, panel) {\n        let columns = [];\n        for (let i = 0; i < panel.width; i++) {\n            columns.push(panel.board.getColumnAtIndex(currentIndex + i));\n        }\n        let panelFrame = [];\n        for (let i = 0; i < columns[0].length; i++) {\n            panelFrame.push(columns.map(x => x[i]));\n        }\n        return panelFrame;\n    }\n}\n//# sourceMappingURL=side-scroller.js.map","import { Board } from \"./board\";\nimport { Panel } from \"./panel\";\nimport { Event } from \"../utils/event\";\nimport { CharacterDictionary } from \"./character-dictionary\";\nimport { SideScroller } from \"./scrollers/side-scroller\";\nexport class LedMatrix {\n    constructor(params) {\n        this.onReady = new Event();\n        this._params = this._validateParameters(params);\n        this._panel = new Panel({\n            board: new Board({\n                letterSpacing: this._params.letterSpacing,\n                padding: this._params.padding,\n                size: this._params.size\n            }),\n            increment: this._params.increment,\n            reverse: this._params.reverse,\n            width: this._params.panelWidth,\n            scroller: this._params.scroller\n        });\n        this.event = {\n            newSequence: this._panel.NewSequence\n        };\n        this._dictionary = new CharacterDictionary();\n    }\n    get Ready() { return this.onReady.expose(); }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n        this._panel.board.load(this.input, this._dictionary, this.size);\n        this._panel.GetCurrentSequence();\n    }\n    get loopEndIndex() {\n        return this._panel.scroller.loopEndIndex(this._panel);\n    }\n    addCharacters(characters) {\n        this._dictionary.add(characters);\n    }\n    addCharacter(character) {\n        this._dictionary.add([character]);\n    }\n    editCharacter(character) {\n        this._dictionary.edit(character);\n    }\n    deleteCharacter(character) {\n        this._dictionary.delete(character);\n    }\n    get loadedCharacters() {\n        return this._dictionary.characters;\n    }\n    get usedCharacters() {\n        return this._panel.board.characters;\n    }\n    set letterSpacing(value) {\n        this._panel.board.letterSpacing = value;\n    }\n    get letterSpacing() {\n        return this._panel.board.letterSpacing;\n    }\n    set padding(value) {\n        this._panel.board.padding = value;\n    }\n    get padding() {\n        return this._panel.board.padding;\n    }\n    get width() {\n        return this._panel.board.width;\n    }\n    get height() {\n        return this._panel.board.height;\n    }\n    set input(value) {\n        this._panel.board.load(value, this._dictionary);\n    }\n    get input() {\n        return this._panel.board.input;\n    }\n    get sequence() {\n        return this._panel.GetCurrentSequence();\n    }\n    set scroller(value) {\n        this._panel.scroller = value;\n    }\n    get scroller() {\n        return this._panel.scroller;\n    }\n    get reverse() {\n        return this._panel.reverse;\n    }\n    set increment(value) {\n        this._panel.increment = value;\n    }\n    get increment() {\n        return this._panel.increment;\n    }\n    set reverse(value) {\n        this._panel.reverse = value;\n    }\n    set viewportWidth(value) {\n        this._panel.width = value;\n    }\n    get viewportWidth() {\n        return this._panel.width;\n    }\n    _validateParameters(params) {\n        let defaultParams = {\n            increment: 1,\n            scroller: new SideScroller(),\n            reverse: false,\n            panelWidth: 80,\n            letterSpacing: 2,\n            padding: [0, 4],\n            size: 1\n        };\n        if (params) {\n            params.letterSpacing = this._valueOrDefault(params.letterSpacing, defaultParams.letterSpacing);\n            params.padding = this._valueOrDefault(params.padding, defaultParams.padding);\n            params.size = this._valueOrDefault(params.size, defaultParams.size);\n            params.increment = this._valueOrDefault(params.increment, defaultParams.increment);\n            params.scroller = this._valueOrDefault(params.scroller, defaultParams.scroller);\n            params.reverse = this._valueOrDefault(params.reverse, defaultParams.reverse);\n            params.panelWidth = this._valueOrDefault(params.panelWidth, defaultParams.panelWidth);\n            return params;\n        }\n        return defaultParams;\n    }\n    _valueOrDefault(value, defaultValue) {\n        return value ? value : defaultValue;\n    }\n}\n//# sourceMappingURL=led-matrix.js.map","export class VerticalScroller {\n    loopEndIndex(panel) {\n        return panel.board.height - 1;\n    }\n    generatePanelFrameAtIndex(currentIndex, panel) {\n        let display = [];\n        for (let i = 0; i < panel.board.height; i++) {\n            let row;\n            row = panel.board.getRowAtIndex(currentIndex + i);\n            display.push(row.slice(0, panel.width));\n        }\n        return display;\n    }\n}\n//# sourceMappingURL=vertical-scroller.js.map","import { SideScroller } from \"./side-scroller\";\nimport { VerticalScroller } from \"./vertical-scroller\";\nexport var ScrollerTypes;\n(function (ScrollerTypes) {\n    ScrollerTypes[ScrollerTypes[\"Side\"] = 0] = \"Side\";\n    ScrollerTypes[ScrollerTypes[\"Vertical\"] = 1] = \"Vertical\";\n})(ScrollerTypes || (ScrollerTypes = {}));\nexport class ScrollerBuilder {\n    static build(scrollerType) {\n        switch (scrollerType) {\n            case ScrollerTypes.Side:\n                return new SideScroller();\n            case ScrollerTypes.Vertical:\n                return new VerticalScroller();\n        }\n    }\n}\n//# sourceMappingURL=scroller-builder.js.map","import { Character } from \"./character\";\nimport { BitArray } from \"../utils/bit-array\";\nexport class CharactersJSON {\n    static import(path, success) {\n        fetch(path)\n            .then((response) => {\n            return response.text();\n        })\n            .then((response) => {\n            success(CharactersJSON.parse(response));\n        })\n            .catch((error) => {\n            throw `Couldn't fetch file: ${path}`;\n        });\n    }\n    static export() {\n    }\n    static parse(json) {\n        const data = JSON.parse(json);\n        if (data == null) {\n            throw 'Invalid character json file';\n        }\n        if (data.characters == null) {\n            throw 'Invalid character json file: Can\\'t find property characters';\n        }\n        return data.characters.map(x => {\n            if (x.pattern == null) {\n                throw 'Invalid character json file: Can\\'t find property patterns for a character';\n            }\n            if (x.output == null) {\n                throw 'Invalid character json file: Can\\'t find property output for a character';\n            }\n            if (x.width == null) {\n                throw 'Invalid character json file: Can\\'t find property width for a character';\n            }\n            return new Character(x.pattern, new BitArray(x.output.map(x => x)), x.width);\n        });\n    }\n    static stringify(characters) {\n        if (characters == null || characters.length == 0) {\n            return JSON.stringify(\"\");\n        }\n        return JSON.stringify({\n            characters: characters.map(x => {\n                return {\n                    patterns: x.pattern,\n                    output: x.output.atIndexRange(0, x.output.size),\n                    width: x.width\n                };\n            })\n        });\n    }\n}\n//# sourceMappingURL=character-json.js.map"],"sourceRoot":""}