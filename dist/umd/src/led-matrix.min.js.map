{"version":3,"sources":["webpack://ledMatrix/webpack/universalModuleDefinition","webpack://ledMatrix/webpack/bootstrap","webpack://ledMatrix/./dist/esm/lib/bit-array.js","webpack://ledMatrix/./dist/esm/lib/board.js","webpack://ledMatrix/./dist/esm/lib/character.js","webpack://ledMatrix/./dist/esm/lib/character-dictionary.js","webpack://ledMatrix/./dist/esm/lib/character-sizer.js","webpack://ledMatrix/./dist/esm/lib/character-json.js","webpack://ledMatrix/./dist/esm/lib/event.js","webpack://ledMatrix/./dist/esm/lib/panel.js","webpack://ledMatrix/./dist/esm/lib/panels/side-scrolling-panel.js","webpack://ledMatrix/./dist/esm/lib/panels/vertical-scrolling-panel.js","webpack://ledMatrix/./dist/esm/lib/panel-builder.js","webpack://ledMatrix/./dist/esm/lib/rendering/canva-renderers.js","webpack://ledMatrix/./dist/esm/lib/rendering/renderer.js","webpack://ledMatrix/./dist/esm/lib/rendering/ascii-renderer.js","webpack://ledMatrix/./dist/esm/lib/led-matrix.js","webpack://ledMatrix/./dist/esm/lib/rendering/canva-renderer.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","BitArray","constructor","values","_bitPerIndex","_size","length","_array","Uint8Array","Math","ceil","_pointer","pushAll","size","push","mask","_createMask","_matchesMask","_arrayIndex","forEach","atIndex","index","atIndexRange","count","_arrayIndexOffset","floor","Board","params","_characters","spacing","padding","_spacing","x","_padding","width","_horizontalPaddingWidth","_totalSpacingWidth","map","character","reduce","accumulator","current","height","_verticalPaddingWidth","getColumnAtIndex","_emptyArrayOfLength","toReturn","some","characterColumn","getColumn","concat","getRowAtIndex","charactersWithSpace","apply","getRow","slice","load","input","dictionnary","characterBuffer","find","Array","Character","patterns","output","_patterns","_output","_width","_height","column","row","hasPattern","indexOf","CharacterDictionary","filter","max","add","pendingCharacters","pendingPatterns","duplicatedPendingPatterns","array","join","duplicatedPatterns","NearestNeighbor","[object Object]","matrix","factor","ratio","w2","h2","finalMatrix","j","px","py","character_json_CharactersJSON","path","success","fetch","then","response","text","parse","catch","error","json","data","JSON","characters","characterRaw","scale","stringify","Event","handlers","on","handler","off","h","trigger","expose","panel_Panel","onPanelUpdate","onReachingBoundary","fps","_board","board","_increment","increment","display","_renderer","renderer","_reverse","reverse","PanelUpdate","ReachingBoundary","_fps","_fpsInterval","play","_draw","_startLoop","stop","_shouldUpdate","resume","pause","seek","frame","indexUpperBound","tick","_step","_tickIndex","_resetPanel","_generateDisplay","render","_decrementIndex","_incrementIndex","splice","Number","valueOf","_then","Date","now","_startTime","_loop","requestAnimationFrame","bind","_onNextFrame","callback","_now","_elapsed","side_scrolling_panel_SideScrollingPanel","super","currentIndex","vertical_scrolling_panel_VerticalScrollingPanel","panel_builder_PanelType","canva_renderers_CanvaRenderers","PanelType","panel_builder_PanelBuilder","panelType","SideScrollingPanel","VerticalScrollingPanel","Renderer","ascii_renderer_AsciiRenderer","parameters","_parameters","element","characterBitOn","characterBitOff","innerHTML","led_matrix_LedMatrix","onReady","_params","_validateParameters","_panelType","_panel","build","panelWidth","event","panelUpdate","reachingBoundary","ready","Ready","init","import","pathCharacters","_dictionary","viewportWidth","defaultParams","document","getElementById","_valueOrDefault","defaultValue","canva_renderer_CanvaRenderer","canva","colorBitOn","colorBitOff","colorStrokeOn","colorStrokeOff","ctx","getContext","clearRect","widthEachBit","heightEachBit","lineWidth","renderBitsOfValue","fillColor","strokeColor","strokeStyle","fillStyle","beginPath","moveToNextBit","drawBit","fill","stroke","CanvaRenderers","Ellipse","w","moveTo","radW","radH","ellipse","PI","Rect","context","rect"],"mappings":"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","file":"./src/led-matrix.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ledMatrix\"] = factory();\n\telse\n\t\troot[\"ledMatrix\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class BitArray {\n    constructor(values) {\n        this._bitPerIndex = 8;\n        this._size = values.length;\n        this._array = new Uint8Array(Math.ceil(this._size / this._bitPerIndex));\n        this._pointer = 0;\n        this.pushAll(values);\n    }\n    get size() {\n        return this._size;\n    }\n    push(value) {\n        if (this._pointer == this._size) {\n            throw `Bit array max size reached (${this._size})`;\n        }\n        const mask = this._createMask(this._pointer);\n        if (this._matchesMask(mask, this._array[this._arrayIndex(this._pointer)])) {\n            if (value === 0) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        else {\n            if (value === 1) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        this._pointer++;\n    }\n    pushAll(values) {\n        values.forEach((value) => {\n            this.push(value);\n        });\n    }\n    atIndex(index) {\n        if (index > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const mask = this._createMask(index);\n        return this._matchesMask(mask, this._array[this._arrayIndex(index)]) ? 1 : 0;\n    }\n    atIndexRange(index, count) {\n        if (index + count - 1 > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const values = [];\n        for (let i = 0; i < count; i++) {\n            const mask = this._createMask(index + i);\n            values.push(this._matchesMask(mask, this._array[this._arrayIndex(index + i)]) ? 1 : 0);\n        }\n        return values;\n    }\n    _matchesMask(mask, value) {\n        return (mask & value) != 0;\n    }\n    _createMask(index) {\n        return 1 << (this._bitPerIndex - 1) - this._arrayIndexOffset(index);\n    }\n    _arrayIndex(index) {\n        return Math.floor(index / this._bitPerIndex);\n    }\n    _arrayIndexOffset(index) {\n        return index % this._bitPerIndex;\n    }\n}\n;\n//# sourceMappingURL=bit-array.js.map","export class Board {\n    constructor(params) {\n        this._characters = [];\n        this.spacing = params.spacing;\n        this.padding = params.padding;\n    }\n    set spacing(value) {\n        if (value == null) {\n            throw `Board's spacing cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Board's spacing cannot be set to a negative number (${value})`;\n        }\n        this._spacing = value;\n    }\n    get spacing() {\n        return this._spacing;\n    }\n    set padding(value) {\n        value.forEach(x => {\n            if (x == null) {\n                throw `Board's padding cannot set to null`;\n            }\n            if (x < 0) {\n                throw `Board's padding cannot be set to a negative number (${value})`;\n            }\n        });\n        if (value.length == 1) {\n            this._padding = [value[0], value[0], value[0], value[0]];\n        }\n        else if (value.length == 2) {\n            this._padding = [value[0], value[1], value[0], value[1]];\n        }\n        else {\n            this._padding = value;\n        }\n    }\n    get padding() {\n        return this._padding;\n    }\n    get width() {\n        return this._horizontalPaddingWidth() +\n            this._totalSpacingWidth() +\n            this._characters\n                .map(character => character.width)\n                .reduce((accumulator, current) => accumulator + current);\n    }\n    get height() {\n        return this._verticalPaddingWidth() +\n            this._characters\n                .reduce((accumulator, current) => current.height > accumulator.height ? current : accumulator).height;\n    }\n    getColumnAtIndex(index) {\n        index %= this.width;\n        if (index < this._padding[3] || index >= this.width - this._padding[1]) {\n            return this._emptyArrayOfLength(this.height);\n        }\n        let accumulator = this._padding[3];\n        let toReturn;\n        this._characters.some((character) => {\n            accumulator += character.width;\n            if (accumulator > index) {\n                const characterColumn = character.getColumn(index - (accumulator - character.width));\n                toReturn = this._emptyArrayOfLength(this._padding[0])\n                    .concat(characterColumn)\n                    .concat(this._emptyArrayOfLength(this._padding[2]));\n                return true;\n            }\n            accumulator += this._spacing;\n            if (accumulator > index) {\n                toReturn = this._emptyArrayOfLength(this.height);\n                return true;\n            }\n        });\n        return toReturn;\n    }\n    getRowAtIndex(index) {\n        index %= this.height;\n        if (index < this._padding[0] || index >= this.height - this._padding[2]) {\n            return this._emptyArrayOfLength(this.width);\n        }\n        let charactersWithSpace = [].concat.apply([], this._characters.map(x => x.getRow(index - this._padding[0]).concat(this._emptyArrayOfLength(this._spacing))));\n        charactersWithSpace = charactersWithSpace.slice(0, charactersWithSpace.length - this._spacing);\n        return this._emptyArrayOfLength(this._padding[3])\n            .concat(charactersWithSpace)\n            .concat(this._emptyArrayOfLength(this._padding[1]));\n    }\n    load(input, dictionnary) {\n        const escapeCharacter = '~';\n        this._characters = [];\n        for (let i = 0; i < input.length; i++) {\n            let characterBuffer = input[i];\n            if (characterBuffer === escapeCharacter) {\n                if (i == input.length - 1) {\n                    throw `No character escaped at the end of the string input`;\n                }\n                characterBuffer = input[++i];\n            }\n            else if (characterBuffer === \"[\" && (i === 0 || input[i - 1] !== escapeCharacter)) {\n                do {\n                    characterBuffer += input[++i];\n                    if (i == input.length) {\n                        throw `Could not find the end bracket for pattern ${characterBuffer}. To escape the bracket, use ${escapeCharacter}`;\n                    }\n                } while (input[i] != \"]\");\n            }\n            this._characters.push(dictionnary.find(characterBuffer));\n        }\n    }\n    _horizontalPaddingWidth() {\n        return this._padding[1] + this._padding[3];\n    }\n    _totalSpacingWidth() {\n        return (this._characters.length - 1) * this._spacing;\n    }\n    _verticalPaddingWidth() {\n        return this._padding[0] + this._padding[2];\n    }\n    _emptyArrayOfLength(length) {\n        return Array.apply(null, Array(length)).map(() => 0);\n    }\n}\n;\n//# sourceMappingURL=board.js.map","export class Character {\n    constructor(patterns, output, width) {\n        this._patterns = patterns;\n        this._output = output;\n        if (output.size >= width) {\n            this._width = width;\n        }\n        else {\n            throw `Output size (${output.size}) can't be smaller than the character's width (${width})`;\n        }\n        if (output.size % width === 0) {\n            this._height = output.size / width;\n        }\n        else {\n            throw `Output size (${output.size}) must be divisible by the character's width (${width})`;\n        }\n    }\n    getColumn(index) {\n        if (index < 0) {\n            throw `Index (${index}) cannot be negative`;\n        }\n        if (index >= this._width) {\n            throw `Index (${index}) is greater than the width of the character (${this._width})`;\n        }\n        let column = [];\n        for (let i = 0; i < this._height; i++) {\n            column.push(this._output.atIndex(i * this._width + index));\n        }\n        return column;\n    }\n    getRow(index) {\n        if (index < 0) {\n            throw `Index (${index}) cannot be negative`;\n        }\n        if (index >= this._height) {\n            throw `Index (${index}) is greater than the height of the character (${this._height})`;\n        }\n        let row = [];\n        for (let i = 0; i < this._width; i++) {\n            row.push(this._output.atIndex(index * this._width + i));\n        }\n        return row;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get patterns() {\n        return this._patterns;\n    }\n    get output() {\n        return this._output;\n    }\n    hasPattern(input) {\n        return this._patterns.indexOf(input) >= 0;\n    }\n}\n;\n//# sourceMappingURL=character.js.map","export class CharacterDictionary {\n    constructor() {\n        this._characters = [];\n    }\n    find(input) {\n        const character = this._characters.filter(x => x.hasPattern(input));\n        if (character && character.length > 0) {\n            return character[0];\n        }\n        throw `Could not find character ${input} in the alphabet`;\n    }\n    get height() {\n        return Math.max.apply(Math, this._characters.map(x => x.height));\n    }\n    get length() {\n        return this._characters.length;\n    }\n    add(pendingCharacters) {\n        const pendingPatterns = [].concat.apply([], pendingCharacters.map(x => x.patterns));\n        const duplicatedPendingPatterns = pendingPatterns.filter((value, index, array) => {\n            return array.indexOf(value) != index;\n        });\n        if (duplicatedPendingPatterns.length > 0) {\n            throw `Different characters cannot have the same patterns. Some of the characters pending to be added have the same patterns. The following patterns were identified as duplicates: ${duplicatedPendingPatterns.join(\", \")}`;\n        }\n        if (this._characters.length > 0) {\n            const alreadyAddedPatterns = [].concat.apply([], this._characters.map(x => x.patterns));\n            const duplicatedPatterns = alreadyAddedPatterns.filter((value) => {\n                return pendingPatterns.indexOf(value) != -1;\n            });\n            if (duplicatedPatterns.length > 0) {\n                throw `Different characters cannot have the same patterns. One or more of the characters pending to be added has the same pattern as one or more already added characters. The following patterns were identified as duplicates: ${duplicatedPatterns.join(\", \")}`;\n            }\n        }\n        this._characters.push(...pendingCharacters);\n    }\n}\n;\n//# sourceMappingURL=character-dictionary.js.map","export class NearestNeighbor {\n    static scale(matrix, width, factor) {\n        const ratio = 1 / factor;\n        const h1 = matrix.length / width;\n        const w2 = width * factor;\n        const h2 = h1 * factor;\n        let finalMatrix = new Array(w2 * h2);\n        for (let i = 0; i < h2; i++) {\n            for (let j = 0; j < w2; j++) {\n                const px = Math.floor(j * ratio);\n                const py = Math.floor(i * ratio);\n                finalMatrix[(i * w2) + j] = matrix[(py * width) + px];\n            }\n        }\n        return finalMatrix;\n    }\n}\n//# sourceMappingURL=character-sizer.js.map","import { Character } from \"./character\";\nimport { BitArray } from \"./bit-array\";\nimport { NearestNeighbor } from \"./character-sizer\";\nexport class CharactersJSON {\n    static import(path, size, success) {\n        fetch(path)\n            .then((response) => {\n            return response.text();\n        })\n            .then((response) => {\n            success(CharactersJSON.parse(response, size));\n        })\n            .catch((error) => {\n            throw `Couldn't fetch file: ${path}`;\n        });\n    }\n    static export() {\n    }\n    static parse(json, size) {\n        if (size < 1 || size > 10) {\n            throw 'Size should be between 1 and 10';\n        }\n        const data = JSON.parse(json);\n        if (data == null) {\n            throw 'Invalid character json file';\n        }\n        if (data.characters == null) {\n            throw 'Invalid character json file: Can\\'t find property characters';\n        }\n        return data.characters.map(x => {\n            if (x.patterns == null) {\n                throw 'Invalid character json file: Can\\'t find property patterns for a character';\n            }\n            if (x.output == null) {\n                throw 'Invalid character json file: Can\\'t find property output for a character';\n            }\n            if (x.width == null) {\n                throw 'Invalid character json file: Can\\'t find property width for a character';\n            }\n            const characterRaw = x.output.map(x => x);\n            const character = NearestNeighbor.scale(characterRaw, x.width, size);\n            return new Character(x.patterns, new BitArray(character), x.width * size);\n        });\n    }\n    static stringify(characters) {\n        if (characters == null || characters.length == 0) {\n            return JSON.stringify(\"\");\n        }\n        return JSON.stringify({\n            characters: characters.map(x => {\n                return {\n                    patterns: x.patterns,\n                    output: x.output.atIndexRange(0, x.output.size),\n                    width: x.width\n                };\n            })\n        });\n    }\n}\n//# sourceMappingURL=character-json.js.map","export class Event {\n    constructor() {\n        this.handlers = [];\n    }\n    on(handler) {\n        this.handlers.push(handler);\n    }\n    off(handler) {\n        this.handlers = this.handlers.filter(h => h !== handler);\n    }\n    trigger(data) {\n        this.handlers.slice(0).forEach(h => h(data));\n    }\n    expose() {\n        return this;\n    }\n}\n//# sourceMappingURL=event.js.map","import { Event } from './event';\nexport class Panel {\n    constructor(params) {\n        this.onPanelUpdate = new Event();\n        this.onReachingBoundary = new Event();\n        this.width = params.width;\n        this.fps = params.fps;\n        this._board = params.board;\n        this.index = 0;\n        this._increment = params.increment;\n        this.display = [];\n        this._renderer = params.renderer;\n        this._reverse = params.reverse;\n    }\n    get PanelUpdate() { return this.onPanelUpdate.expose(); }\n    get ReachingBoundary() { return this.onReachingBoundary.expose(); }\n    set width(value) {\n        if (value == null) {\n            throw `Panel's width cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Panel's width cannot be set to a negative number (${value})`;\n        }\n        this._width = value;\n    }\n    get width() {\n        return this._width;\n    }\n    set fps(value) {\n        if (value == null) {\n            throw `Panel's fps cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Panel's fps cannot be set to a negative number (${value})`;\n        }\n        const maxFps = 60;\n        if (value > maxFps) {\n            throw `Panel's fps has to be lower than ${maxFps}`;\n        }\n        this._fps = value;\n        this._fpsInterval = 1000 / this._fps;\n    }\n    get fps() {\n        return this._fps;\n    }\n    set board(value) {\n        if (value == null) {\n            throw `Panel's board cannot be set to null`;\n        }\n        this._board = value;\n    }\n    get board() {\n        return this._board;\n    }\n    set increment(value) {\n        if (value == null) {\n            throw `Panel's fps cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Panel's fps cannot be set to a negative number (${value})`;\n        }\n        this._increment = value;\n    }\n    get increment() {\n        return this._increment;\n    }\n    set renderer(value) {\n        if (value == null) {\n            throw `Panel's renderer cannot be set to null`;\n        }\n        this._renderer = value;\n    }\n    get renderer() {\n        return this._renderer;\n    }\n    set reverse(value) {\n        if (value == null) {\n            throw `Panel's reverse cannot be set to null`;\n        }\n        this._reverse = value;\n    }\n    get reverse() {\n        return this._reverse;\n    }\n    play() {\n        this.index = 0;\n        this._draw();\n        this._startLoop();\n    }\n    stop() {\n        this.index = 0;\n        this._draw();\n        this._shouldUpdate = false;\n    }\n    resume() {\n        this._startLoop();\n    }\n    pause() {\n        this._shouldUpdate = false;\n    }\n    seek(frame) {\n        if (frame == null || frame < 0 || frame > this.indexUpperBound) {\n            throw `Seek expects a value between 0 and ${this.indexUpperBound}`;\n        }\n        this.index = frame;\n        this._draw();\n    }\n    tick() {\n        this._step();\n    }\n    _step() {\n        this._tickIndex();\n        this._draw();\n    }\n    _draw() {\n        this._resetPanel();\n        this._generateDisplay(this.index);\n        this.onPanelUpdate.trigger({ display: this.display });\n        this._renderer.render(this.display);\n    }\n    _tickIndex() {\n        this._reverse ? this._decrementIndex() : this._incrementIndex();\n    }\n    _resetPanel() {\n        this.display.splice(0, this.display.length);\n        for (let i = 0; i < this._board.height; i++) {\n            this.display.push(Array.apply(null, Array(this.width)).map(Number.prototype.valueOf, 0));\n        }\n    }\n    _incrementIndex() {\n        if (this.index >= this.indexUpperBound) {\n            this.onReachingBoundary.trigger();\n            this.index = 0;\n        }\n        else {\n            this.index += this._increment;\n        }\n    }\n    _decrementIndex() {\n        if (this.index === 0) {\n            this.onReachingBoundary.trigger();\n            this.index = this.indexUpperBound;\n        }\n        else {\n            this.index -= this._increment;\n        }\n    }\n    _startLoop() {\n        this._then = Date.now();\n        this._startTime = this._then;\n        this._shouldUpdate = true;\n        this._loop();\n    }\n    _loop() {\n        requestAnimationFrame(this._loop.bind(this));\n        if (this._shouldUpdate) {\n            this._onNextFrame(this._step.bind(this));\n        }\n    }\n    _onNextFrame(callback) {\n        this._now = Date.now();\n        this._elapsed = this._now - this._then;\n        if (this._elapsed > this._fpsInterval) {\n            this._then = this._now - (this._elapsed % this._fpsInterval);\n            callback();\n        }\n    }\n}\n;\n//# sourceMappingURL=panel.js.map","import { Panel } from \"../panel\";\nexport class SideScrollingPanel extends Panel {\n    constructor(params) {\n        super(params);\n    }\n    get indexUpperBound() {\n        return this.board.width - 1;\n    }\n    _generateDisplay(currentIndex) {\n        for (let i = 0; i < this.width; i++) {\n            let column;\n            column = this.board.getColumnAtIndex(currentIndex + i);\n            for (let j = 0; j < this.board.height; j++) {\n                this.display[j][i] = column[j];\n            }\n        }\n    }\n}\n//# sourceMappingURL=side-scrolling-panel.js.map","import { Panel } from \"../panel\";\nexport class VerticalScrollingPanel extends Panel {\n    constructor(params) {\n        super(params);\n    }\n    get indexUpperBound() {\n        return this.board.height - 1;\n    }\n    _generateDisplay(currentIndex) {\n        for (let i = 0; i < this.board.height; i++) {\n            let row;\n            row = this.board.getRowAtIndex(currentIndex + i);\n            this.display[i] = row.slice(0, this.width);\n        }\n    }\n}\n//# sourceMappingURL=vertical-scrolling-panel.js.map","import { SideScrollingPanel } from \"./panels/side-scrolling-panel\";\nimport { VerticalScrollingPanel } from \"./panels/vertical-scrolling-panel\";\nexport var PanelType;\n(function (PanelType) {\n    PanelType[PanelType[\"SideScrollingPanel\"] = 0] = \"SideScrollingPanel\";\n    PanelType[PanelType[\"VerticalScrollingPanel\"] = 1] = \"VerticalScrollingPanel\";\n})(PanelType || (PanelType = {}));\nexport class PanelBuilder {\n    static build(panelType, params) {\n        switch (panelType) {\n            case PanelType.SideScrollingPanel:\n                return new SideScrollingPanel(params);\n            case PanelType.VerticalScrollingPanel:\n                return new VerticalScrollingPanel(params);\n        }\n    }\n}\n//# sourceMappingURL=panel-builder.js.map","import { CanvaRenderer } from \"./canva-renderer\";\nexport var CanvaRenderers;\n(function (CanvaRenderers) {\n    class Ellipse extends CanvaRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n            ctx.moveTo(w * (j + 1), h * (i + 1) - h / 2);\n        }\n        drawBit(ctx, i, j, w, h) {\n            const radW = w / 2;\n            const radH = h / 2;\n            ctx.ellipse(w * j + radW, h * i + radH, radW, radH, 0, 0, 2 * Math.PI);\n        }\n    }\n    CanvaRenderers.Ellipse = Ellipse;\n    class Rect extends CanvaRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        drawBit(context, i, j, w, h) {\n            return context.rect(w * j, h * i, w, h);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n        }\n    }\n    CanvaRenderers.Rect = Rect;\n})(CanvaRenderers || (CanvaRenderers = {}));\n//# sourceMappingURL=canva-renderers.js.map","export class Renderer {\n}\n//# sourceMappingURL=renderer.js.map","import { Renderer } from \"./renderer\";\nexport class AsciiRenderer extends Renderer {\n    constructor(parameters) {\n        super();\n        this._parameters = {\n            element: parameters.element,\n            characterBitOn: parameters.characterBitOn ? parameters.characterBitOn : \"X\",\n            characterBitOff: parameters.characterBitOff ? parameters.characterBitOff : \" \"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    render(display) {\n        let output = \"\";\n        for (var i = 0; i < display.length; i++) {\n            for (var j = 0; j < display[i].length; j++) {\n                output += display[i][j] == 1 ?\n                    this._parameters.characterBitOn :\n                    this._parameters.characterBitOff;\n            }\n            output += '\\n';\n        }\n        this._parameters.element.innerHTML = output;\n    }\n}\n//# sourceMappingURL=ascii-renderer.js.map","import { Board } from \"./board\";\nimport { PanelBuilder, PanelType } from \"./panel-builder\";\nimport { AsciiRenderer } from \"./rendering/ascii-renderer\";\nimport { Event } from \"./event\";\nimport { CharacterDictionary } from \"./character-dictionary\";\nimport { CharactersJSON } from \"./character-json\";\nexport class LedMatrix {\n    constructor(params) {\n        this.onReady = new Event();\n        this._params = this._validateParameters(params);\n        this._board = new Board({\n            spacing: this._params.spacing,\n            padding: this._params.padding\n        });\n        this._panelType = this._params.panelType;\n        this._panel = PanelBuilder.build(this._params.panelType, {\n            board: this._board,\n            renderer: this._params.renderer,\n            fps: this._params.fps,\n            increment: this._params.increment,\n            reverse: this._params.reverse,\n            width: this._params.panelWidth\n        });\n        this.event = {\n            panelUpdate: this._panel.PanelUpdate,\n            reachingBoundary: this._panel.ReachingBoundary,\n            ready: this.Ready\n        };\n    }\n    get Ready() { return this.onReady.expose(); }\n    init(size, callback) {\n        CharactersJSON.import(this._params.pathCharacters, size ? size : 1, (characters) => {\n            this._dictionary = new CharacterDictionary();\n            this._dictionary.add(characters);\n            this._board.load(this._params.input, this._dictionary);\n            this._panel.play();\n            this.onReady.trigger();\n            if (callback) {\n                callback();\n            }\n        });\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n        this.init(value);\n    }\n    get index() {\n        return this._panel.index;\n    }\n    set spacing(value) {\n        this._board.spacing = value;\n        this._panel.board = this._board;\n    }\n    get spacing() {\n        return this._board.spacing;\n    }\n    set padding(value) {\n        this._board.padding = value;\n        this._panel.board = this._board;\n    }\n    get padding() {\n        return this._board.padding;\n    }\n    get width() {\n        return this._board.width;\n    }\n    get height() {\n        return this._board.height;\n    }\n    set input(value) {\n        this._board.load(value, this._dictionary);\n    }\n    play() {\n        this._panel.play();\n    }\n    stop() {\n        this._panel.stop();\n    }\n    pause() {\n        this._panel.pause();\n    }\n    resume() {\n        this._panel.resume();\n    }\n    tick() {\n        this._panel.tick();\n    }\n    seek(frame) {\n        this._panel.seek(frame);\n    }\n    set panelType(value) {\n        this._panelType = value;\n        this._panel.stop();\n        this._panel = PanelBuilder.build(this._panelType, {\n            board: this._board,\n            renderer: this._panel.renderer,\n            fps: this._panel.fps,\n            increment: this._panel.increment,\n            reverse: this._panel.reverse,\n            width: this._panel.width\n        });\n        this._panel.play();\n    }\n    get panelType() {\n        return this._panelType;\n    }\n    set renderer(value) {\n        this._panel.renderer = value;\n    }\n    get renderer() {\n        return this._panel.renderer;\n    }\n    set fps(value) {\n        this._panel.fps = value;\n    }\n    get fps() {\n        return this._panel.fps;\n    }\n    set increment(value) {\n        this._panel.increment = value;\n    }\n    get increment() {\n        return this._panel.increment;\n    }\n    set reverse(value) {\n        this._panel.reverse = value;\n    }\n    get reverse() {\n        return this._panel.reverse;\n    }\n    set viewportWidth(value) {\n        this._panel.width = value;\n    }\n    get viewportWidth() {\n        return this._panel.width;\n    }\n    _validateParameters(params) {\n        const defaultParams = {\n            input: \"Hello World\",\n            pathCharacters: \"alphabet.json\",\n            fps: 30,\n            increment: 1,\n            panelType: PanelType.SideScrollingPanel,\n            renderer: new AsciiRenderer({\n                element: document.getElementById(\"led-matrix\"),\n                characterBitOn: 'X',\n                characterBitOff: ' '\n            }),\n            reverse: false,\n            panelWidth: 80,\n            spacing: 2,\n            padding: [0, 4]\n        };\n        if (params) {\n            params.input = this._valueOrDefault(params.input, defaultParams.input);\n            params.pathCharacters = this._valueOrDefault(params.pathCharacters, defaultParams.pathCharacters);\n            params.spacing = this._valueOrDefault(params.spacing, defaultParams.spacing);\n            params.padding = this._valueOrDefault(params.padding, defaultParams.padding);\n            params.fps = this._valueOrDefault(params.fps, defaultParams.fps);\n            params.increment = this._valueOrDefault(params.increment, defaultParams.increment);\n            params.panelType = this._valueOrDefault(params.panelType, defaultParams.panelType);\n            params.renderer = this._valueOrDefault(params.renderer, defaultParams.renderer);\n            params.reverse = this._valueOrDefault(params.reverse, defaultParams.reverse);\n            params.panelWidth = this._valueOrDefault(params.panelWidth, defaultParams.panelWidth);\n            return params;\n        }\n        return defaultParams;\n    }\n    _valueOrDefault(value, defaultValue) {\n        return value ? value : defaultValue;\n    }\n}\n//# sourceMappingURL=led-matrix.js.map","import { Renderer } from \"./renderer\";\nexport class CanvaRenderer extends Renderer {\n    constructor(parameters) {\n        super();\n        this._parameters = {\n            canva: parameters.canva,\n            colorBitOn: parameters.colorBitOn ? parameters.colorBitOn : \"#00B16A\",\n            colorBitOff: parameters.colorBitOff ? parameters.colorBitOff : \"#22313F\",\n            colorStrokeOn: parameters.colorStrokeOn ? parameters.colorStrokeOn : \"#67809F\",\n            colorStrokeOff: parameters.colorStrokeOff ? parameters.colorStrokeOff : \"#67809F\"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    render(display) {\n        const ctx = this._parameters.canva.getContext(\"2d\");\n        ctx.clearRect(0, 0, this._parameters.canva.width, this._parameters.canva.height);\n        const widthEachBit = Math.floor(this._parameters.canva.width / display[0].length);\n        const heightEachBit = Math.floor(this._parameters.canva.height / display.length);\n        ctx.lineWidth = 1;\n        const renderBitsOfValue = (value, fillColor, strokeColor) => {\n            ctx.strokeStyle = strokeColor;\n            ctx.fillStyle = fillColor;\n            ctx.beginPath();\n            for (var i = 0; i < display.length; i++) {\n                for (var j = 0; j < display[i].length; j++) {\n                    if (display[i][j] == value) {\n                        this.moveToNextBit(ctx, i, j, widthEachBit, heightEachBit);\n                        this.drawBit(ctx, i, j, widthEachBit, heightEachBit);\n                    }\n                }\n            }\n            ctx.fill();\n            ctx.stroke();\n        };\n        renderBitsOfValue(0, this._parameters.colorBitOff, this._parameters.colorStrokeOff);\n        renderBitsOfValue(1, this._parameters.colorBitOn, this._parameters.colorStrokeOn);\n    }\n}\n//# sourceMappingURL=canva-renderer.js.map"],"sourceRoot":""}