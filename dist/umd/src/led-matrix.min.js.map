{"version":3,"sources":["webpack://ledMatrix/webpack/universalModuleDefinition","webpack://ledMatrix/webpack/bootstrap","webpack://ledMatrix/./dist/esm/lib/bit-array.js","webpack://ledMatrix/./dist/esm/lib/board.js","webpack://ledMatrix/./dist/esm/lib/character.js","webpack://ledMatrix/./dist/esm/lib/character-dictionary.js","webpack://ledMatrix/./dist/esm/lib/character-sizer.js","webpack://ledMatrix/./dist/esm/lib/character-json.js","webpack://ledMatrix/./dist/esm/lib/event.js","webpack://ledMatrix/./dist/esm/lib/panel.js","webpack://ledMatrix/./dist/esm/lib/panels/side-scrolling-panel.js","webpack://ledMatrix/./dist/esm/lib/panels/vertical-scrolling-panel.js","webpack://ledMatrix/./dist/esm/lib/panel-builder.js","webpack://ledMatrix/./dist/esm/lib/rendering/canva-renderers.js","webpack://ledMatrix/./dist/esm/lib/renderer-builder.js","webpack://ledMatrix/./dist/esm/lib/rendering/renderer.js","webpack://ledMatrix/./dist/esm/lib/rendering/canva-renderer.js","webpack://ledMatrix/./dist/esm/lib/rendering/ascii-renderer.js","webpack://ledMatrix/./dist/esm/lib/panel-recorder.js","webpack://ledMatrix/./dist/esm/lib/led-matrix.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","BitArray","constructor","values","_bitPerIndex","_size","length","_array","Uint8Array","Math","ceil","_pointer","pushAll","size","push","mask","_createMask","_matchesMask","_arrayIndex","forEach","atIndex","index","atIndexRange","count","_arrayIndexOffset","floor","Board","params","_characters","_letterSpacing","letterSpacing","padding","characters","input","_input","x","_padding","width","_horizontalPaddingWidth","_totalSpacingWidth","map","character","reduce","accumulator","current","height","_verticalPaddingWidth","getColumnAtIndex","_createBitOffArrayOfLength","toReturn","some","characterColumn","getColumn","concat","getRowAtIndex","charactersWithSpace","apply","getRow","slice","load","dictionnary","delimiterWord","characterBuffer","find","Array","Character","pattern","output","_pattern","_output","_width","_height","column","row","hasPattern","CharacterDictionary","filter","max","add","pendingCharacters","pendingPatterns","array","indexOf","edit","pendingCharacter","edited","arr","delete","deleted","splice","NearestNeighbor","[object Object]","matrix","factor","ratio","w2","h2","finalMatrix","j","px","py","character_json_CharactersJSON","path","success","fetch","then","response","text","parse","catch","error","json","data","JSON","characterRaw","scale","stringify","patterns","Event","handlers","on","handler","off","h","trigger","expose","panel_Panel","onPanelUpdate","onReachingBoundary","fps","_board","board","_index","_increment","increment","display","_renderer","renderer","_reverse","reverse","PanelUpdate","ReachingBoundary","_fps","_fpsInterval","play","_draw","_startLoop","stop","_shouldUpdate","resume","pause","seek","frame","indexUpperBound","tick","_step","_tickIndex","_resetPanel","_generateDisplay","render","_decrementIndex","_incrementIndex","Number","valueOf","_then","Date","now","_startTime","_loop","requestAnimationFrame","bind","_onNextFrame","callback","_now","_elapsed","side_scrolling_panel_SideScrollingPanel","super","currentIndex","vertical_scrolling_panel_VerticalScrollingPanel","panel_builder_PanelType","canva_renderers_CanvaRenderers","renderer_builder_RendererType","PanelType","panel_builder_PanelBuilder","panelType","SideScrollingPanel","VerticalScrollingPanel","Renderer","parameters","_parameters","element","document","getElementById","elementId","canva_renderer_CanvaRenderer","colorBitOn","colorBitOff","colorStrokeOn","colorStrokeOff","ctx","getContext","clientWidth","clientHeight","clearRect","widthEachBit","heightEachBit","lineWidth","renderBitsOfValue","fillColor","strokeColor","strokeStyle","fillStyle","beginPath","moveToNextBit","drawBit","fill","stroke","CanvaRenderers","Ellipse","w","moveTo","radW","radH","ellipse","PI","Rect","context","rect","ascii_renderer_AsciiRenderer","characterBitOn","characterBitOff","innerHTML","RendererType","renderer_builder_RendererBuilder","rendererType","ASCII","CanvasSquare","CanvasCircle","PanelRecorder","panel","sequence","panelFrame","prevIndex","led_matrix_LedMatrix","onReady","_params","_validateParameters","_panelType","_panel","build","panelWidth","event","panelUpdate","reachingBoundary","ready","Ready","init","import","pathCharacters","_dictionary","getSequence","addCharacter","editCharacter","deleteCharacter","loadedCharacters","usedCharacters","spacing","setRendererFromBuilder","viewportWidth","defaultParams","_valueOrDefault","defaultValue"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,UAAAD,IAEAD,EAAA,UAAAC,IARA,CASCK,KAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA2CA,OAtCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,+CCnEaC,EACTC,YAAYC,GACR/B,KAAKgC,aAAe,EACpBhC,KAAKiC,MAAQF,EAAOG,OACpBlC,KAAKmC,OAAS,IAAIC,WAAWC,KAAKC,KAAKtC,KAAKiC,MAAQjC,KAAKgC,eACzDhC,KAAKuC,SAAW,EAChBvC,KAAKwC,QAAQT,GAEjBU,WACI,OAAOzC,KAAKiC,MAEhBS,KAAKtB,GACD,GAAIpB,KAAKuC,UAAYvC,KAAKiC,MACtB,oCAAqCjC,KAAKiC,SAE9C,MAAMU,EAAO3C,KAAK4C,YAAY5C,KAAKuC,UAC/BvC,KAAK6C,aAAaF,EAAM3C,KAAKmC,OAAOnC,KAAK8C,YAAY9C,KAAKuC,YAC5C,IAAVnB,IACApB,KAAKmC,OAAOnC,KAAK8C,YAAY9C,KAAKuC,YAAcI,GAItC,IAAVvB,IACApB,KAAKmC,OAAOnC,KAAK8C,YAAY9C,KAAKuC,YAAcI,GAGxD3C,KAAKuC,WAETC,QAAQT,GACJA,EAAOgB,QAAS3B,IACZpB,KAAK0C,KAAKtB,KAGlB4B,QAAQC,GACJ,GAAIA,EAAQjD,KAAKiC,MACb,eAAgBgB,yCAA6CjD,KAAKiC,SAEtE,MAAMU,EAAO3C,KAAK4C,YAAYK,GAC9B,OAAOjD,KAAK6C,aAAaF,EAAM3C,KAAKmC,OAAOnC,KAAK8C,YAAYG,KAAW,EAAI,EAE/EC,aAAaD,EAAOE,GAChB,GAAIF,EAAQE,EAAQ,EAAInD,KAAKiC,MACzB,eAAgBgB,yCAA6CjD,KAAKiC,SAEtE,MAAMF,KACN,IAAK,IAAI3B,EAAI,EAAGA,EAAI+C,EAAO/C,IAAK,CAC5B,MAAMuC,EAAO3C,KAAK4C,YAAYK,EAAQ7C,GACtC2B,EAAOW,KAAK1C,KAAK6C,aAAaF,EAAM3C,KAAKmC,OAAOnC,KAAK8C,YAAYG,EAAQ7C,KAAO,EAAI,GAExF,OAAO2B,EAEXc,aAAaF,EAAMvB,GACf,OAAyB,IAAjBuB,EAAOvB,GAEnBwB,YAAYK,GACR,OAAO,GAAMjD,KAAKgC,aAAe,EAAKhC,KAAKoD,kBAAkBH,GAEjEH,YAAYG,GACR,OAAOZ,KAAKgB,MAAMJ,EAAQjD,KAAKgC,cAEnCoB,kBAAkBH,GACd,OAAOA,EAAQjD,KAAKgC,oBC7DfsB,EACTxB,YAAYyB,GACRvD,KAAKwD,eACLxD,KAAKyD,eAAiBF,EAAOG,cAC7B1D,KAAK2D,QAAUJ,EAAOI,QAE1BD,kBAAkBtC,GACd,GAAa,MAATA,EACA,KAAO,wCAEX,GAAIA,EAAQ,EACR,4DAA6DA,KAEjEpB,KAAKyD,eAAiBrC,EAE1BsC,oBACI,OAAO1D,KAAKyD,eAEhBG,iBACI,OAAO5D,KAAKwD,YAEhBK,YACI,OAAO7D,KAAK8D,OAEhBH,YAAYvC,GACRA,EAAM2B,QAAQgB,IACV,GAAS,MAALA,EACA,KAAO,qCAEX,GAAIA,EAAI,EACJ,4DAA6D3C,OAGjD,GAAhBA,EAAMc,OACNlC,KAAKgE,UAAY5C,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAEhC,GAAhBA,EAAMc,OACXlC,KAAKgE,UAAY5C,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAGrDpB,KAAKgE,SAAW5C,EAGxBuC,cACI,OAAO3D,KAAKgE,SAEhBC,YACI,OAAOjE,KAAKkE,0BACRlE,KAAKmE,qBACLnE,KAAKwD,YACAY,IAAIC,GAAaA,EAAUJ,OAC3BK,OAAO,CAACC,EAAaC,IAAYD,EAAcC,GAE5DC,aACI,OAAOzE,KAAK0E,wBACR1E,KAAKwD,YACAc,OAAO,CAACC,EAAaC,IAAYA,EAAQC,OAASF,EAAYE,OAASD,EAAUD,GAAaE,OAE3GE,iBAAiB1B,GAEb,IADAA,GAASjD,KAAKiE,OACFjE,KAAKgE,SAAS,IAAMf,GAASjD,KAAKiE,MAAQjE,KAAKgE,SAAS,GAChE,OAAOhE,KAAK4E,2BAA2B5E,KAAKyE,QAEhD,IACII,EADAN,EAAcvE,KAAKgE,SAAS,GAkBhC,OAhBAhE,KAAKwD,YAAYsB,KAAMT,IAEnB,IADAE,GAAeF,EAAUJ,OACPhB,EAAO,CACrB,MAAM8B,EAAkBV,EAAUW,UAAU/B,GAASsB,EAAcF,EAAUJ,QAK7E,OAJAY,EAAW7E,KAAK4E,2BAA2B5E,KAAKgE,SAAS,IACpDiB,OAAOF,GACPE,OAAOjF,KAAK4E,2BAA2B5E,KAAKgE,SAAS,KACrDiB,OAAOF,EAAgB7C,OAASlC,KAAKyE,OAASzE,KAAK4E,2BAA2B5E,KAAKyE,OAASM,EAAgB7C,aAC1G,EAGX,IADAqC,GAAevE,KAAKyD,gBACFR,EAEd,OADA4B,EAAW7E,KAAK4E,2BAA2B5E,KAAKyE,SACzC,IAGRI,EAEXK,cAAcjC,GAEV,IADAA,GAASjD,KAAKyE,QACFzE,KAAKgE,SAAS,IAAMf,GAASjD,KAAKyE,OAASzE,KAAKgE,SAAS,GACjE,OAAOhE,KAAK4E,2BAA2B5E,KAAKiE,OAEhD,IAAIkB,KAAyBF,OAAOG,SAAUpF,KAAKwD,YAAYY,IAAIL,GAAKA,EAAEsB,OAAOpC,EAAQjD,KAAKgE,SAAS,IAAIiB,OAAOjF,KAAK4E,2BAA2B5E,KAAKyD,mBAEvJ,OADA0B,EAAsBA,EAAoBG,MAAM,EAAGH,EAAoBjD,OAASlC,KAAKyD,gBAC9EzD,KAAK4E,2BAA2B5E,KAAKgE,SAAS,IAChDiB,OAAOE,GACPF,OAAOjF,KAAK4E,2BAA2B5E,KAAKgE,SAAS,KAE9DuB,KAAK1B,EAAO2B,GACR,MACMC,EACK,IADLA,EAEG,IAETzF,KAAKwD,eACL,IAAK,IAAIpD,EAAI,EAAGA,EAAIyD,EAAM3B,OAAQ9B,IAAK,CACnC,IAAIsF,EAAkB7B,EAAMzD,GAC5B,GARoB,MAQhBsF,EAAqC,CACrC,GAAItF,GAAKyD,EAAM3B,OAAS,EACpB,KAAO,sDAEXwD,EAAkB7B,IAAQzD,QAEzB,GAAIsF,IAAoBD,IAA8B,IAANrF,GAdjC,MAc4CyD,EAAMzD,EAAI,IAAyB,CAC/F,GAEI,GADAsF,GAAmB7B,IAAQzD,GACvBA,GAAKyD,EAAM3B,OACX,6CAA8CuD,kBAAkCC,UAE/E7B,EAAMzD,IAAMqF,GACrBC,EAAkBA,EAAgBJ,MAAM,GAAI,GAEhDtF,KAAKwD,YAAYd,KAAK8C,EAAYG,KAAKD,IAE3C1F,KAAK8D,OAASD,EAElBK,0BACI,OAAOlE,KAAKgE,SAAS,GAAKhE,KAAKgE,SAAS,GAE5CG,qBACI,OAAQnE,KAAKwD,YAAYtB,OAAS,GAAKlC,KAAKyD,eAEhDiB,wBACI,OAAO1E,KAAKgE,SAAS,GAAKhE,KAAKgE,SAAS,GAE5CY,2BAA2B1C,GACvB,OAAO0D,MAAMR,MAAM,KAAMQ,MAAM1D,IAASkC,IAAI,IAAM,UCpI7CyB,EACT/D,YAAYgE,EAASC,EAAQ9B,GAGzB,GAFAjE,KAAKgG,SAAWF,EAChB9F,KAAKiG,QAAUF,IACXA,EAAOtD,MAAQwB,GAIf,qBAAsB8B,EAAOtD,sDAAsDwB,KAEvF,GALIjE,KAAKkG,OAASjC,EAKd8B,EAAOtD,KAAOwB,GAAU,EAIxB,qBAAsB8B,EAAOtD,qDAAqDwB,KAHlFjE,KAAKmG,QAAUJ,EAAOtD,KAAOwB,EAMrCe,UAAU/B,GACN,GAAIA,EAAQ,EACR,eAAgBA,wBAEpB,GAAIA,GAASjD,KAAKkG,OACd,eAAgBjD,kDAAsDjD,KAAKkG,UAE/E,IAAIE,KACJ,IAAK,IAAIhG,EAAI,EAAGA,EAAIJ,KAAKmG,QAAS/F,IAC9BgG,EAAO1D,KAAK1C,KAAKiG,QAAQjD,QAAQ5C,EAAIJ,KAAKkG,OAASjD,IAEvD,OAAOmD,EAEXf,OAAOpC,GACH,GAAIA,EAAQ,EACR,eAAgBA,wBAEpB,GAAIA,GAASjD,KAAKmG,QACd,eAAgBlD,mDAAuDjD,KAAKmG,WAEhF,IAAIE,KACJ,IAAK,IAAIjG,EAAI,EAAGA,EAAIJ,KAAKkG,OAAQ9F,IAC7BiG,EAAI3D,KAAK1C,KAAKiG,QAAQjD,QAAQC,EAAQjD,KAAKkG,OAAS9F,IAExD,OAAOiG,EAEXpC,YACI,OAAOjE,KAAKkG,OAEhBzB,aACI,OAAOzE,KAAKmG,QAEhBL,cACI,OAAO9F,KAAKgG,SAEhBD,aACI,OAAO/F,KAAKiG,QAEhBK,WAAWzC,GACP,OAAO7D,KAAKgG,UAAYnC,SCxDnB0C,EACTzE,cACI9B,KAAKwD,eAETmC,KAAK9B,GACD,MAAMQ,EAAYrE,KAAKwD,YAAYgD,OAAOzC,GAAKA,EAAEuC,WAAWzC,IAC5D,GAAIQ,GAAaA,EAAUnC,OAAS,EAChC,OAAOmC,EAAU,GAErB,iCAAkCR,oBAEtCD,iBACI,OAAO5D,KAAKwD,YAEhBiB,aACI,OAAOpC,KAAKoE,IAAIrB,MAAM/C,KAAMrC,KAAKwD,YAAYY,IAAIL,GAAKA,EAAEU,SAE5DvC,aACI,OAAOlC,KAAKwD,YAAYtB,OAE5BwE,IAAIC,GACA,MAAMC,EAAkBD,EAAkBvC,IAAIL,GAAKA,EAAE+B,SAIrD,GAHkCc,EAAgBJ,OAAO,CAACpF,EAAO6B,EAAO4D,IAC7DA,EAAMC,QAAQ1F,IAAU6B,GAELf,OAAS,EACnC,KAAO,oDAEX,GAAIlC,KAAKwD,YAAYtB,OAAS,EAAG,CAK7B,GAJ6BlC,KAAKwD,YAAYY,IAAIL,GAAKA,EAAE+B,SACTU,OAAQpF,IACV,GAAnCwF,EAAgBE,QAAQ1F,IAEZc,OAAS,EAC5B,KAAO,4CAGflC,KAAKwD,YAAYd,QAAQiE,GAE7BI,KAAKC,GACD,IAAIC,GAAS,EAOb,GANAjH,KAAKwD,YAAYT,QAAQ,CAACsB,EAAWpB,EAAOiE,KACpC7C,EAAUyB,SAAWkB,EAAiBlB,SAAYmB,IAClDC,EAAIjE,GAAS+D,EACbC,GAAS,MAGZA,EACD,iCAAkCD,EAAiBlB,kDAG3DqB,OAAOH,GACH,IAAII,GAAU,EAOd,GANApH,KAAKwD,YAAYT,QAAQ,CAACsB,EAAWpB,EAAOiE,KACpC7C,EAAUyB,SAAWkB,EAAiBlB,SAAYsB,IAClDF,EAAIG,OAAOpE,EAAO,GAClBmE,GAAU,MAGbA,EACD,iCAAkCJ,EAAiBlB,2DC5DlDwB,EACTC,aAAaC,EAAQvD,EAAOwD,GACxB,MAAMC,EAAQ,EAAID,EAEZE,EAAK1D,EAAQwD,EACbG,EAFKJ,EAAOtF,OAAS+B,EAEXwD,EAChB,IAAII,EAAc,IAAIjC,MAAM+B,EAAKC,GACjC,IAAK,IAAIxH,EAAI,EAAGA,EAAIwH,EAAIxH,IACpB,IAAK,IAAI0H,EAAI,EAAGA,EAAIH,EAAIG,IAAK,CACzB,MAAMC,EAAK1F,KAAKgB,MAAMyE,EAAIJ,GACpBM,EAAK3F,KAAKgB,MAAMjD,EAAIsH,GAC1BG,EAAazH,EAAIuH,EAAMG,GAAKN,EAAQQ,EAAK/D,EAAS8D,GAG1D,OAAOF,SCXFI,EACTV,cAAcW,EAAMzF,EAAM0F,GACtBC,MAAMF,GACDG,KAAMC,GACAA,EAASC,QAEfF,KAAMC,IACPH,EAAQF,EAAeO,MAAMF,EAAU7F,MAEtCgG,MAAOC,IACR,6BAA8BR,MAGtCX,iBAEAA,aAAaoB,EAAMlG,GACf,GAAIA,EAAO,GAAKA,EAAO,GACnB,KAAM,kCAEV,MAAMmG,EAAOC,KAAKL,MAAMG,GACxB,GAAY,MAARC,EACA,KAAM,8BAEV,GAAuB,MAAnBA,EAAKhF,WACL,KAAM,8DAEV,OAAOgF,EAAKhF,WAAWQ,IAAIL,IACvB,GAAiB,MAAbA,EAAE+B,QACF,KAAM,4EAEV,GAAgB,MAAZ/B,EAAEgC,OACF,KAAM,0EAEV,GAAe,MAAXhC,EAAEE,MACF,KAAM,yEAEV,MAAM6E,EAAe/E,EAAEgC,OAAO3B,IAAIL,GAAKA,GACjCM,EAAYiD,EAAgByB,MAAMD,EAAc/E,EAAEE,MAAOxB,GAC/D,OAAO,IAAIoD,EAAU9B,EAAE+B,QAAS,IAAIjE,EAASwC,GAAYN,EAAEE,MAAQxB,KAG3E8E,iBAAiB3D,GACb,OAAkB,MAAdA,GAA2C,GAArBA,EAAW1B,OAC1B2G,KAAKG,UAAU,IAEnBH,KAAKG,WACRpF,WAAYA,EAAWQ,IAAIL,KAEnBkF,SAAUlF,EAAE+B,QACZC,OAAQhC,EAAEgC,OAAO7C,aAAa,EAAGa,EAAEgC,OAAOtD,MAC1CwB,MAAOF,EAAEE,kBCrDhBiF,EACTpH,cACI9B,KAAKmJ,YAETC,GAAGC,GACCrJ,KAAKmJ,SAASzG,KAAK2G,GAEvBC,IAAID,GACArJ,KAAKmJ,SAAWnJ,KAAKmJ,SAAS3C,OAAO+C,GAAKA,IAAMF,GAEpDG,QAAQZ,GACJ5I,KAAKmJ,SAAS7D,MAAM,GAAGvC,QAAQwG,GAAKA,EAAEX,IAE1Ca,SACI,OAAOzJ,YCbF0J,EACT5H,YAAYyB,GACRvD,KAAK2J,cAAgB,IAAIT,EACzBlJ,KAAK4J,mBAAqB,IAAIV,EAC9BlJ,KAAKiE,MAAQV,EAAOU,MACpBjE,KAAK6J,IAAMtG,EAAOsG,IAClB7J,KAAK8J,OAASvG,EAAOwG,MACrB/J,KAAKgK,OAAS,EACdhK,KAAKiK,WAAa1G,EAAO2G,UACzBlK,KAAKmK,WACLnK,KAAKoK,UAAY7G,EAAO8G,SACxBrK,KAAKsK,SAAW/G,EAAOgH,QAE3BC,kBAAoB,OAAOxK,KAAK2J,cAAcF,SAC9CgB,uBAAyB,OAAOzK,KAAK4J,mBAAmBH,SACxDxG,YACI,OAAOjD,KAAKgK,OAEhB/F,UAAU7C,GACN,GAAa,MAATA,EACA,KAAO,sCAEX,GAAIA,EAAQ,EACR,0DAA2DA,KAE/DpB,KAAKkG,OAAS9E,EAElB6C,YACI,OAAOjE,KAAKkG,OAEhB2D,QAAQzI,GACJ,GAAa,MAATA,EACA,KAAO,oCAEX,GAAIA,EAAQ,EACR,wDAAyDA,KAG7D,GAAIA,EADW,GAEX,KAAO,sCAEXpB,KAAK0K,KAAOtJ,EACZpB,KAAK2K,aAAe,IAAO3K,KAAK0K,KAEpCb,UACI,OAAO7J,KAAK0K,KAEhBX,UAAU3I,GACN,GAAa,MAATA,EACA,KAAO,sCAEXpB,KAAK8J,OAAS1I,EAElB2I,YACI,OAAO/J,KAAK8J,OAEhBI,cAAc9I,GACV,GAAa,MAATA,EACA,KAAO,4CAEX,GAAIA,EAAQ,EACR,wDAAyDA,KAE7DpB,KAAKiK,WAAa7I,EAEtB8I,gBACI,OAAOlK,KAAKiK,WAEhBI,aAAajJ,GACT,GAAa,MAATA,EACA,KAAO,yCAEXpB,KAAKoK,UAAYhJ,EAErBiJ,eACI,OAAOrK,KAAKoK,UAEhBG,YAAYnJ,GACR,GAAa,MAATA,EACA,KAAO,wCAEXpB,KAAKsK,SAAWlJ,EAEpBmJ,cACI,OAAOvK,KAAKsK,SAEhBM,OACI5K,KAAKgK,OAAS,EACdhK,KAAK6K,QACL7K,KAAK8K,aAETC,OACI/K,KAAKgK,OAAS,EACdhK,KAAK6K,QACL7K,KAAKgL,eAAgB,EAEzBC,SACIjL,KAAK8K,aAETI,QACIlL,KAAKgL,eAAgB,EAEzBG,KAAKC,GACD,GAAa,MAATA,GAAiBA,EAAQ,GAAKA,EAAQpL,KAAKqL,gBAC3C,2CAA4CrL,KAAKqL,kBAErDrL,KAAKgK,OAASoB,EACdpL,KAAK6K,QAETS,OACItL,KAAKuL,QAETA,QACIvL,KAAKwL,aACLxL,KAAK6K,QAETA,QACI7K,KAAKyL,cACLzL,KAAK0L,iBAAiB1L,KAAKgK,QAC3BhK,KAAK2J,cAAcH,SAAUW,QAASnK,KAAKmK,UAC3CnK,KAAKoK,UAAUuB,OAAO3L,KAAKmK,SAE/BqB,aACIxL,KAAKsK,SAAWtK,KAAK4L,kBAAoB5L,KAAK6L,kBAElDJ,cACIzL,KAAKmK,QAAQ9C,OAAO,EAAGrH,KAAKmK,QAAQjI,QACpC,IAAK,IAAI9B,EAAI,EAAGA,EAAIJ,KAAK8J,OAAOrF,OAAQrE,IACpCJ,KAAKmK,QAAQzH,KAAKkD,MAAMR,MAAM,KAAMQ,MAAM5F,KAAKiE,QAAQG,IAAI0H,OAAOrK,UAAUsK,QAAS,IAG7FF,kBACQ7L,KAAKgK,QAAUhK,KAAKqL,iBACpBrL,KAAK4J,mBAAmBJ,UACxBxJ,KAAKgK,OAAS,GAGdhK,KAAKgK,QAAUhK,KAAKiK,WAG5B2B,kBACwB,IAAhB5L,KAAKgK,QACLhK,KAAK4J,mBAAmBJ,UACxBxJ,KAAKgK,OAAShK,KAAKqL,iBAGnBrL,KAAKgK,QAAUhK,KAAKiK,WAG5Ba,aACI9K,KAAKgM,MAAQC,KAAKC,MAClBlM,KAAKmM,WAAanM,KAAKgM,MACvBhM,KAAKgL,eAAgB,EACrBhL,KAAKoM,QAETA,QACIC,sBAAsBrM,KAAKoM,MAAME,KAAKtM,OAClCA,KAAKgL,eACLhL,KAAKuM,aAAavM,KAAKuL,MAAMe,KAAKtM,OAG1CuM,aAAaC,GACTxM,KAAKyM,KAAOR,KAAKC,MACjBlM,KAAK0M,SAAW1M,KAAKyM,KAAOzM,KAAKgM,MAC7BhM,KAAK0M,SAAW1M,KAAK2K,eACrB3K,KAAKgM,MAAQhM,KAAKyM,KAAQzM,KAAK0M,SAAW1M,KAAK2K,aAC/C6B,YCtKCG,UAA2BjD,EACpC5H,YAAYyB,GACRqJ,MAAMrJ,GAEV8H,sBACI,OAAOrL,KAAK+J,MAAM9F,MAAQ,EAE9ByH,iBAAiBmB,GACb,IAAK,IAAIzM,EAAI,EAAGA,EAAIJ,KAAKiE,MAAO7D,IAAK,CACjC,IAAIgG,EACJA,EAASpG,KAAK+J,MAAMpF,iBAAiBkI,EAAezM,GACpD,IAAK,IAAI0H,EAAI,EAAGA,EAAI9H,KAAK+J,MAAMtF,OAAQqD,IACnC9H,KAAKmK,QAAQrC,GAAG1H,GAAKgG,EAAO0B,WCZ/BgF,UAA+BpD,EACxC5H,YAAYyB,GACRqJ,MAAMrJ,GAEV8H,sBACI,OAAOrL,KAAK+J,MAAMtF,OAAS,EAE/BiH,iBAAiBmB,GACb,IAAK,IAAIzM,EAAI,EAAGA,EAAIJ,KAAK+J,MAAMtF,OAAQrE,IAAK,CACxC,IAAIiG,EACJA,EAAMrG,KAAK+J,MAAM7E,cAAc2H,EAAezM,GAC9CJ,KAAKmK,QAAQ/J,GAAKiG,EAAIf,MAAM,EAAGtF,KAAKiE,SCVzC,IAAI8I,ECDAC,ECCAC,GFCX,SAAWC,GACPA,EAAUA,EAAA,mBAAkC,GAAK,qBACjDA,EAAUA,EAAA,uBAAsC,GAAK,yBAFzD,CAGGH,IAAcA,aACJI,EACT5F,aAAa6F,EAAW7J,GACpB,OAAQ6J,GACJ,KAAKL,EAAUM,mBACX,OAAO,IAAIV,EAAmBpJ,GAClC,KAAKwJ,EAAUO,uBACX,OAAO,IAAIR,EAAuBvJ,WGbrCgK,EACTzL,YAAY0L,IAEZ7B,OAAOxB,GACH,GAAgC,MAA5BnK,KAAKyN,YAAYC,UACjB1N,KAAKyN,YAAYC,QAAUC,SAASC,eAAe5N,KAAKyN,YAAYI,WACpC,MAA5B7N,KAAKyN,YAAYC,SACjB,KAAO,yDCNVI,UAAsBP,EAC/BzL,YAAY0L,GACRZ,MAAMY,GACNxN,KAAKyN,aACDI,UAAWL,EAAWK,UACtBH,QAASF,EAAWE,QACpBK,WAAYP,EAAWO,WAAaP,EAAWO,WAAa,UAC5DC,YAAaR,EAAWQ,YAAcR,EAAWQ,YAAc,UAC/DC,cAAeT,EAAWS,cAAgBT,EAAWS,cAAgB,UACrEC,eAAgBV,EAAWU,eAAiBV,EAAWU,eAAiB,WAGhFV,iBACI,OAAOxN,KAAKyN,YAEhBC,cACI,OAAO1N,KAAKyN,YAAYC,QAE5B/B,OAAOxB,GACHyC,MAAMjB,OAAOxB,GACb,MAAMgE,EAAMnO,KAAK0N,QAAQU,WAAW,MAChCpO,KAAK0N,QAAQzJ,OAASjE,KAAK0N,QAAQW,aAA2C,GAA5BrO,KAAK0N,QAAQW,cAC/DrO,KAAK0N,QAAQzJ,MAAQjE,KAAK0N,QAAQW,aAElCrO,KAAK0N,QAAQjJ,QAAUzE,KAAK0N,QAAQY,cAA6C,GAA7BtO,KAAK0N,QAAQY,eACjEtO,KAAK0N,QAAQjJ,OAASzE,KAAK0N,QAAQY,cAEvCH,EAAII,UAAU,EAAG,EAAGvO,KAAK0N,QAAQzJ,MAAOjE,KAAK0N,QAAQjJ,QACrD,MAAM+J,EAAenM,KAAKgB,MAAMrD,KAAK0N,QAAQzJ,MAAQkG,EAAQ,GAAGjI,QAC1DuM,EAAgBpM,KAAKgB,MAAMrD,KAAK0N,QAAQjJ,OAAS0F,EAAQjI,QAC/DiM,EAAIO,UAAY,EAChB,MAAMC,EAAoB,CAACvN,EAAOwN,EAAWC,KACzCV,EAAIW,YAAcD,EAClBV,EAAIY,UAAYH,EAChBT,EAAIa,YACJ,IAAK,IAAI5O,EAAI,EAAGA,EAAI+J,EAAQjI,OAAQ9B,IAChC,IAAK,IAAI0H,EAAI,EAAGA,EAAIqC,EAAQ/J,GAAG8B,OAAQ4F,IAC/BqC,EAAQ/J,GAAG0H,IAAM1G,IACjBpB,KAAKiP,cAAcd,EAAK/N,EAAG0H,EAAG0G,EAAcC,GAC5CzO,KAAKkP,QAAQf,EAAK/N,EAAG0H,EAAG0G,EAAcC,IAIlDN,EAAIgB,OACJhB,EAAIiB,UAERT,EAAkB,EAAG3O,KAAKyN,YAAYO,YAAahO,KAAKyN,YAAYS,gBACpES,EAAkB,EAAG3O,KAAKyN,YAAYM,WAAY/N,KAAKyN,YAAYQ,iBH9C3E,SAAWoB,GAcPA,EAAeC,sBAbOxB,EAClBhM,YAAY0L,GACRZ,MAAMY,GAEVyB,cAAcd,EAAK/N,EAAG0H,EAAGyH,EAAGhG,GACxB4E,EAAIqB,OAAOD,GAAKzH,EAAI,GAAIyB,GAAKnJ,EAAI,GAAKmJ,EAAI,GAE9C2F,QAAQf,EAAK/N,EAAG0H,EAAGyH,EAAGhG,GAClB,MAAMkG,EAAOF,EAAI,EACXG,EAAOnG,EAAI,EACjB4E,EAAIwB,QAAQJ,EAAIzH,EAAI2H,EAAMlG,EAAInJ,EAAIsP,EAAMD,EAAMC,EAAM,EAAG,EAAG,EAAIrN,KAAKuN,MAc3EP,EAAeQ,mBAVI/B,EACfhM,YAAY0L,GACRZ,MAAMY,GAEV0B,QAAQY,EAAS1P,EAAG0H,EAAGyH,EAAGhG,GACtB,OAAOuG,EAAQC,KAAKR,EAAIzH,EAAGyB,EAAInJ,EAAGmP,EAAGhG,GAEzC0F,cAAcd,EAAK/N,EAAG0H,EAAGyH,EAAGhG,MAtBpC,CA0BGyD,IAAmBA,aI3BTgD,UAAsBzC,EAC/BzL,YAAY0L,GACRZ,MAAMY,GACNxN,KAAKyN,aACDI,UAAWL,EAAWK,UACtBH,QAASF,EAAWE,QACpBuC,eAAgBzC,EAAWyC,eAAiBzC,EAAWyC,eAAiB,IACxEC,gBAAiB1C,EAAW0C,gBAAkB1C,EAAW0C,gBAAkB,KAGnF1C,iBACI,OAAOxN,KAAKyN,YAEhB9B,OAAOxB,GACHyC,MAAMjB,OAAOxB,GACb,IAAIpE,EAAS,GACb,IAAK,IAAI3F,EAAI,EAAGA,EAAI+J,EAAQjI,OAAQ9B,IAAK,CACrC,IAAK,IAAI0H,EAAI,EAAGA,EAAIqC,EAAQ/J,GAAG8B,OAAQ4F,IACnC/B,GAA2B,GAAjBoE,EAAQ/J,GAAG0H,GACjB9H,KAAKyN,YAAYwC,eACjBjQ,KAAKyN,YAAYyC,gBAEzBnK,GAAU,KAEd/F,KAAKyN,YAAYC,QAAQyC,UAAYpK,IHtB7C,SAAWqK,GACPA,EAAaA,EAAA,MAAwB,GAAK,QAC1CA,EAAaA,EAAA,aAA+B,GAAK,eACjDA,EAAaA,EAAA,aAA+B,GAAK,eAHrD,CAIGnD,IAAiBA,aACPoD,EACT9I,aAAa+I,EAAczC,GACvB,OAAQyC,GACJ,KAAKrD,EAAasD,MACd,OAAO,IAAIP,GACPnC,UAAWA,IAEnB,KAAKZ,EAAauD,aACd,OAAO,IAAIxD,EAAe6C,MACtBhC,UAAWA,IAEnB,KAAKZ,EAAawD,aACd,OAAO,IAAIzD,EAAesC,SACtBzB,UAAWA,YIrBlB6C,EACTnJ,mBAAmBoJ,GACf,IAAIC,KACJD,EAAMnG,YAAYpB,GAAIyH,IAClBD,EAASlO,KAAKmO,EAAW1G,WAE7B,IAAI2G,EAAYH,EAAM1N,MAEtB0N,EAAMxF,KAAK,GACX,IAAK,IAAI/K,EAAI,EAAGA,GAAKuQ,EAAMtF,gBAAiBjL,IACxCuQ,EAAMrF,OAGV,OADAqF,EAAMxF,KAAK2F,GACJF,SCNFG,EACTjP,YAAYyB,GACRvD,KAAKgR,QAAU,IAAI9H,EACnBlJ,KAAKiR,QAAUjR,KAAKkR,oBAAoB3N,GACxCvD,KAAK8J,OAAS,IAAIxG,GACdI,cAAe1D,KAAKiR,QAAQvN,cAC5BC,QAAS3D,KAAKiR,QAAQtN,UAE1B3D,KAAKmR,WAAanR,KAAKiR,QAAQ7D,UAC/BpN,KAAKoR,OAASjE,EAAakE,MAAMrR,KAAKiR,QAAQ7D,WAC1CrD,MAAO/J,KAAK8J,OACZO,SAAUrK,KAAKiR,QAAQ5G,SACvBR,IAAK7J,KAAKiR,QAAQpH,IAClBK,UAAWlK,KAAKiR,QAAQ/G,UACxBK,QAASvK,KAAKiR,QAAQ1G,QACtBtG,MAAOjE,KAAKiR,QAAQK,aAExBtR,KAAKuR,OACDC,YAAaxR,KAAKoR,OAAO5G,YACzBiH,iBAAkBzR,KAAKoR,OAAO3G,iBAC9BiH,MAAO1R,KAAK2R,OAGpBA,YAAc,OAAO3R,KAAKgR,QAAQvH,SAClCmI,KAAKnP,EAAM+J,GACPvE,EAAe4J,OAAO7R,KAAKiR,QAAQa,eAAgBrP,GAAc,EAAImB,IACjE5D,KAAK+R,YAAc,IAAIxL,EACvBvG,KAAK+R,YAAYrL,IAAI9C,GACrB5D,KAAK8J,OAAOvE,KAA0B,MAArBvF,KAAK8J,OAAOjG,MAAgB7D,KAAK8J,OAAOjG,MAAQ7D,KAAKiR,QAAQpN,MAAO7D,KAAK+R,aAC1F/R,KAAKgR,QAAQxH,UACTgD,GACAA,MAIZ/J,WACI,OAAOzC,KAAKiC,MAEhBQ,SAASrB,GACLpB,KAAKiC,MAAQb,EACbpB,KAAK4R,KAAKxQ,GAEd6B,YACI,OAAOjD,KAAKoR,OAAOnO,MAEvBoI,sBACI,OAAOrL,KAAKoR,OAAO/F,gBAEvB2G,cACI,OAAOtB,EAAcsB,YAAYhS,KAAKoR,QAE1Ca,aAAa5N,GACTrE,KAAK+R,YAAYrL,KAAKrC,IAE1B6N,cAAc7N,GACVrE,KAAK+R,YAAYhL,KAAK1C,GAE1B8N,gBAAgB9N,GACZrE,KAAK+R,YAAY5K,OAAO9C,GAE5B+N,uBACI,OAAOpS,KAAK+R,YAAYnO,WAE5ByO,qBACI,OAAOrS,KAAK8J,OAAOlG,WAEvB0O,YAAYlR,GACRpB,KAAK8J,OAAOpG,cAAgBtC,EAC5BpB,KAAKoR,OAAOrH,MAAQ/J,KAAK8J,OAE7BwI,cACI,OAAOtS,KAAK8J,OAAOpG,cAEvBC,YAAYvC,GACRpB,KAAK8J,OAAOnG,QAAUvC,EACtBpB,KAAKoR,OAAOrH,MAAQ/J,KAAK8J,OAE7BnG,cACI,OAAO3D,KAAK8J,OAAOnG,QAEvBM,YACI,OAAOjE,KAAK8J,OAAO7F,MAEvBQ,aACI,OAAOzE,KAAK8J,OAAOrF,OAEvBZ,UAAUzC,GACNpB,KAAK8J,OAAOvE,KAAKnE,EAAOpB,KAAK+R,aAEjClO,YACI,OAAO7D,KAAK8J,OAAOjG,MAEvB+G,OACI5K,KAAKoR,OAAOxG,OAEhBG,OACI/K,KAAKoR,OAAOrG,OAEhBG,QACIlL,KAAKoR,OAAOlG,QAEhBD,SACIjL,KAAKoR,OAAOnG,SAEhBK,OACItL,KAAKoR,OAAO9F,OAEhBH,KAAKC,GACDpL,KAAKoR,OAAOjG,KAAKC,GAErBgC,cAAchM,GACVpB,KAAKmR,WAAa/P,EAClBpB,KAAKoR,OAAOrG,OACZ/K,KAAKoR,OAASjE,EAAakE,MAAMrR,KAAKmR,YAClCpH,MAAO/J,KAAK8J,OACZO,SAAUrK,KAAKoR,OAAO/G,SACtBR,IAAK7J,KAAKoR,OAAOvH,IACjBK,UAAWlK,KAAKoR,OAAOlH,UACvBK,QAASvK,KAAKoR,OAAO7G,QACrBtG,MAAOjE,KAAKoR,OAAOnN,QAEvBjE,KAAKoR,OAAOxG,OAEhBwC,gBACI,OAAOpN,KAAKmR,WAEhB9G,aAAajJ,GACTpB,KAAKoR,OAAO/G,SAAWjJ,EAE3BmR,uBAAuBnR,GACnBpB,KAAKoR,OAAO/G,SAAWgG,EAAgBgB,MAAMjQ,EAAMkP,aAAclP,EAAMyM,WAE3ExD,eACI,OAAOrK,KAAKoR,OAAO/G,SAEvBR,QAAQzI,GACJpB,KAAKoR,OAAOvH,IAAMzI,EAEtByI,UACI,OAAO7J,KAAKoR,OAAOvH,IAEvBK,cAAc9I,GACVpB,KAAKoR,OAAOlH,UAAY9I,EAE5B8I,gBACI,OAAOlK,KAAKoR,OAAOlH,UAEvBK,YAAYnJ,GACRpB,KAAKoR,OAAO7G,QAAUnJ,EAE1BmJ,cACI,OAAOvK,KAAKoR,OAAO7G,QAEvBiI,kBAAkBpR,GACdpB,KAAKoR,OAAOnN,MAAQ7C,EAExBoR,oBACI,OAAOxS,KAAKoR,OAAOnN,MAEvBiN,oBAAoB3N,GAChB,MAAMkP,GACF5O,MAAO,cACPiO,eAAgB,gBAChBjI,IAAK,GACLK,UAAW,EACXkD,UAAWL,EAAUM,mBACrBiD,aAAcrD,EAAasD,MAC3B1C,UAAW,aACXtD,SAAS,EACT+G,WAAY,GACZ5N,cAAe,EACfC,SAAU,EAAG,IAEjB,OAAIJ,GACAA,EAAOM,MAAQ7D,KAAK0S,gBAAgBnP,EAAOM,MAAO4O,EAAc5O,OAChEN,EAAOuO,eAAiB9R,KAAK0S,gBAAgBnP,EAAOuO,eAAgBW,EAAcX,gBAClFvO,EAAOG,cAAgB1D,KAAK0S,gBAAgBnP,EAAOG,cAAe+O,EAAc/O,eAChFH,EAAOI,QAAU3D,KAAK0S,gBAAgBnP,EAAOI,QAAS8O,EAAc9O,SACpEJ,EAAOsG,IAAM7J,KAAK0S,gBAAgBnP,EAAOsG,IAAK4I,EAAc5I,KAC5DtG,EAAO2G,UAAYlK,KAAK0S,gBAAgBnP,EAAO2G,UAAWuI,EAAcvI,WACxE3G,EAAO6J,UAAYpN,KAAK0S,gBAAgBnP,EAAO6J,UAAWqF,EAAcrF,WAExE7J,EAAOgH,QAAUvK,KAAK0S,gBAAgBnP,EAAOgH,QAASkI,EAAclI,SACpEhH,EAAO+N,WAAatR,KAAK0S,gBAAgBnP,EAAO+N,WAAYmB,EAAcnB,YACnD,MAAnB/N,EAAO8G,SACP9G,EAAO8G,SAAW9G,EAAO8G,UAGzB9G,EAAO+M,aAAetQ,KAAK0S,gBAAgBnP,EAAO+M,aAAcmC,EAAcnC,cAC9E/M,EAAOsK,UAAY7N,KAAK0S,gBAAgBnP,EAAOsK,UAAW4E,EAAc5E,WACxEtK,EAAO8G,SAAWgG,EAAgBgB,MAAM9N,EAAO+M,aAAc/M,EAAOsK,YAEjEtK,GAEJkP,EAEXC,gBAAgBtR,EAAOuR,GACnB,OAAOvR,GAAgBuR","file":"./src/led-matrix.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ledMatrix\"] = factory();\n\telse\n\t\troot[\"ledMatrix\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class BitArray {\n    constructor(values) {\n        this._bitPerIndex = 8;\n        this._size = values.length;\n        this._array = new Uint8Array(Math.ceil(this._size / this._bitPerIndex));\n        this._pointer = 0;\n        this.pushAll(values);\n    }\n    get size() {\n        return this._size;\n    }\n    push(value) {\n        if (this._pointer == this._size) {\n            throw `Bit array max size reached (${this._size})`;\n        }\n        const mask = this._createMask(this._pointer);\n        if (this._matchesMask(mask, this._array[this._arrayIndex(this._pointer)])) {\n            if (value === 0) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        else {\n            if (value === 1) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        this._pointer++;\n    }\n    pushAll(values) {\n        values.forEach((value) => {\n            this.push(value);\n        });\n    }\n    atIndex(index) {\n        if (index > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const mask = this._createMask(index);\n        return this._matchesMask(mask, this._array[this._arrayIndex(index)]) ? 1 : 0;\n    }\n    atIndexRange(index, count) {\n        if (index + count - 1 > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const values = [];\n        for (let i = 0; i < count; i++) {\n            const mask = this._createMask(index + i);\n            values.push(this._matchesMask(mask, this._array[this._arrayIndex(index + i)]) ? 1 : 0);\n        }\n        return values;\n    }\n    _matchesMask(mask, value) {\n        return (mask & value) != 0;\n    }\n    _createMask(index) {\n        return 1 << (this._bitPerIndex - 1) - this._arrayIndexOffset(index);\n    }\n    _arrayIndex(index) {\n        return Math.floor(index / this._bitPerIndex);\n    }\n    _arrayIndexOffset(index) {\n        return index % this._bitPerIndex;\n    }\n}\n;\n//# sourceMappingURL=bit-array.js.map","export class Board {\n    constructor(params) {\n        this._characters = [];\n        this._letterSpacing = params.letterSpacing;\n        this.padding = params.padding;\n    }\n    set letterSpacing(value) {\n        if (value == null) {\n            throw `Board's spacing cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Board's spacing cannot be set to a negative number (${value})`;\n        }\n        this._letterSpacing = value;\n    }\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n    get characters() {\n        return this._characters;\n    }\n    get input() {\n        return this._input;\n    }\n    set padding(value) {\n        value.forEach(x => {\n            if (x == null) {\n                throw `Board's padding cannot set to null`;\n            }\n            if (x < 0) {\n                throw `Board's padding cannot be set to a negative number (${value})`;\n            }\n        });\n        if (value.length == 1) {\n            this._padding = [value[0], value[0], value[0], value[0]];\n        }\n        else if (value.length == 2) {\n            this._padding = [value[0], value[1], value[0], value[1]];\n        }\n        else {\n            this._padding = value;\n        }\n    }\n    get padding() {\n        return this._padding;\n    }\n    get width() {\n        return this._horizontalPaddingWidth() +\n            this._totalSpacingWidth() +\n            this._characters\n                .map(character => character.width)\n                .reduce((accumulator, current) => accumulator + current);\n    }\n    get height() {\n        return this._verticalPaddingWidth() +\n            this._characters\n                .reduce((accumulator, current) => current.height > accumulator.height ? current : accumulator).height;\n    }\n    getColumnAtIndex(index) {\n        index %= this.width;\n        if (index < this._padding[3] || index >= this.width - this._padding[1]) {\n            return this._createBitOffArrayOfLength(this.height);\n        }\n        let accumulator = this._padding[3];\n        let toReturn;\n        this._characters.some((character) => {\n            accumulator += character.width;\n            if (accumulator > index) {\n                const characterColumn = character.getColumn(index - (accumulator - character.width));\n                toReturn = this._createBitOffArrayOfLength(this._padding[0])\n                    .concat(characterColumn)\n                    .concat(this._createBitOffArrayOfLength(this._padding[2]))\n                    .concat(characterColumn.length < this.height ? this._createBitOffArrayOfLength(this.height - characterColumn.length) : []);\n                return true;\n            }\n            accumulator += this._letterSpacing;\n            if (accumulator > index) {\n                toReturn = this._createBitOffArrayOfLength(this.height);\n                return true;\n            }\n        });\n        return toReturn;\n    }\n    getRowAtIndex(index) {\n        index %= this.height;\n        if (index < this._padding[0] || index >= this.height - this._padding[2]) {\n            return this._createBitOffArrayOfLength(this.width);\n        }\n        let charactersWithSpace = [].concat.apply([], this._characters.map(x => x.getRow(index - this._padding[0]).concat(this._createBitOffArrayOfLength(this._letterSpacing))));\n        charactersWithSpace = charactersWithSpace.slice(0, charactersWithSpace.length - this._letterSpacing);\n        return this._createBitOffArrayOfLength(this._padding[3])\n            .concat(charactersWithSpace)\n            .concat(this._createBitOffArrayOfLength(this._padding[1]));\n    }\n    load(input, dictionnary) {\n        const escapeCharacter = '~';\n        const delimiterWord = {\n            start: \"(\",\n            end: \")\"\n        };\n        this._characters = [];\n        for (let i = 0; i < input.length; i++) {\n            let characterBuffer = input[i];\n            if (characterBuffer === escapeCharacter) {\n                if (i == input.length - 1) {\n                    throw `No character escaped at the end of the string input`;\n                }\n                characterBuffer = input[++i];\n            }\n            else if (characterBuffer === delimiterWord.start && (i === 0 || input[i - 1] !== escapeCharacter)) {\n                do {\n                    characterBuffer += input[++i];\n                    if (i == input.length) {\n                        throw `Could not find the ending delimiter \"${delimiterWord.end}\" for pattern ${characterBuffer}`;\n                    }\n                } while (input[i] != delimiterWord.end);\n                characterBuffer = characterBuffer.slice(1, -1);\n            }\n            this._characters.push(dictionnary.find(characterBuffer));\n        }\n        this._input = input;\n    }\n    _horizontalPaddingWidth() {\n        return this._padding[1] + this._padding[3];\n    }\n    _totalSpacingWidth() {\n        return (this._characters.length - 1) * this._letterSpacing;\n    }\n    _verticalPaddingWidth() {\n        return this._padding[0] + this._padding[2];\n    }\n    _createBitOffArrayOfLength(length) {\n        return Array.apply(null, Array(length)).map(() => 0);\n    }\n}\n;\n//# sourceMappingURL=board.js.map","export class Character {\n    constructor(pattern, output, width) {\n        this._pattern = pattern;\n        this._output = output;\n        if (output.size >= width) {\n            this._width = width;\n        }\n        else {\n            throw `Output size (${output.size}) can't be smaller than the character's width (${width})`;\n        }\n        if (output.size % width === 0) {\n            this._height = output.size / width;\n        }\n        else {\n            throw `Output size (${output.size}) must be divisible by the character's width (${width})`;\n        }\n    }\n    getColumn(index) {\n        if (index < 0) {\n            throw `Index (${index}) cannot be negative`;\n        }\n        if (index >= this._width) {\n            throw `Index (${index}) is greater than the width of the character (${this._width})`;\n        }\n        let column = [];\n        for (let i = 0; i < this._height; i++) {\n            column.push(this._output.atIndex(i * this._width + index));\n        }\n        return column;\n    }\n    getRow(index) {\n        if (index < 0) {\n            throw `Index (${index}) cannot be negative`;\n        }\n        if (index >= this._height) {\n            throw `Index (${index}) is greater than the height of the character (${this._height})`;\n        }\n        let row = [];\n        for (let i = 0; i < this._width; i++) {\n            row.push(this._output.atIndex(index * this._width + i));\n        }\n        return row;\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    get output() {\n        return this._output;\n    }\n    hasPattern(input) {\n        return this._pattern == input;\n    }\n}\n;\n//# sourceMappingURL=character.js.map","export class CharacterDictionary {\n    constructor() {\n        this._characters = [];\n    }\n    find(input) {\n        const character = this._characters.filter(x => x.hasPattern(input));\n        if (character && character.length > 0) {\n            return character[0];\n        }\n        throw `Could not find character ${input} in the alphabet`;\n    }\n    get characters() {\n        return this._characters;\n    }\n    get height() {\n        return Math.max.apply(Math, this._characters.map(x => x.height));\n    }\n    get length() {\n        return this._characters.length;\n    }\n    add(pendingCharacters) {\n        const pendingPatterns = pendingCharacters.map(x => x.pattern);\n        const duplicatedPendingPatterns = pendingPatterns.filter((value, index, array) => {\n            return array.indexOf(value) != index;\n        });\n        if (duplicatedPendingPatterns.length > 0) {\n            throw `Pattern already used by another pending character`;\n        }\n        if (this._characters.length > 0) {\n            const alreadyAddedPatterns = this._characters.map(x => x.pattern);\n            const duplicatedPatterns = alreadyAddedPatterns.filter((value) => {\n                return pendingPatterns.indexOf(value) != -1;\n            });\n            if (duplicatedPatterns.length > 0) {\n                throw `Pattern already used by another character`;\n            }\n        }\n        this._characters.push(...pendingCharacters);\n    }\n    edit(pendingCharacter) {\n        let edited = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !edited) {\n                arr[index] = pendingCharacter;\n                edited = true;\n            }\n        });\n        if (!edited) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted edit operation`;\n        }\n    }\n    delete(pendingCharacter) {\n        let deleted = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !deleted) {\n                arr.splice(index, 1);\n                deleted = true;\n            }\n        });\n        if (!deleted) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted delete operation`;\n        }\n    }\n}\n;\n//# sourceMappingURL=character-dictionary.js.map","export class NearestNeighbor {\n    static scale(matrix, width, factor) {\n        const ratio = 1 / factor;\n        const h1 = matrix.length / width;\n        const w2 = width * factor;\n        const h2 = h1 * factor;\n        let finalMatrix = new Array(w2 * h2);\n        for (let i = 0; i < h2; i++) {\n            for (let j = 0; j < w2; j++) {\n                const px = Math.floor(j * ratio);\n                const py = Math.floor(i * ratio);\n                finalMatrix[(i * w2) + j] = matrix[(py * width) + px];\n            }\n        }\n        return finalMatrix;\n    }\n}\n//# sourceMappingURL=character-sizer.js.map","import { Character } from \"./character\";\nimport { BitArray } from \"./bit-array\";\nimport { NearestNeighbor } from \"./character-sizer\";\nexport class CharactersJSON {\n    static import(path, size, success) {\n        fetch(path)\n            .then((response) => {\n            return response.text();\n        })\n            .then((response) => {\n            success(CharactersJSON.parse(response, size));\n        })\n            .catch((error) => {\n            throw `Couldn't fetch file: ${path}`;\n        });\n    }\n    static export() {\n    }\n    static parse(json, size) {\n        if (size < 1 || size > 10) {\n            throw 'Size should be between 1 and 10';\n        }\n        const data = JSON.parse(json);\n        if (data == null) {\n            throw 'Invalid character json file';\n        }\n        if (data.characters == null) {\n            throw 'Invalid character json file: Can\\'t find property characters';\n        }\n        return data.characters.map(x => {\n            if (x.pattern == null) {\n                throw 'Invalid character json file: Can\\'t find property patterns for a character';\n            }\n            if (x.output == null) {\n                throw 'Invalid character json file: Can\\'t find property output for a character';\n            }\n            if (x.width == null) {\n                throw 'Invalid character json file: Can\\'t find property width for a character';\n            }\n            const characterRaw = x.output.map(x => x);\n            const character = NearestNeighbor.scale(characterRaw, x.width, size);\n            return new Character(x.pattern, new BitArray(character), x.width * size);\n        });\n    }\n    static stringify(characters) {\n        if (characters == null || characters.length == 0) {\n            return JSON.stringify(\"\");\n        }\n        return JSON.stringify({\n            characters: characters.map(x => {\n                return {\n                    patterns: x.pattern,\n                    output: x.output.atIndexRange(0, x.output.size),\n                    width: x.width\n                };\n            })\n        });\n    }\n}\n//# sourceMappingURL=character-json.js.map","export class Event {\n    constructor() {\n        this.handlers = [];\n    }\n    on(handler) {\n        this.handlers.push(handler);\n    }\n    off(handler) {\n        this.handlers = this.handlers.filter(h => h !== handler);\n    }\n    trigger(data) {\n        this.handlers.slice(0).forEach(h => h(data));\n    }\n    expose() {\n        return this;\n    }\n}\n//# sourceMappingURL=event.js.map","import { Event } from './event';\nexport class Panel {\n    constructor(params) {\n        this.onPanelUpdate = new Event();\n        this.onReachingBoundary = new Event();\n        this.width = params.width;\n        this.fps = params.fps;\n        this._board = params.board;\n        this._index = 0;\n        this._increment = params.increment;\n        this.display = [];\n        this._renderer = params.renderer;\n        this._reverse = params.reverse;\n    }\n    get PanelUpdate() { return this.onPanelUpdate.expose(); }\n    get ReachingBoundary() { return this.onReachingBoundary.expose(); }\n    get index() {\n        return this._index;\n    }\n    set width(value) {\n        if (value == null) {\n            throw `Panel's width cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Panel's width cannot be set to a negative number (${value})`;\n        }\n        this._width = value;\n    }\n    get width() {\n        return this._width;\n    }\n    set fps(value) {\n        if (value == null) {\n            throw `Panel's fps cannot be set to null`;\n        }\n        if (value < 0) {\n            throw `Panel's fps cannot be set to a negative number (${value})`;\n        }\n        const maxFps = 60;\n        if (value > maxFps) {\n            throw `Panel's fps has to be lower than ${maxFps}`;\n        }\n        this._fps = value;\n        this._fpsInterval = 1000 / this._fps;\n    }\n    get fps() {\n        return this._fps;\n    }\n    set board(value) {\n        if (value == null) {\n            throw `Panel's board cannot be set to null`;\n        }\n        this._board = value;\n    }\n    get board() {\n        return this._board;\n    }\n    set increment(value) {\n        if (value == null) {\n            throw `Panel's fps cannot be set to a null value`;\n        }\n        if (value < 0) {\n            throw `Panel's fps cannot be set to a negative number (${value})`;\n        }\n        this._increment = value;\n    }\n    get increment() {\n        return this._increment;\n    }\n    set renderer(value) {\n        if (value == null) {\n            throw `Panel's renderer cannot be set to null`;\n        }\n        this._renderer = value;\n    }\n    get renderer() {\n        return this._renderer;\n    }\n    set reverse(value) {\n        if (value == null) {\n            throw `Panel's reverse cannot be set to null`;\n        }\n        this._reverse = value;\n    }\n    get reverse() {\n        return this._reverse;\n    }\n    play() {\n        this._index = 0;\n        this._draw();\n        this._startLoop();\n    }\n    stop() {\n        this._index = 0;\n        this._draw();\n        this._shouldUpdate = false;\n    }\n    resume() {\n        this._startLoop();\n    }\n    pause() {\n        this._shouldUpdate = false;\n    }\n    seek(frame) {\n        if (frame == null || frame < 0 || frame > this.indexUpperBound) {\n            throw `Seek expects a value between 0 and ${this.indexUpperBound}`;\n        }\n        this._index = frame;\n        this._draw();\n    }\n    tick() {\n        this._step();\n    }\n    _step() {\n        this._tickIndex();\n        this._draw();\n    }\n    _draw() {\n        this._resetPanel();\n        this._generateDisplay(this._index);\n        this.onPanelUpdate.trigger({ display: this.display });\n        this._renderer.render(this.display);\n    }\n    _tickIndex() {\n        this._reverse ? this._decrementIndex() : this._incrementIndex();\n    }\n    _resetPanel() {\n        this.display.splice(0, this.display.length);\n        for (let i = 0; i < this._board.height; i++) {\n            this.display.push(Array.apply(null, Array(this.width)).map(Number.prototype.valueOf, 0));\n        }\n    }\n    _incrementIndex() {\n        if (this._index >= this.indexUpperBound) {\n            this.onReachingBoundary.trigger();\n            this._index = 0;\n        }\n        else {\n            this._index += this._increment;\n        }\n    }\n    _decrementIndex() {\n        if (this._index === 0) {\n            this.onReachingBoundary.trigger();\n            this._index = this.indexUpperBound;\n        }\n        else {\n            this._index -= this._increment;\n        }\n    }\n    _startLoop() {\n        this._then = Date.now();\n        this._startTime = this._then;\n        this._shouldUpdate = true;\n        this._loop();\n    }\n    _loop() {\n        requestAnimationFrame(this._loop.bind(this));\n        if (this._shouldUpdate) {\n            this._onNextFrame(this._step.bind(this));\n        }\n    }\n    _onNextFrame(callback) {\n        this._now = Date.now();\n        this._elapsed = this._now - this._then;\n        if (this._elapsed > this._fpsInterval) {\n            this._then = this._now - (this._elapsed % this._fpsInterval);\n            callback();\n        }\n    }\n}\n;\n//# sourceMappingURL=panel.js.map","import { Panel } from \"../panel\";\nexport class SideScrollingPanel extends Panel {\n    constructor(params) {\n        super(params);\n    }\n    get indexUpperBound() {\n        return this.board.width - 1;\n    }\n    _generateDisplay(currentIndex) {\n        for (let i = 0; i < this.width; i++) {\n            let column;\n            column = this.board.getColumnAtIndex(currentIndex + i);\n            for (let j = 0; j < this.board.height; j++) {\n                this.display[j][i] = column[j];\n            }\n        }\n    }\n}\n//# sourceMappingURL=side-scrolling-panel.js.map","import { Panel } from \"../panel\";\nexport class VerticalScrollingPanel extends Panel {\n    constructor(params) {\n        super(params);\n    }\n    get indexUpperBound() {\n        return this.board.height - 1;\n    }\n    _generateDisplay(currentIndex) {\n        for (let i = 0; i < this.board.height; i++) {\n            let row;\n            row = this.board.getRowAtIndex(currentIndex + i);\n            this.display[i] = row.slice(0, this.width);\n        }\n    }\n}\n//# sourceMappingURL=vertical-scrolling-panel.js.map","import { SideScrollingPanel } from \"./panels/side-scrolling-panel\";\nimport { VerticalScrollingPanel } from \"./panels/vertical-scrolling-panel\";\nexport var PanelType;\n(function (PanelType) {\n    PanelType[PanelType[\"SideScrollingPanel\"] = 0] = \"SideScrollingPanel\";\n    PanelType[PanelType[\"VerticalScrollingPanel\"] = 1] = \"VerticalScrollingPanel\";\n})(PanelType || (PanelType = {}));\nexport class PanelBuilder {\n    static build(panelType, params) {\n        switch (panelType) {\n            case PanelType.SideScrollingPanel:\n                return new SideScrollingPanel(params);\n            case PanelType.VerticalScrollingPanel:\n                return new VerticalScrollingPanel(params);\n        }\n    }\n}\n//# sourceMappingURL=panel-builder.js.map","import { CanvaRenderer } from \"./canva-renderer\";\nexport var CanvaRenderers;\n(function (CanvaRenderers) {\n    class Ellipse extends CanvaRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n            ctx.moveTo(w * (j + 1), h * (i + 1) - h / 2);\n        }\n        drawBit(ctx, i, j, w, h) {\n            const radW = w / 2;\n            const radH = h / 2;\n            ctx.ellipse(w * j + radW, h * i + radH, radW, radH, 0, 0, 2 * Math.PI);\n        }\n    }\n    CanvaRenderers.Ellipse = Ellipse;\n    class Rect extends CanvaRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        drawBit(context, i, j, w, h) {\n            return context.rect(w * j, h * i, w, h);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n        }\n    }\n    CanvaRenderers.Rect = Rect;\n})(CanvaRenderers || (CanvaRenderers = {}));\n//# sourceMappingURL=canva-renderers.js.map","import { CanvaRenderers } from \"./rendering/canva-renderers\";\nimport { AsciiRenderer } from \"./rendering/ascii-renderer\";\nexport var RendererType;\n(function (RendererType) {\n    RendererType[RendererType[\"ASCII\"] = 0] = \"ASCII\";\n    RendererType[RendererType[\"CanvasSquare\"] = 1] = \"CanvasSquare\";\n    RendererType[RendererType[\"CanvasCircle\"] = 2] = \"CanvasCircle\";\n})(RendererType || (RendererType = {}));\nexport class RendererBuilder {\n    static build(rendererType, elementId) {\n        switch (rendererType) {\n            case RendererType.ASCII:\n                return new AsciiRenderer({\n                    elementId: elementId\n                });\n            case RendererType.CanvasSquare:\n                return new CanvaRenderers.Rect({\n                    elementId: elementId\n                });\n            case RendererType.CanvasCircle:\n                return new CanvaRenderers.Ellipse({\n                    elementId: elementId\n                });\n        }\n    }\n}\n//# sourceMappingURL=renderer-builder.js.map","export class Renderer {\n    constructor(parameters) {\n    }\n    render(display) {\n        if (this._parameters.element == null) {\n            this._parameters.element = document.getElementById(this._parameters.elementId);\n            if (this._parameters.element == null) {\n                throw `Could not find the element to render led matrix`;\n            }\n        }\n    }\n}\n//# sourceMappingURL=renderer.js.map","import { Renderer } from \"./renderer\";\nexport class CanvaRenderer extends Renderer {\n    constructor(parameters) {\n        super(parameters);\n        this._parameters = {\n            elementId: parameters.elementId,\n            element: parameters.element,\n            colorBitOn: parameters.colorBitOn ? parameters.colorBitOn : \"#00B16A\",\n            colorBitOff: parameters.colorBitOff ? parameters.colorBitOff : \"#22313F\",\n            colorStrokeOn: parameters.colorStrokeOn ? parameters.colorStrokeOn : \"#67809F\",\n            colorStrokeOff: parameters.colorStrokeOff ? parameters.colorStrokeOff : \"#67809F\"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    get element() {\n        return this._parameters.element;\n    }\n    render(display) {\n        super.render(display);\n        const ctx = this.element.getContext(\"2d\");\n        if (this.element.width != this.element.clientWidth && this.element.clientWidth != 0) {\n            this.element.width = this.element.clientWidth;\n        }\n        if (this.element.height != this.element.clientHeight && this.element.clientHeight != 0) {\n            this.element.height = this.element.clientHeight;\n        }\n        ctx.clearRect(0, 0, this.element.width, this.element.height);\n        const widthEachBit = Math.floor(this.element.width / display[0].length);\n        const heightEachBit = Math.floor(this.element.height / display.length);\n        ctx.lineWidth = 1;\n        const renderBitsOfValue = (value, fillColor, strokeColor) => {\n            ctx.strokeStyle = strokeColor;\n            ctx.fillStyle = fillColor;\n            ctx.beginPath();\n            for (var i = 0; i < display.length; i++) {\n                for (var j = 0; j < display[i].length; j++) {\n                    if (display[i][j] == value) {\n                        this.moveToNextBit(ctx, i, j, widthEachBit, heightEachBit);\n                        this.drawBit(ctx, i, j, widthEachBit, heightEachBit);\n                    }\n                }\n            }\n            ctx.fill();\n            ctx.stroke();\n        };\n        renderBitsOfValue(0, this._parameters.colorBitOff, this._parameters.colorStrokeOff);\n        renderBitsOfValue(1, this._parameters.colorBitOn, this._parameters.colorStrokeOn);\n    }\n}\n//# sourceMappingURL=canva-renderer.js.map","import { Renderer } from \"./renderer\";\nexport class AsciiRenderer extends Renderer {\n    constructor(parameters) {\n        super(parameters);\n        this._parameters = {\n            elementId: parameters.elementId,\n            element: parameters.element,\n            characterBitOn: parameters.characterBitOn ? parameters.characterBitOn : \"X\",\n            characterBitOff: parameters.characterBitOff ? parameters.characterBitOff : \" \"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    render(display) {\n        super.render(display);\n        let output = \"\";\n        for (var i = 0; i < display.length; i++) {\n            for (var j = 0; j < display[i].length; j++) {\n                output += display[i][j] == 1 ?\n                    this._parameters.characterBitOn :\n                    this._parameters.characterBitOff;\n            }\n            output += '\\n';\n        }\n        this._parameters.element.innerHTML = output;\n    }\n}\n//# sourceMappingURL=ascii-renderer.js.map","export class PanelRecorder {\n    static getSequence(panel) {\n        let sequence = [];\n        panel.PanelUpdate.on((panelFrame) => {\n            sequence.push(panelFrame.display);\n        });\n        let prevIndex = panel.index;\n        let i = 0;\n        panel.seek(0);\n        for (let i = 0; i <= panel.indexUpperBound; i++) {\n            panel.tick();\n        }\n        panel.seek(prevIndex);\n        return sequence;\n    }\n}\n//# sourceMappingURL=panel-recorder.js.map","import { Board } from \"./board\";\nimport { PanelBuilder, PanelType } from \"./panel-builder\";\nimport { RendererBuilder, RendererType } from \"./renderer-builder\";\nimport { Event } from \"./event\";\nimport { CharacterDictionary } from \"./character-dictionary\";\nimport { CharactersJSON } from \"./character-json\";\nimport { PanelRecorder } from './panel-recorder';\nexport class LedMatrix {\n    constructor(params) {\n        this.onReady = new Event();\n        this._params = this._validateParameters(params);\n        this._board = new Board({\n            letterSpacing: this._params.letterSpacing,\n            padding: this._params.padding\n        });\n        this._panelType = this._params.panelType;\n        this._panel = PanelBuilder.build(this._params.panelType, {\n            board: this._board,\n            renderer: this._params.renderer,\n            fps: this._params.fps,\n            increment: this._params.increment,\n            reverse: this._params.reverse,\n            width: this._params.panelWidth\n        });\n        this.event = {\n            panelUpdate: this._panel.PanelUpdate,\n            reachingBoundary: this._panel.ReachingBoundary,\n            ready: this.Ready\n        };\n    }\n    get Ready() { return this.onReady.expose(); }\n    init(size, callback) {\n        CharactersJSON.import(this._params.pathCharacters, size ? size : 1, (characters) => {\n            this._dictionary = new CharacterDictionary();\n            this._dictionary.add(characters);\n            this._board.load(this._board.input != null ? this._board.input : this._params.input, this._dictionary);\n            this.onReady.trigger();\n            if (callback) {\n                callback();\n            }\n        });\n    }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n        this.init(value);\n    }\n    get index() {\n        return this._panel.index;\n    }\n    get indexUpperBound() {\n        return this._panel.indexUpperBound;\n    }\n    getSequence() {\n        return PanelRecorder.getSequence(this._panel);\n    }\n    addCharacter(character) {\n        this._dictionary.add([character]);\n    }\n    editCharacter(character) {\n        this._dictionary.edit(character);\n    }\n    deleteCharacter(character) {\n        this._dictionary.delete(character);\n    }\n    get loadedCharacters() {\n        return this._dictionary.characters;\n    }\n    get usedCharacters() {\n        return this._board.characters;\n    }\n    set spacing(value) {\n        this._board.letterSpacing = value;\n        this._panel.board = this._board;\n    }\n    get spacing() {\n        return this._board.letterSpacing;\n    }\n    set padding(value) {\n        this._board.padding = value;\n        this._panel.board = this._board;\n    }\n    get padding() {\n        return this._board.padding;\n    }\n    get width() {\n        return this._board.width;\n    }\n    get height() {\n        return this._board.height;\n    }\n    set input(value) {\n        this._board.load(value, this._dictionary);\n    }\n    get input() {\n        return this._board.input;\n    }\n    play() {\n        this._panel.play();\n    }\n    stop() {\n        this._panel.stop();\n    }\n    pause() {\n        this._panel.pause();\n    }\n    resume() {\n        this._panel.resume();\n    }\n    tick() {\n        this._panel.tick();\n    }\n    seek(frame) {\n        this._panel.seek(frame);\n    }\n    set panelType(value) {\n        this._panelType = value;\n        this._panel.stop();\n        this._panel = PanelBuilder.build(this._panelType, {\n            board: this._board,\n            renderer: this._panel.renderer,\n            fps: this._panel.fps,\n            increment: this._panel.increment,\n            reverse: this._panel.reverse,\n            width: this._panel.width\n        });\n        this._panel.play();\n    }\n    get panelType() {\n        return this._panelType;\n    }\n    set renderer(value) {\n        this._panel.renderer = value;\n    }\n    setRendererFromBuilder(value) {\n        this._panel.renderer = RendererBuilder.build(value.rendererType, value.elementId);\n    }\n    get renderer() {\n        return this._panel.renderer;\n    }\n    set fps(value) {\n        this._panel.fps = value;\n    }\n    get fps() {\n        return this._panel.fps;\n    }\n    set increment(value) {\n        this._panel.increment = value;\n    }\n    get increment() {\n        return this._panel.increment;\n    }\n    set reverse(value) {\n        this._panel.reverse = value;\n    }\n    get reverse() {\n        return this._panel.reverse;\n    }\n    set viewportWidth(value) {\n        this._panel.width = value;\n    }\n    get viewportWidth() {\n        return this._panel.width;\n    }\n    _validateParameters(params) {\n        const defaultParams = {\n            input: \"hello world\",\n            pathCharacters: \"alphabet.json\",\n            fps: 30,\n            increment: 1,\n            panelType: PanelType.SideScrollingPanel,\n            rendererType: RendererType.ASCII,\n            elementId: 'led-matrix',\n            reverse: false,\n            panelWidth: 80,\n            letterSpacing: 2,\n            padding: [0, 4]\n        };\n        if (params) {\n            params.input = this._valueOrDefault(params.input, defaultParams.input);\n            params.pathCharacters = this._valueOrDefault(params.pathCharacters, defaultParams.pathCharacters);\n            params.letterSpacing = this._valueOrDefault(params.letterSpacing, defaultParams.letterSpacing);\n            params.padding = this._valueOrDefault(params.padding, defaultParams.padding);\n            params.fps = this._valueOrDefault(params.fps, defaultParams.fps);\n            params.increment = this._valueOrDefault(params.increment, defaultParams.increment);\n            params.panelType = this._valueOrDefault(params.panelType, defaultParams.panelType);\n            ;\n            params.reverse = this._valueOrDefault(params.reverse, defaultParams.reverse);\n            params.panelWidth = this._valueOrDefault(params.panelWidth, defaultParams.panelWidth);\n            if (params.renderer != null) {\n                params.renderer = params.renderer;\n            }\n            else {\n                params.rendererType = this._valueOrDefault(params.rendererType, defaultParams.rendererType);\n                params.elementId = this._valueOrDefault(params.elementId, defaultParams.elementId);\n                params.renderer = RendererBuilder.build(params.rendererType, params.elementId);\n            }\n            return params;\n        }\n        return defaultParams;\n    }\n    _valueOrDefault(value, defaultValue) {\n        return value ? value : defaultValue;\n    }\n}\n//# sourceMappingURL=led-matrix.js.map"],"sourceRoot":""}