{"version":3,"sources":["webpack://ledMatrix/webpack/universalModuleDefinition","webpack://ledMatrix/webpack/bootstrap","webpack://ledMatrix/./dist/esm/lib/utils/exception.js","webpack://ledMatrix/./dist/esm/lib/core/character.js","webpack://ledMatrix/./dist/esm/lib/utils/bit-array.js","webpack://ledMatrix/./dist/esm/lib/core/character-sizer.js","webpack://ledMatrix/./dist/esm/lib/utils/event.js","webpack://ledMatrix/./dist/esm/lib/core/board.js","webpack://ledMatrix/./dist/esm/lib/core/panel.js","webpack://ledMatrix/./dist/esm/lib/core/character-dictionary.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/side-scroller.js","webpack://ledMatrix/./dist/esm/lib/core/led-matrix.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/vertical-scroller.js","webpack://ledMatrix/./dist/esm/lib/core/scrollers/scroller-builder.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/canvas-renderers.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/renderer-builder.js","webpack://ledMatrix/./dist/esm/lib/core/character-json.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/renderer.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/canvas-renderer.js","webpack://ledMatrix/./dist/esm/lib/player/rendering/ascii-renderer.js","webpack://ledMatrix/./dist/esm/lib/player/panel-player.js","webpack://ledMatrix/./dist/esm/lib/player/led-matrix-player.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Exception","[object Object]","valueDescription","rangeFrom","rangeTo","className","methodName","character_Character","constructor","pattern","output","width","CLASS_NAME","_pattern","_output","size","_width","_height","height","getColumn","index","throwIfNotBetween","getDescriptionForProperty","column","push","atIndex","getRow","row","hasPattern","input","BitArray","values","_bitPerIndex","_size","length","_array","Uint8Array","Math","ceil","_pointer","pushAll","mask","_createMask","_matchesMask","_arrayIndex","forEach","atIndexRange","count","_arrayIndexOffset","floor","NearestNeighbor","matrix","factor","ratio","w2","h2","finalMatrix","Array","j","px","py","Event","handlers","on","handler","off","filter","h","trigger","data","slice","expose","board_Board","params","onPropertyChange","_characters","_letterSpacing","letterSpacing","padding","PropertyChange","_padding","characters","_input","paddingAndSpacingWidth","_horizontalPaddingWidth","_totalSpacingWidth","map","character","reduce","accumulator","current","_verticalPaddingWidth","letterSpacingDescription","throwIfNull","throwIfNegative","prevLetterSpacing","_emitPropertyChangeEvent","paddingDescription","x","nextPadding","prevPadding","getColumnAtIndex","_createBitOffArrayOfLength","toReturn","some","characterColumn","concat","getRowAtIndex","charactersWithSpace","apply","load","dictionnary","delimiterWord","characterBuffer","find","scale","prevValue","panel_Panel","_initiated","onNewSequence","_params","updateCurrentSequence","board","NewSequence","increment","reverse","scroller","widthDescription","fpsDescription","reverseDescription","GetCurrentSequence","sequence","panelIndex","loopEndIndex","_tickPanelIndex","generatePanelFrameAtIndex","_decrementIndex","_incrementIndex","CharacterDictionary","max","add","pendingCharacters","pendingPatterns","array","indexOf","edit","pendingCharacter","edited","arr","delete","deleted","splice","SideScroller","currentIndex","panel","columns","panelFrame","led_matrix_LedMatrix","onReady","_validateParameters","_panel","panelWidth","event","newSequence","_dictionary","Ready","addCharacters","addCharacter","editCharacter","deleteCharacter","loadedCharacters","usedCharacters","viewportWidth","defaultParams","_valueOrDefault","defaultValue","VerticalScroller","display","scroller_builder_ScrollerTypes","canvas_renderers_CanvasRenderers","renderer_builder_RendererTypes","ScrollerTypes","scroller_builder_ScrollerBuilder","scrollerType","elementId","Side","Vertical","character_json_CharactersJSON","path","success","fetch","then","response","text","parse","catch","error","json","JSON","stringify","patterns","Renderer","parameters","render","_parameters","element","document","getElementById","clientHeight","clientWidth","canvas_renderer_CanvasRenderer","super","colorBitOn","colorBitOff","colorStrokeOn","colorStrokeOff","ctx","getContext","clearRect","widthEachBit","heightEachBit","lineWidth","renderBitsOfValue","fillColor","strokeColor","strokeStyle","fillStyle","beginPath","moveToNextBit","drawBit","fill","stroke","CanvasRenderers","Ellipse","w","moveTo","radW","radH","ellipse","PI","Rect","context","rect","ascii_renderer_AsciiRenderer","characterBitOn","characterBitOff","innerHTML","RendererTypes","renderer_builder_RendererBuilder","rendererType","ASCII","CanvasSquare","CanvasCircle","panel_player_PanelPlayer","onPanelUpdate","onReachingBoundary","_index","fps","_renderer","renderer","_sequence","PanelUpdate","ReachingBoundary","_fps","_fpsIntervalLengthInMs","_render","play","_startLoop","stop","_shouldUpdate","resume","pause","step","_nextPanelFrame","seek","frame","seekDescription","setRendererFromBuilder","build","_then","Date","now","_loop","requestAnimationFrame","bind","_callIfReadyForNextFrame","callback","_now","_elapsed","led_matrix_player_LedMatrixPlayer","_panelPlayer","panelUpdate","reachingBoundary"],"mappings":"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","file":"./src/led-matrix.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ledMatrix\"] = factory();\n\telse\n\t\troot[\"ledMatrix\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class Exception {\n    static throwIfNull(value, valueDescription) {\n        if (value == null) {\n            throw `${valueDescription} property cannot be set to null`;\n        }\n    }\n    static throwIfNegative(value, valueDescription) {\n        if (value < 0) {\n            throw `${valueDescription} property cannot be set to a negative number (${value})`;\n        }\n    }\n    static throwIfNotBetween(value, valueDescription, rangeFrom, rangeTo) {\n        if (value < rangeFrom || value > rangeTo) {\n            throw `Seek expects a value between ${rangeFrom} and ${rangeTo}`;\n        }\n    }\n    static getDescriptionForProperty(className, methodName) {\n        return `${className}'s ${methodName}`;\n    }\n}\n//# sourceMappingURL=exception.js.map","import { Exception } from \"../utils/exception\";\nexport class Character {\n    constructor(pattern, output, width) {\n        this.CLASS_NAME = Character.name;\n        this._pattern = pattern;\n        this._output = output;\n        if (output.size >= width) {\n            this._width = width;\n        }\n        else {\n            throw `Output size (${output.size}) can't be smaller than the character's width (${width})`;\n        }\n        if (output.size % width === 0) {\n            this._height = output.size / width;\n        }\n        else {\n            throw `Output size (${output.size}) must be divisible by the character's width (${width})`;\n        }\n    }\n    get width() {\n        return this._width;\n    }\n    get height() {\n        return this._height;\n    }\n    get pattern() {\n        return this._pattern;\n    }\n    get output() {\n        return this._output;\n    }\n    getColumn(index) {\n        Exception.throwIfNotBetween(index, Exception.getDescriptionForProperty(this.CLASS_NAME, 'getColumn'), 0, this._width - 1);\n        let column = [];\n        for (let i = 0; i < this._height; i++) {\n            column.push(this._output.atIndex(i * this._width + index));\n        }\n        return column;\n    }\n    getRow(index) {\n        Exception.throwIfNotBetween(index, Exception.getDescriptionForProperty(this.CLASS_NAME, 'getRow'), 0, this._height - 1);\n        let row = [];\n        for (let i = 0; i < this._width; i++) {\n            row.push(this._output.atIndex(index * this._width + i));\n        }\n        return row;\n    }\n    hasPattern(input) {\n        return this._pattern == input;\n    }\n}\n;\n//# sourceMappingURL=character.js.map","export class BitArray {\n    constructor(values) {\n        this._bitPerIndex = 8;\n        this._size = values.length;\n        this._array = new Uint8Array(Math.ceil(this._size / this._bitPerIndex));\n        this._pointer = 0;\n        this.pushAll(values);\n    }\n    get size() {\n        return this._size;\n    }\n    push(value) {\n        if (this._pointer == this._size) {\n            throw `Bit array max size reached (${this._size})`;\n        }\n        const mask = this._createMask(this._pointer);\n        if (this._matchesMask(mask, this._array[this._arrayIndex(this._pointer)])) {\n            if (value === 0) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        else {\n            if (value === 1) {\n                this._array[this._arrayIndex(this._pointer)] ^= mask;\n            }\n        }\n        this._pointer++;\n    }\n    pushAll(values) {\n        values.forEach((value) => {\n            this.push(value);\n        });\n    }\n    atIndex(index) {\n        if (index > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const mask = this._createMask(index);\n        return this._matchesMask(mask, this._array[this._arrayIndex(index)]) ? 1 : 0;\n    }\n    atIndexRange(index, count) {\n        if (index + count - 1 > this._size) {\n            throw `Index (${index}) exceeds the size of the bit array (${this._size})`;\n        }\n        const values = [];\n        for (let i = 0; i < count; i++) {\n            const mask = this._createMask(index + i);\n            values.push(this._matchesMask(mask, this._array[this._arrayIndex(index + i)]) ? 1 : 0);\n        }\n        return values;\n    }\n    _matchesMask(mask, value) {\n        return (mask & value) != 0;\n    }\n    _createMask(index) {\n        return 1 << (this._bitPerIndex - 1) - this._arrayIndexOffset(index);\n    }\n    _arrayIndex(index) {\n        return Math.floor(index / this._bitPerIndex);\n    }\n    _arrayIndexOffset(index) {\n        return index % this._bitPerIndex;\n    }\n}\n;\n//# sourceMappingURL=bit-array.js.map","export class NearestNeighbor {\n    static scale(matrix, width, factor) {\n        const ratio = 1 / factor;\n        const h1 = matrix.length / width;\n        const w2 = width * factor;\n        const h2 = h1 * factor;\n        let finalMatrix = new Array(w2 * h2);\n        for (let i = 0; i < h2; i++) {\n            for (let j = 0; j < w2; j++) {\n                const px = Math.floor(j * ratio);\n                const py = Math.floor(i * ratio);\n                finalMatrix[(i * w2) + j] = matrix[(py * width) + px];\n            }\n        }\n        return finalMatrix;\n    }\n}\n//# sourceMappingURL=character-sizer.js.map","export class Event {\n    constructor() {\n        this.handlers = [];\n    }\n    on(handler) {\n        this.handlers.push(handler);\n    }\n    off(handler) {\n        this.handlers = this.handlers.filter(h => h !== handler);\n    }\n    trigger(data) {\n        this.handlers.slice(0).forEach(h => h(data));\n    }\n    expose() {\n        return this;\n    }\n}\n//# sourceMappingURL=event.js.map","import { Character } from './character';\nimport { BitArray } from '../utils/bit-array';\nimport { NearestNeighbor } from \"./character-sizer\";\nimport { Event } from '../utils/event';\nimport { Exception } from '../utils/exception';\nexport class Board {\n    constructor(params) {\n        this.CLASS_NAME = Board.name;\n        this.onPropertyChange = new Event();\n        this._characters = [];\n        this._letterSpacing = params.letterSpacing;\n        this.padding = params.padding;\n        this._size = params.size;\n        this.onPropertyChange.trigger();\n    }\n    get PropertyChange() { return this.onPropertyChange.expose(); }\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n    get padding() {\n        return this._padding;\n    }\n    get characters() {\n        return this._characters;\n    }\n    get input() {\n        return this._input;\n    }\n    get size() {\n        return this._size;\n    }\n    get width() {\n        const paddingAndSpacingWidth = this._horizontalPaddingWidth() + this._totalSpacingWidth();\n        if (this._characters.length > 0) {\n            return paddingAndSpacingWidth + this._characters\n                .map(character => character.width)\n                .reduce((accumulator, current) => accumulator + current);\n        }\n        else {\n            return paddingAndSpacingWidth;\n        }\n    }\n    get height() {\n        if (this._characters.length > 0) {\n            return this._verticalPaddingWidth() +\n                this._characters\n                    .reduce((accumulator, current) => current.height > accumulator.height ? current : accumulator).height;\n        }\n        else {\n            return this._verticalPaddingWidth();\n        }\n    }\n    set letterSpacing(value) {\n        const letterSpacingDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'padding');\n        Exception.throwIfNull(value, letterSpacingDescription);\n        Exception.throwIfNegative(value, letterSpacingDescription);\n        const prevLetterSpacing = this._letterSpacing;\n        this._letterSpacing = value;\n        this._emitPropertyChangeEvent(value, prevLetterSpacing);\n    }\n    set padding(value) {\n        const paddingDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'padding');\n        value.forEach(x => {\n            Exception.throwIfNull(x, paddingDescription);\n            Exception.throwIfNegative(x, paddingDescription);\n        });\n        const nextPadding = value.length == 1 ?\n            [value[0], value[0], value[0], value[0]] :\n            value.length == 2 ?\n                [value[0], value[1], value[0], value[1]] :\n                value;\n        if (this._padding) {\n            let prevPadding = [...this._padding];\n            this._padding = [nextPadding[0], nextPadding[1], nextPadding[2], nextPadding[3]];\n            if (this._padding[0] != prevPadding[0] ||\n                this._padding[1] != prevPadding[1] ||\n                this._padding[2] != prevPadding[2] ||\n                this._padding[3] != prevPadding[3]) {\n                this.onPropertyChange.trigger();\n            }\n        }\n        else {\n            this._padding = [nextPadding[0], nextPadding[1], nextPadding[2], nextPadding[3]];\n            this.onPropertyChange.trigger();\n        }\n    }\n    getColumnAtIndex(index) {\n        index %= this.width;\n        if (index < this._padding[3] || index >= this.width - this._padding[1]) {\n            return this._createBitOffArrayOfLength(this.height + this._verticalPaddingWidth());\n        }\n        let accumulator = this._padding[3];\n        let toReturn;\n        this._characters.some((character) => {\n            accumulator += character.width;\n            if (accumulator > index) {\n                const characterColumn = character.getColumn(index - (accumulator - character.width));\n                toReturn = this._createBitOffArrayOfLength(this._padding[0])\n                    .concat(characterColumn)\n                    .concat(this._createBitOffArrayOfLength(this._padding[2]))\n                    .concat(characterColumn.length < this.height ? this._createBitOffArrayOfLength(this.height - characterColumn.length) : []);\n                return true;\n            }\n            accumulator += this._letterSpacing;\n            if (accumulator > index) {\n                toReturn = this._createBitOffArrayOfLength(this.height + this._verticalPaddingWidth());\n                return true;\n            }\n        });\n        return toReturn;\n    }\n    getRowAtIndex(index) {\n        index %= this.height;\n        if (index < this._padding[0] || index >= this.height - this._padding[2]) {\n            return this._createBitOffArrayOfLength(this.width);\n        }\n        let charactersWithSpace = [].concat.apply([], this._characters.map(x => x.getRow(index - this._padding[0]).concat(this._createBitOffArrayOfLength(this._letterSpacing))));\n        charactersWithSpace = charactersWithSpace.slice(0, charactersWithSpace.length - this._letterSpacing);\n        return this._createBitOffArrayOfLength(this._padding[3])\n            .concat(charactersWithSpace)\n            .concat(this._createBitOffArrayOfLength(this._padding[1]));\n    }\n    load(input, dictionnary, size = 1) {\n        const escapeCharacter = '\\\\';\n        const delimiterWord = {\n            start: \"(\",\n            end: \")\"\n        };\n        this._characters = [];\n        this._size = size;\n        for (let i = 0; i < input.length; i++) {\n            let characterBuffer = input[i];\n            if (characterBuffer === escapeCharacter) {\n                if (i == input.length - 1) {\n                    throw `No character escaped at the end of the string input`;\n                }\n                characterBuffer = input[++i];\n            }\n            else if (characterBuffer === delimiterWord.start && (i === 0 || input[i - 1] !== escapeCharacter)) {\n                do {\n                    characterBuffer += input[++i];\n                    if (i == input.length) {\n                        throw `Could not find the ending delimiter \"${delimiterWord.end}\" for pattern ${characterBuffer}`;\n                    }\n                } while (input[i] != delimiterWord.end);\n                characterBuffer = characterBuffer.slice(1, -1);\n            }\n            const character = dictionnary.find(characterBuffer);\n            this._characters.push(new Character(character.pattern, new BitArray(NearestNeighbor.scale(character.output.atIndexRange(0, character.output.size), character.width, this._size)), character.width * this._size));\n        }\n        this._input = input;\n        this.onPropertyChange.trigger();\n    }\n    _horizontalPaddingWidth() {\n        return this._padding[1] + this._padding[3];\n    }\n    _totalSpacingWidth() {\n        return (this._characters.length - 1) * this._letterSpacing;\n    }\n    _verticalPaddingWidth() {\n        return this._padding[0] + this._padding[2];\n    }\n    _createBitOffArrayOfLength(length) {\n        return Array.apply(null, Array(length)).map(() => 0);\n    }\n    _emitPropertyChangeEvent(value, prevValue) {\n        if (value != prevValue) {\n            this.onPropertyChange.trigger();\n        }\n    }\n}\n;\n//# sourceMappingURL=board.js.map","import { Exception } from '../utils/exception';\nimport { Event } from '../utils/event';\nexport class Panel {\n    constructor(params) {\n        this.CLASS_NAME = Panel.name;\n        this._initiated = false;\n        this.onNewSequence = new Event();\n        this._params = params;\n        this._initiated = true;\n        this.updateCurrentSequence();\n        this._params.board.PropertyChange.on(() => {\n            this.updateCurrentSequence();\n        });\n    }\n    get NewSequence() { return this.onNewSequence.expose(); }\n    get width() {\n        return this._params.width;\n    }\n    get board() {\n        return this._params.board;\n    }\n    get increment() {\n        return this._params.increment;\n    }\n    get reverse() {\n        return this._params.reverse;\n    }\n    get scroller() {\n        return this._params.scroller;\n    }\n    set width(value) {\n        const widthDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'width');\n        Exception.throwIfNull(value, widthDescription);\n        Exception.throwIfNegative(value, widthDescription);\n        if (this._params.width != value) {\n            this._params.width = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set board(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'board'));\n        if (this._params.board != value) {\n            this._params.board = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set increment(value) {\n        const fpsDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'fps');\n        Exception.throwIfNull(value, fpsDescription);\n        Exception.throwIfNegative(value, fpsDescription);\n        if (this._params.increment != value) {\n            this._params.increment = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set reverse(value) {\n        const reverseDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'reverse');\n        Exception.throwIfNull(value, reverseDescription);\n        if (value != this._params.reverse) {\n            this._params.reverse = value;\n            this.updateCurrentSequence();\n        }\n    }\n    set scroller(value) {\n        const reverseDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'reverse');\n        Exception.throwIfNull(value, reverseDescription);\n        if (value != this._params.scroller) {\n            this._params.scroller = value;\n            this.updateCurrentSequence();\n        }\n    }\n    GetCurrentSequence() {\n        let sequence = [];\n        let panelIndex = 0;\n        for (let i = 0; i <= this._params.scroller.loopEndIndex(this); i++) {\n            panelIndex = this._tickPanelIndex(panelIndex);\n            sequence.push(this._params.scroller.generatePanelFrameAtIndex(panelIndex, this));\n        }\n        return sequence;\n    }\n    updateCurrentSequence() {\n        if (this._initiated) {\n            const sequence = this.GetCurrentSequence();\n            this.onNewSequence.trigger(sequence);\n        }\n    }\n    _tickPanelIndex(index) {\n        return this._params.reverse ? this._decrementIndex(index) : this._incrementIndex(index);\n    }\n    _incrementIndex(index) {\n        return index >= this._params.scroller.loopEndIndex(this) ? 0 : index + this._params.increment;\n    }\n    _decrementIndex(index) {\n        return index === 0 ? this._params.scroller.loopEndIndex(this) : index - this._params.increment;\n    }\n}\n;\n//# sourceMappingURL=panel.js.map","export class CharacterDictionary {\n    constructor() {\n        this._characters = [];\n    }\n    get characters() {\n        return this._characters;\n    }\n    get height() {\n        return Math.max.apply(Math, this._characters.map(x => x.height));\n    }\n    get length() {\n        return this._characters.length;\n    }\n    find(input) {\n        const character = this._characters.filter(x => x.hasPattern(input));\n        if (character && character.length > 0) {\n            return character[0];\n        }\n        throw `Could not find character ${input} in the alphabet`;\n    }\n    add(pendingCharacters) {\n        const pendingPatterns = pendingCharacters.map(x => x.pattern);\n        const duplicatedPendingPatterns = pendingPatterns.filter((value, index, array) => {\n            return array.indexOf(value) != index;\n        });\n        if (duplicatedPendingPatterns.length > 0) {\n            throw `Pattern already used by another pending character`;\n        }\n        if (this._characters.length > 0) {\n            const alreadyAddedPatterns = this._characters.map(x => x.pattern);\n            const duplicatedPatterns = alreadyAddedPatterns.filter((value) => {\n                return pendingPatterns.indexOf(value) != -1;\n            });\n            if (duplicatedPatterns.length > 0) {\n                throw `Pattern already used by another character`;\n            }\n        }\n        this._characters.push(...pendingCharacters);\n    }\n    edit(pendingCharacter) {\n        let edited = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !edited) {\n                arr[index] = pendingCharacter;\n                edited = true;\n            }\n        });\n        if (!edited) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted edit operation`;\n        }\n    }\n    delete(pendingCharacter) {\n        let deleted = false;\n        this._characters.forEach((character, index, arr) => {\n            if (character.pattern == pendingCharacter.pattern && !deleted) {\n                arr.splice(index, 1);\n                deleted = true;\n            }\n        });\n        if (!deleted) {\n            throw `Could not find character ${pendingCharacter.pattern} in the alphabet. Aborted delete operation`;\n        }\n    }\n}\n;\n//# sourceMappingURL=character-dictionary.js.map","export class SideScroller {\n    loopEndIndex(params) {\n        return params.board.width - 1;\n    }\n    generatePanelFrameAtIndex(currentIndex, panel) {\n        let columns = [];\n        for (let i = 0; i < panel.width; i++) {\n            columns.push(panel.board.getColumnAtIndex(currentIndex + i));\n        }\n        let panelFrame = [];\n        for (let i = 0; i < columns[0].length; i++) {\n            panelFrame.push(columns.map(x => x[i]));\n        }\n        return panelFrame;\n    }\n}\n//# sourceMappingURL=side-scroller.js.map","import { Board } from \"./board\";\nimport { Panel } from \"./panel\";\nimport { Event } from \"../utils/event\";\nimport { CharacterDictionary } from \"./character-dictionary\";\nimport { SideScroller } from \"./scrollers/side-scroller\";\nexport class LedMatrix {\n    constructor(params) {\n        this.onReady = new Event();\n        this._params = this._validateParameters(params);\n        this._panel = new Panel({\n            board: new Board({\n                letterSpacing: this._params.letterSpacing,\n                padding: this._params.padding,\n                size: this._params.size\n            }),\n            increment: this._params.increment,\n            reverse: this._params.reverse,\n            width: this._params.panelWidth,\n            scroller: this._params.scroller\n        });\n        this.event = {\n            newSequence: this._panel.NewSequence\n        };\n        this._dictionary = new CharacterDictionary();\n    }\n    get Ready() { return this.onReady.expose(); }\n    get size() {\n        return this._size;\n    }\n    set size(value) {\n        this._size = value;\n        this._panel.board.load(this.input, this._dictionary, this.size);\n    }\n    get loopEndIndex() {\n        return this._panel.scroller.loopEndIndex(this._panel);\n    }\n    addCharacters(characters) {\n        this._dictionary.add(characters);\n    }\n    addCharacter(character) {\n        this._dictionary.add([character]);\n    }\n    editCharacter(character) {\n        this._dictionary.edit(character);\n    }\n    deleteCharacter(character) {\n        this._dictionary.delete(character);\n    }\n    get loadedCharacters() {\n        return this._dictionary.characters;\n    }\n    get usedCharacters() {\n        return this._panel.board.characters;\n    }\n    set letterSpacing(value) {\n        this._panel.board.letterSpacing = value;\n    }\n    get letterSpacing() {\n        return this._panel.board.letterSpacing;\n    }\n    set padding(value) {\n        this._panel.board.padding = value;\n    }\n    get padding() {\n        return this._panel.board.padding;\n    }\n    get width() {\n        return this._panel.board.width;\n    }\n    get height() {\n        return this._panel.board.height;\n    }\n    set input(value) {\n        this._panel.board.load(value, this._dictionary);\n    }\n    get input() {\n        return this._panel.board.input;\n    }\n    get sequence() {\n        return this._panel.GetCurrentSequence();\n    }\n    set scroller(value) {\n        this._panel.scroller = value;\n    }\n    get scroller() {\n        return this._panel.scroller;\n    }\n    get reverse() {\n        return this._panel.reverse;\n    }\n    set increment(value) {\n        this._panel.increment = value;\n    }\n    get increment() {\n        return this._panel.increment;\n    }\n    set reverse(value) {\n        this._panel.reverse = value;\n    }\n    set viewportWidth(value) {\n        this._panel.width = value;\n    }\n    get viewportWidth() {\n        return this._panel.width;\n    }\n    _validateParameters(params) {\n        let defaultParams = {\n            increment: 1,\n            scroller: new SideScroller(),\n            reverse: false,\n            panelWidth: 80,\n            letterSpacing: 2,\n            padding: [0, 4],\n            size: 1\n        };\n        if (params) {\n            params.letterSpacing = this._valueOrDefault(params.letterSpacing, defaultParams.letterSpacing);\n            params.padding = this._valueOrDefault(params.padding, defaultParams.padding);\n            params.size = this._valueOrDefault(params.size, defaultParams.size);\n            params.increment = this._valueOrDefault(params.increment, defaultParams.increment);\n            params.scroller = this._valueOrDefault(params.scroller, defaultParams.scroller);\n            params.reverse = this._valueOrDefault(params.reverse, defaultParams.reverse);\n            params.panelWidth = this._valueOrDefault(params.panelWidth, defaultParams.panelWidth);\n            return params;\n        }\n        return defaultParams;\n    }\n    _valueOrDefault(value, defaultValue) {\n        return value ? value : defaultValue;\n    }\n}\n//# sourceMappingURL=led-matrix.js.map","export class VerticalScroller {\n    loopEndIndex(panel) {\n        return panel.board.height - 1;\n    }\n    generatePanelFrameAtIndex(currentIndex, panel) {\n        let display = [];\n        for (let i = 0; i < panel.board.height; i++) {\n            let row;\n            row = panel.board.getRowAtIndex(currentIndex + i);\n            display.push(row.slice(0, panel.width));\n        }\n        return display;\n    }\n}\n//# sourceMappingURL=vertical-scroller.js.map","import { SideScroller } from \"./side-scroller\";\nimport { VerticalScroller } from \"./vertical-scroller\";\nexport var ScrollerTypes;\n(function (ScrollerTypes) {\n    ScrollerTypes[ScrollerTypes[\"Side\"] = 0] = \"Side\";\n    ScrollerTypes[ScrollerTypes[\"Vertical\"] = 1] = \"Vertical\";\n})(ScrollerTypes || (ScrollerTypes = {}));\nexport class ScrollerBuilder {\n    static build(scrollerType, elementId) {\n        switch (scrollerType) {\n            case ScrollerTypes.Side:\n                return new SideScroller();\n            case ScrollerTypes.Vertical:\n                return new VerticalScroller();\n        }\n    }\n}\n//# sourceMappingURL=scroller-builder.js.map","import { CanvasRenderer } from \"./canvas-renderer\";\nexport var CanvasRenderers;\n(function (CanvasRenderers) {\n    class Ellipse extends CanvasRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n            ctx.moveTo(w * (j + 1), h * (i + 1) - h / 2);\n        }\n        drawBit(ctx, i, j, w, h) {\n            const radW = w / 2;\n            const radH = h / 2;\n            ctx.ellipse(w * j + radW, h * i + radH, radW, radH, 0, 0, 2 * Math.PI);\n        }\n    }\n    CanvasRenderers.Ellipse = Ellipse;\n    class Rect extends CanvasRenderer {\n        constructor(parameters) {\n            super(parameters);\n        }\n        drawBit(context, i, j, w, h) {\n            return context.rect(w * j, h * i, w, h);\n        }\n        moveToNextBit(ctx, i, j, w, h) {\n        }\n    }\n    CanvasRenderers.Rect = Rect;\n})(CanvasRenderers || (CanvasRenderers = {}));\n//# sourceMappingURL=canvas-renderers.js.map","import { CanvasRenderers } from \"./canvas-renderers\";\nimport { AsciiRenderer } from \"./ascii-renderer\";\nexport var RendererTypes;\n(function (RendererTypes) {\n    RendererTypes[RendererTypes[\"ASCII\"] = 0] = \"ASCII\";\n    RendererTypes[RendererTypes[\"CanvasSquare\"] = 1] = \"CanvasSquare\";\n    RendererTypes[RendererTypes[\"CanvasCircle\"] = 2] = \"CanvasCircle\";\n})(RendererTypes || (RendererTypes = {}));\nexport class RendererBuilder {\n    static build(rendererType, elementId) {\n        switch (rendererType) {\n            case RendererTypes.ASCII:\n                return new AsciiRenderer({\n                    elementId: elementId\n                });\n            case RendererTypes.CanvasSquare:\n                return new CanvasRenderers.Rect({\n                    elementId: elementId\n                });\n            case RendererTypes.CanvasCircle:\n                return new CanvasRenderers.Ellipse({\n                    elementId: elementId\n                });\n        }\n    }\n}\n//# sourceMappingURL=renderer-builder.js.map","import { Character } from \"./character\";\nimport { BitArray } from \"../utils/bit-array\";\nexport class CharactersJSON {\n    static import(path, success) {\n        fetch(path)\n            .then((response) => {\n            return response.text();\n        })\n            .then((response) => {\n            success(CharactersJSON.parse(response));\n        })\n            .catch((error) => {\n            throw `Couldn't fetch file: ${path}`;\n        });\n    }\n    static export() {\n    }\n    static parse(json) {\n        const data = JSON.parse(json);\n        if (data == null) {\n            throw 'Invalid character json file';\n        }\n        if (data.characters == null) {\n            throw 'Invalid character json file: Can\\'t find property characters';\n        }\n        return data.characters.map(x => {\n            if (x.pattern == null) {\n                throw 'Invalid character json file: Can\\'t find property patterns for a character';\n            }\n            if (x.output == null) {\n                throw 'Invalid character json file: Can\\'t find property output for a character';\n            }\n            if (x.width == null) {\n                throw 'Invalid character json file: Can\\'t find property width for a character';\n            }\n            return new Character(x.pattern, new BitArray(x.output.map(x => x)), x.width);\n        });\n    }\n    static stringify(characters) {\n        if (characters == null || characters.length == 0) {\n            return JSON.stringify(\"\");\n        }\n        return JSON.stringify({\n            characters: characters.map(x => {\n                return {\n                    patterns: x.pattern,\n                    output: x.output.atIndexRange(0, x.output.size),\n                    width: x.width\n                };\n            })\n        });\n    }\n}\n//# sourceMappingURL=character-json.js.map","export class Renderer {\n    constructor(parameters) {\n    }\n    render(display) {\n        if (this._parameters.element == null) {\n            this._parameters.element = document.getElementById(this._parameters.elementId);\n            if (this._parameters.element == null) {\n                throw `Could not find the element to render led matrix`;\n            }\n        }\n        else {\n            if (this._parameters.element.clientHeight == 0 || this._parameters.element.clientWidth == 0) {\n                this._parameters.element = document.getElementById(this._parameters.elementId);\n            }\n        }\n    }\n}\n//# sourceMappingURL=renderer.js.map","import { Renderer } from \"./renderer\";\nexport class CanvasRenderer extends Renderer {\n    constructor(parameters) {\n        super(parameters);\n        this._parameters = {\n            elementId: parameters.elementId,\n            element: parameters.element,\n            colorBitOn: parameters.colorBitOn ? parameters.colorBitOn : \"#00B16A\",\n            colorBitOff: parameters.colorBitOff ? parameters.colorBitOff : \"#22313F\",\n            colorStrokeOn: parameters.colorStrokeOn ? parameters.colorStrokeOn : \"#67809F\",\n            colorStrokeOff: parameters.colorStrokeOff ? parameters.colorStrokeOff : \"#67809F\"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    get element() {\n        return this._parameters.element;\n    }\n    render(display) {\n        super.render(display);\n        const ctx = this.element.getContext(\"2d\");\n        if (this.element.width != this.element.clientWidth && this.element.clientWidth != 0) {\n            this.element.width = this.element.clientWidth;\n        }\n        if (this.element.height != this.element.clientHeight && this.element.clientHeight != 0) {\n            this.element.height = this.element.clientHeight;\n        }\n        ctx.clearRect(0, 0, this.element.width, this.element.height);\n        const widthEachBit = Math.floor(this.element.width / display[0].length);\n        const heightEachBit = Math.floor(this.element.height / display.length);\n        ctx.lineWidth = 1;\n        const renderBitsOfValue = (value, fillColor, strokeColor) => {\n            ctx.strokeStyle = strokeColor;\n            ctx.fillStyle = fillColor;\n            ctx.beginPath();\n            for (var i = 0; i < display.length; i++) {\n                for (var j = 0; j < display[i].length; j++) {\n                    if (display[i][j] == value) {\n                        this.moveToNextBit(ctx, i, j, widthEachBit, heightEachBit);\n                        this.drawBit(ctx, i, j, widthEachBit, heightEachBit);\n                    }\n                }\n            }\n            ctx.fill();\n            ctx.stroke();\n        };\n        renderBitsOfValue(0, this._parameters.colorBitOff, this._parameters.colorStrokeOff);\n        renderBitsOfValue(1, this._parameters.colorBitOn, this._parameters.colorStrokeOn);\n    }\n}\n//# sourceMappingURL=canvas-renderer.js.map","import { Renderer } from \"./renderer\";\nexport class AsciiRenderer extends Renderer {\n    constructor(parameters) {\n        super(parameters);\n        this._parameters = {\n            elementId: parameters.elementId,\n            element: parameters.element,\n            characterBitOn: parameters.characterBitOn ? parameters.characterBitOn : \"X\",\n            characterBitOff: parameters.characterBitOff ? parameters.characterBitOff : \" \"\n        };\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    render(display) {\n        super.render(display);\n        let output = \"\";\n        for (var i = 0; i < display.length; i++) {\n            for (var j = 0; j < display[i].length; j++) {\n                output += display[i][j] == 1 ?\n                    this._parameters.characterBitOn :\n                    this._parameters.characterBitOff;\n            }\n            output += '\\n';\n        }\n        this._parameters.element.innerHTML = output;\n    }\n}\n//# sourceMappingURL=ascii-renderer.js.map","import { Event } from '../utils/event';\nimport { Exception } from '../utils/exception';\nimport { RendererBuilder } from './rendering/renderer-builder';\nexport class PanelPlayer {\n    constructor(params) {\n        this.CLASS_NAME = PanelPlayer.name;\n        this.onPanelUpdate = new Event();\n        this.onReachingBoundary = new Event();\n        this._index = 0;\n        this.fps = params.fps;\n        this._renderer = params.renderer;\n        this._sequence = params.sequence;\n    }\n    get PanelUpdate() { return this.onPanelUpdate.expose(); }\n    get ReachingBoundary() { return this.onReachingBoundary.expose(); }\n    get sequence() {\n        return this._sequence;\n    }\n    get index() {\n        return this._index;\n    }\n    get fps() {\n        return this._fps;\n    }\n    get renderer() {\n        return this._renderer;\n    }\n    set sequence(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'sequence'));\n        this._sequence = value;\n    }\n    set fps(value) {\n        const fpsDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'fps');\n        Exception.throwIfNull(value, fpsDescription);\n        Exception.throwIfNotBetween(value, fpsDescription, 0, 60);\n        this._fps = value;\n        this._fpsIntervalLengthInMs = 1000 / this._fps;\n    }\n    set renderer(value) {\n        Exception.throwIfNull(value, Exception.getDescriptionForProperty(this.CLASS_NAME, 'renderer'));\n        this._renderer = value;\n        this._render();\n    }\n    play() {\n        this._index = 0;\n        this._render();\n        this._startLoop();\n    }\n    stop() {\n        this._index = 0;\n        this._render();\n        this._shouldUpdate = false;\n    }\n    resume() {\n        this._startLoop();\n    }\n    pause() {\n        this._shouldUpdate = false;\n    }\n    step() {\n        this._nextPanelFrame();\n    }\n    seek(frame) {\n        const seekDescription = Exception.getDescriptionForProperty(this.CLASS_NAME, 'seek');\n        Exception.throwIfNull(frame, seekDescription);\n        Exception.throwIfNotBetween(frame, seekDescription, 0, this._sequence.length);\n        this._index = frame;\n        this._render();\n    }\n    setRendererFromBuilder(value) {\n        this.renderer = RendererBuilder.build(value.rendererType, value.elementId);\n    }\n    _nextPanelFrame() {\n        Exception.throwIfNull(this._sequence, Exception.getDescriptionForProperty(this.CLASS_NAME, 'sequence'));\n        this._incrementIndex();\n        this._render();\n    }\n    _render() {\n        this.onPanelUpdate.trigger({ display: this._sequence[this._index] });\n        this._renderer.render(this._sequence[this._index]);\n    }\n    _incrementIndex() {\n        const reachedBoundary = this._index >= this._sequence.length;\n        if (reachedBoundary) {\n            this.onReachingBoundary.trigger();\n        }\n        this._index = (this._index + 1) % this._sequence.length;\n    }\n    _startLoop() {\n        this._then = Date.now();\n        this._shouldUpdate = true;\n        this._loop();\n    }\n    _loop() {\n        requestAnimationFrame(this._loop.bind(this));\n        if (this._shouldUpdate) {\n            this._callIfReadyForNextFrame(this._nextPanelFrame.bind(this));\n        }\n    }\n    _callIfReadyForNextFrame(callback) {\n        this._now = Date.now();\n        this._elapsed = this._now - this._then;\n        if (this._elapsed > this._fpsIntervalLengthInMs) {\n            this._then = this._now - (this._elapsed % this._fpsIntervalLengthInMs);\n            callback();\n        }\n    }\n}\n;\n//# sourceMappingURL=panel-player.js.map","import { Event } from \"../utils/event\";\nimport { PanelPlayer } from \"./panel-player\";\nimport { CanvasRenderers } from \"./rendering/canvas-renderers\";\nexport class LedMatrixPlayer {\n    constructor(sequence, params) {\n        this.onReady = new Event();\n        this._params = this._validateParameters(params);\n        this._panelPlayer = new PanelPlayer({\n            fps: this._params.fps,\n            renderer: this._params.renderer,\n            sequence: sequence\n        });\n        this.event = {\n            panelUpdate: this._panelPlayer.PanelUpdate,\n            reachingBoundary: this._panelPlayer.ReachingBoundary\n        };\n    }\n    get Ready() { return this.onReady.expose(); }\n    index() {\n        this._panelPlayer.index;\n    }\n    set renderer(value) {\n        this._panelPlayer.renderer = value;\n    }\n    get renderer() {\n        return this._panelPlayer.renderer;\n    }\n    set fps(value) {\n        this._panelPlayer.fps = value;\n    }\n    get fps() {\n        return this._panelPlayer.fps;\n    }\n    set sequence(value) {\n        this._panelPlayer.sequence = value;\n    }\n    get sequence() {\n        return this._panelPlayer.sequence;\n    }\n    play() {\n        this._panelPlayer.play();\n    }\n    stop() {\n        this._panelPlayer.stop();\n    }\n    pause() {\n        this._panelPlayer.pause();\n    }\n    resume() {\n        this._panelPlayer.resume();\n    }\n    step() {\n        this._panelPlayer.step();\n    }\n    seek(frame) {\n        this._panelPlayer.seek(frame);\n    }\n    _validateParameters(params) {\n        let defaultParams = {\n            fps: 30,\n            renderer: new CanvasRenderers.Rect({\n                elementId: 'led-matrix'\n            })\n        };\n        if (params) {\n            params.fps = this._valueOrDefault(params.fps, defaultParams.fps);\n            params.renderer = this._valueOrDefault(params.renderer, defaultParams.renderer);\n            return params;\n        }\n        return defaultParams;\n    }\n    _valueOrDefault(value, defaultValue) {\n        return value ? value : defaultValue;\n    }\n}\n//# sourceMappingURL=led-matrix-player.js.map"],"sourceRoot":""}